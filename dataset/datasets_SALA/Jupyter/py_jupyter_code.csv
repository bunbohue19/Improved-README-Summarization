repo_url,description,readme
https://github.com/JasonJWilliamsNY/biocoding_2015,Coursework for BioCoding 2015 Course,
https://github.com/bollwyvl/es6-widget-example,an evolving approach for writing Jupyter/IPython widgets with ES6/ES2015,http://i.imgur.com/EtoyFIo.jpghttps://github.com/ipython/ipywidgets/issues/14https://github.com/ipython/ipywidgetshttp://www.ecma-international.org/ecma-262/6.0/#sec-class-definitionshttp://benmccormick.org/2015/07/06/backbone-and-es6-classes-revisited/https://docs.npmjs.com/cli/run-scripthttps://www.npmjs.com/package/watchhttps://babeljs.iohttps://www.npmjs.com/package/babel-preset-es2015https://www.npmjs.com/package/babel-plugin-transform-es2015-modules-amdrequire.jshttps://esdoc.orghttp://eslint.orghttps://mochajs.orghttp://browserify.org/npm
https://github.com/k-sokolov/ensemble,Identifying fraudulent transactions and banknotes as anomaly detection and classification tasks,
https://github.com/adbeyer23/MTA-Analysis-Project,Analyzing NYC subway data,
https://github.com/chakpongchung/Spherical-Harmonics-Expansion,spherical-harmonics-expansion using boost and gsl,http://stsdas.stsci.edu/download/mdroe/plotting/_images/entry1.png
https://github.com/lila/spot_price_history,"IPython notebook that uses Boto, Pandas and MatPlotLib to show historical price data",https://medium.com/cloud-uprising/the-data-science-of-aws-spot-pricing-8bed655caed2https://github.com/lila/spot_price_history/blob/master/notebook/SpotPriceHistory.ipynb
https://github.com/securesystemslab/zippy,ZipPy is a Python3 interpreter on top of Truffle framework,http://ssllab.org/zippy_logo.jpeghttps://travis-ci.org/securesystemslab/zippyhttps://travis-ci.org/securesystemslab/zippyhttps://travis-ci.org/securesystemslab/zippyhttps://travis-ci.org/securesystemslab/zippyhttps://travis-ci.org/securesystemslab/zippyhttps://www.python.org/http://openjdk.java.net/projects/graal/https://ssllab.orghttp://www.uci.edu/http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.htmlmxPATH$ZIPPY_HOME/zippy/mx.zippy/envhttps://github.com/securesystemslab/zippy/tree/master/doc/graal.mdhttps://github.com/securesystemslab/zippy/wikihttps://github.com/securesystemslab/zippy/wiki
https://github.com/Tiryoh/probrobo_note,Probabilistic Robotics Test Repository,https://github.com/ryuichiueda/probrobo_practicehttps://github.com/Kuwamai/probrobo_note
https://github.com/cben/ansible_jupyter_kernel,[PyCon IL 2017] WIP Jupyter kernel for executing Ansible plays,pip install ansible_jupyter_kernelpip install -e .kernel.json/usr/share/jupyter/kernels/ansible/~/.local/share/jupyter/kernels/ansible/<virtualenv>/share/jupyter/kernels/ansible/kernel.json!ansible%%writefile ...playbook.yml!ansible-notebook
https://github.com/ezdatascience/ezpython,ez's python repository,
https://github.com/franpe1/starting_with_python_ver2,Excersices and Data for Starting with Python Ver2 book,
https://github.com/coolcalbeans/PEPredictor,"The project parsed through a data file containing 70 fundamental / momentum attributes (Returns, Volatility, RSI etc) for ~2200 US Equity Tickers and use KNN algorithm to find the nearest neighbor for a given stock and determines its Predicted fundamental ratios (P/E, P/B and P/S). Also generated a 95% confidence range for price using yearly volatility of the equity. Later improvements, as a part of the Data Science capstone project @ General Assembly, took advantage of the Pandas and Gradient Boosted Regression Techniques from Scikit learn. ",
https://github.com/hfoffani/GAN_MNIST,A GAN that generates numbers from MNIST dataset,environment.yml
https://github.com/biocore/qiime-workshops,Materials for biocore organized workshops,
https://github.com/niharikabalachandra/Linear-regression-MiniProject,Linear Regression using Boston Housing data set. The Boston Housing data set contains information about the housing values in suburbs of Boston. This dataset was originally taken from the StatLib library which is maintained at Carnegie Mellon University and is now available on the UCI Machine Learning Repository.,
https://github.com/vishal-keshav/Conv-neural-network,An application of convolutional neural network algorithms with caffee library and python interface for image and speech detection,
https://github.com/RyosukeHonda/CarND-LaneLines-P1,Finding Lane Lines on the Road,">  conda create --name=yourNewEnvironment python=3 anaconda>  source activate yourNewEnvironment>pythonPython 3.5.2 |Anaconda 4.1.1 (x86_64)| (default, Jul  2 2016, 17:52:12)[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwinType ""help"", ""copyright"", ""credits"" or ""license"" for more information.>>>> pip install pillow> conda install -c https://conda.anaconda.org/menpo opencv3> python>>> import cv2>>>>pip install moviepy>python>>>import moviepy>>>> jupyter notebook"
https://github.com/zeroviscosity/d3-js-step-by-step,http://zeroviscosity.com/category/d3-js-step-by-step,http://zeroviscosity.com/category/d3-js-step-by-stepd3.scale.category20b()d3.scaleOrdinal(d3.schemeCategory20b)d3.svg.arc()d3.arc()innerRadius().innerRadius(0)d3.layout.pie()d3.pie()
https://github.com/elhanarinc/deeplearning,Ceng 783 Deep Learning Assignments,
https://github.com/patrickfuller/imolecule,An embeddable webGL molecule viewer and file format converter.,"http://patrickfuller.github.io/imolecule/examples/ipython.htmlhttp://patrickfuller.github.io/imolecule/examples/mof.html\npip install imolecule\npython\nimport imolecule\nimolecule.draw(""CC1(C(N2C(S1)C(C2=O)NC(=O)CC3=CC=CC=C3)C(=O)O)C"")\nhttp://openbabel.org/docs/2.3.1/FileFormats/Overview.html\npip install imolecule\n\nimolecule\n````\n\nThe default site allows for loading molecules via a simple file drag-and-drop\ninterface.  Drag a file to anywhere in the browser and drop to load. This\ninterface communicates with openbabel via websocket, so most file formats should\nwork. Be sure to set the extensions of your files to their data type (ie. ""mol"",\n""pdb"", etc.) for format inference to work properly.\n\nIf you have an existing web server, tornado can be easily switched out for\nother libraries. If you want to use imolecule as a starting point for a\nbroader user interface, the server is written to be extensible. In both cases,\nread through the source code - it\'s surprisingly short.\n\nJavascript\n==========\n\nStart by downloading the minified javascript file:\n\n\n\nInclude this file alongside [jQuery](http://jquery.com/) in your project, and then use with:\n\n\n\nwhere `\'my-selector\'` is where you want to place imolecule, and `myMolecule` is\nan object. See below for more on the object structure, or just check out the\nincluded examples. The `imolecule.create()` method takes a few optional parameters,\nspecifying a few common drawing and camera types.\n\n\n\nMolecule Data Format\n====================\n\nAt its core, imolecule takes input chemical structures as javascript objects.\nAs an example, consider benzene:\n\n\n\nIf you want to make properly formatted JSON, you can use either `format_converter.py` as a script or run your own imolecule server to convert most chemical file formats to JSON.\n\nOpen Babel\n==========\n\n[Open Babel](http://openbabel.org/wiki/Main_Page) is an open-source library\nfor interconverting over 100 chemical file formats. imolecule uses Open Babel\nto convert input formats to JSON before drawing. Therefore, to use imolecule\nwith non-JSON formats, you will need Open Babel.\n\nOpen Babel is best installed through conda.\n\n\n\nIf you don\'t use conda, Open Babel can be installed from source. For more, read through the\n[Open Babel installation instructions](http://openbabel.org/docs/dev/Installation/install.html).\n\n"
https://github.com/nazmiasri95/Bidirectional-LSTM,Experimental on Bidirectional LSTM and comparison with LSTM,
https://github.com/tphinkle/pore_stats,"Event detection, extraction, and analysis in micro and nano resistive pulse experiments.",https://github.com/tphinkle/pore_stats/blob/master/qt_app/resources/logo.pnghttps://en.wikipedia.org/wiki/Tunable_resistive_pulse_sensinghttps://github.com/tphinkle/pore_stats/blob/master/qt_app/demo/full_view.pnghttps://github.com/tphinkle/pore_stats/blob/master/qt_app/demo/filter_demo.pnghttps://github.com/tphinkle/pore_stats/blob/master/qt_app/demo/scatter_plot_view.png
https://github.com/davidaknowles/tf_net,A custom conv net for the DREAM ENCODE challenge,METHODS.ipynbrun_all.sh\nexport DREAM_ENCODE_DATADIR=/myscratchspace/dream_encode/\ndownload_challenge_data.pygene_expression_pca.Rget_DNase_cuts.pyindex.shtrain.pysubmit.py
https://github.com/mmt/deeprl22,Study group for Deep Reinforcement Learning,http://rll.berkeley.edu/deeprlcourse/https://www.udacity.com/course/deep-learning--ud730https://www.youtube.com/playlist?list=PLiCLbsFQNFAxOmVeqPhI5er1LGf2-L9I4http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdfhttp://karpathy.github.io/2015/05/21/rnn-effectiveness/http://colah.github.io/posts/2015-08-Understanding-LSTMs/https://indico.io/blog/sequence-modeling-neuralnets-part1/https://indico.io/blog/sequence-modeling-neuralnets-part1/http://karpathy.github.io/2016/05/31/rl/http://www.deeplearningbook.org/https://www.tensorflow.org/tutorials/mandelbrothttps://www.tensorflow.org/get_started/summaries_and_tensorboardhttps://www.tensorflow.org/programmers_guide/supervisorhttps://www.tensorflow.org/programmers_guide/threading_and_queueshttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slimhttps://pypi.python.org/pypi/pudbhttp://cs231n.github.io
https://github.com/Patrick-Woo/CarND-LaneLines-P1,This is my first update.,
https://github.com/balaganesh99/project,project,
https://github.com/todddangerfarr/mlnd_p4_train_a_smartcab_to_drive,Udacity Machine Learning NanoDegree Project 4 - Reinforcement Learning: Train a Smartcab to Drive ,"smartcab/agent.pyLearningAgentTODOsmartcab/python smartcab/agent.pypython -m smartcab.agentsh\n    gamma_values = [(x / 100.0) for x in  range(30, 91, 10)]\n    epsilon_values = [(x / 100.0) for x in range(50, 55, 10)]\n    epsilon_decay_values = [(x / 100.0) for x in range(90, 100, 3)]\n\n    number_of_times = 5\n        for i in range(0, number_of_times):\n        iterative_data_collection(gamma_values, epsilon_values, epsilon_decay_values, str(i))\npython automated_data_collection.pysh\n    single_scenario_repeat_data_collection(0.50, 0.50, 0.99, 10)\npython automated_data_collection.py"
https://github.com/rohitvarkey/Compose3D.jl,A library to try and extend Compose.jl to 3D.,"http://composejl.org/colorjulia\ncube1 = cube(0mm,0mm,0mm,1mm) # a cube of size 1 unit at the origin.\nsphere1 = sphere(-5mm,0mm,0mm,0.1w) # a sphere with radius 1/10th of the width of the parent context and centered at (-5,0,0).\npyramid1 = pyramid(0mm,0mm,0.4d,2mm,1mm) # a pyramid with a corner at (0,0, 0.4*depth of parent context) of base 2mm and height 1mm.\ncontext1 = Context(0mm,0mm,0mm,10mm,10mm,10mm) # context with origin at (0,0,0) and all dimensions of 10 units \ncontext2 = compose(context1,cube1) # Returns context with the cube.\ncontext3 = compose(context2, sphere1, pyramid1) # Returns a context with all the geometries. Notice how we added 2 children in one line.\njulia\nfunction sierpinski(n)\n    if n == 0\n        compose(Context(0w,0h,0d,1w,1h,1d),pyramid(0w,0h,0d,1w,1h))\n    else\n        t = sierpinski(n - 1)\n        compose(Context(0w,0h,0d,1w,1h,1d),\n        (Context(0w,0h,0d,(1/2)w,(1/2)h,(1/2)d), t),\n        (Context(0.5w,0h,0d,(1/2)w,(1/2)h,(1/2)d), t),\n        (Context(0.5w,0.5h,0d,(1/2)w,(1/2)h,(1/2)d), t),\n        (Context(0w,0.5h,0d,(1/2)w,(1/2)h,(1/2)d), t),\n        (Context(0.25w,0.25h,0.5d,(1/2)w,(1/2)h,(1/2)d), t))\n    end\nend\n\ncompose(Context(-5mm,-5mm,-5mm,10mm,10mm,10mm),sierpinski(0))\nhttps://www.github.com/pranavtbhat"
https://github.com/catherinedevlin/ipython-sql,"%%sql magic for IPython, hopefully evolving into full SQL client",SQLAlchemy URL%sqlDATABASE_URLgetpass.getpass$%sqlresult.dicts()result.dict()$variable_name{variable_name}${}${variable_name}${}%sql<<%%sqlSQLAlchemy URLpandas.DataFrame()--persist--append\\d\\dtPGSpecial<<connection-arguments--append<<--file
https://github.com/rmalliga/Roja-Malligarjunan,Random,
https://github.com/JuliaPackageMirrors/SpikingNetworks.jl,Julia package mirror.,http://nbviewer.jupyter.org/gist/YaoLuCNS/6fcedfc9baff9c72f999
https://github.com/Ramprasad94/Yelp-Data-Analysis,Repository containing source code for performing data analysis on Yelp reviews and tips,
https://github.com/cagdasyetkin/raspberryPi3,Raspberry Pi Projects,
https://github.com/Shreyas3108/movielens-analytics-recomendation,Analytics of Movielens dataset (100k) along with recomendation based on the user preference,
https://github.com/daaltces/pydaal-getting-started,"Introduction and tutorials for using PyDAAL, i.e. the Python API of Intel Data Analytics Acceleration Library",https://software.intel.com/en-us/intel-daal./1-gentle-introductory-serieshttp://jupyter.org/https://software.intel.com/en-us/intel-distribution-for-pythonhttps://www.continuum.io/downloadshttps://www.continuum.io/downloadsbash    \n    conda create --name idp intelpython3_full python=3 -c intel    \n    source activate idp (on Linux and OS X)      \n    activate idp (on Windows)    \nhttps://software.intel.com/en-us/articles/using-intel-distribution-for-python-with-anaconda./2-pre-built-helper-classes./1-gentle-introductory-series/volume-3-analytics-model-building-deployment.ipynb./2-pre-built-helper-classes/LinearRegression./2-pre-built-helper-classes/RidgeRegression./2-pre-built-helper-classes/SVM./2-pre-built-helper-classes/DecisionForest./2-helper-function-classes/Kmeans./2-pre-built-helper-classes/PCA./2-pre-built-helper-classes/SVM./2-pre-built-helper-classes/Kmeans./3-custom-modules./3-custom-modules/customUtils./4-interactive-tutorials./4-interactive-tutorials/NumericTables_example.ipynb./4-interactive-tutorials/kmeans_example.ipynb./4-interactive-tutorials/LR_example.ipynb./4-interactive-tutorials/SVM_example.ipynb./4-interactive-tutorials/Regression_online_example.ipynb./4-interactive-tutorials/NaiveBayes_online_example.ipynb4-interactive-tutorials/https://archive.ics.uci.edu/ml/datasets
https://github.com/kellino/Genetic_Composition,simple attempt at an algorithmic composition using a genetic algorithm,https://github.com/kellino/Genetic_Composition
https://github.com/sofroniewn/2pRAM-paper,Notebooks accompanying the 2-photon random access mesoscope (2p-RAM) paper,http://mybinder.org/repo/sofroniewn/2pRAM-paperhttps://www.youtube.com/watch?v=LSYXueH1pzU&list=PLDOd6H-eiYAQ3rmK5HtiMNi-C2s3QsTTK
https://github.com/fukuta0614/chainer-SeqGAN,implementation of SeqGAN: Sequence Generative Adversarial Nets with Policy Gradient,"https://arxiv.org/abs/1609.05473\n# Ubuntu/Linux 64-bit Python 3.4\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp34-cp34m-linux_x86_64.whl\n\n# Ubuntu/Linux 64-bit Python 3.5\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl\n\n# Mac OS X, CPU only, Python 3.4 or 3.5:\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0-py3-none-any.whl\n\npip install $TF_BINARY_URL\n\ncd oracle_test && python run_sequence_gan.py \n"
https://github.com/RazerM/orbital,High level orbital mechanics package.,"bash\n$ pip install orbitalpy\npython\nfrom orbital import earth, KeplerianElements, Maneuver, plot\n\nfrom scipy.constants import kilo\nimport matplotlib.pyplot as plt\n\norbit = KeplerianElements.with_altitude(1000 * kilo, body=earth)\nman = Maneuver.hohmann_transfer_to_altitude(10000 * kilo)\nplot(orbit, title='Maneuver 1', maneuver=man)\nplt.show()\nhttp://i.fraz.eu/5b84e.png"
https://github.com/ekarademir/exercises,Exercises from various courses and tutorials,https://github.com/rapidanalytics/Dublin-Airport-Challenge
https://github.com/istochkoj/coursera-MIPT-Project,Course 6. Final project/,
https://github.com/jngaravitoc/Lecture_notes_UofA,Lectures Notes of courses taken at the University of Arizona,
https://github.com/sofiatti/stat_analysis_radiobiological_data,Stat 215A paper refereeing project,
https://github.com/angelsalazar95/M-todos-Num-ricos,Códigos clases métodos numéricos,
https://github.com/modee00/DEP-Project,Consulting Project for the Department of Environmental Protection of NYC,
https://github.com/suwangcompling/bayesianmodels,Bayesian Modeling,
https://github.com/djays/DeepLearning_Bike_Rental,Building a simple neural network to estimate bike rentals,
https://github.com/psygrammer/dprl,의사결정(DP) + 강화학습(RL) + 온라인광고(OA) + 파이썬웹(Pyweb),
https://github.com/rj67/germVar2,TCGA germline variants,
https://github.com/marcelbernic/visual-teach-and-repeat,Projet de session (GLO-4001),
https://github.com/tperol/am207-NILM-project,Repo for am207 final project,
https://github.com/michelleful/ipynb-intro,iPython notebook intro for PyLadies Boston,
https://github.com/Himscipy/CODES,Collection of Various small CFD Codes ,
https://github.com/tayden/titanic-death-decider,Predicts the survival of Titanic passengers using a SVM classifier.,
https://github.com/jimmychou0704/Simulation,Monte Carol simulation of stochastic process,
https://github.com/mike-grayhat/quora_qp,Repository for quora question pairs competition,
https://github.com/subimal/class-demos,Simulations for teaching undergraduates,
https://github.com/FRESNA/openmod-atlite-de,Demonstration of using atlite to generate historical German 2012 wind and solar feed-in,openmod-atlite-de.ipynb
https://github.com/L4brax/ml_antoine_hess,Machine Learning projects - Ynov,test.csvtrain.csv*.csvtest.csv
https://github.com/bje-/NEMO,National Electricity Market Optimiser,https://github.com/bje-/NEMO/actions/workflows/buildtest.yml/badge.svghttps://coveralls.io/github/bje-/NEMO?branch=masterhttps://www.codefactor.io/repository/github/bje-/nemohttps://github.com/PyCQA/bandithttp://nemo.ozlabs.org/theworks.pngbash\npip install nemopt\nhttps://en.wikipedia.org/wiki/CMA-EShttps://nbviewer.org/urls/nemo.ozlabs.org/guide.ipynb?flush_cache=1http://nemo.ozlabs.org/pdoc/index.htmlnemohttp://ceem.unsw.edu.au/sites/default/files/documents/LeastCostElectricityScenariosInPress2013.pdfhttps://deap.readthedocs.io/en/master/https://pypi.org/project/Gooey/http://matplotlib.org/http://www.numpy.org/http://pandas.pydata.org/https://pint.readthedocs.iohttps://pypi.python.org/pypi/scoophttps://ray.io/https://www.sciencedirect.com/science/article/pii/S0301421512002169?via=ihub#s0010https://doi.org/10.1016/j.enpol.2012.03.011https://lists.ozlabs.org/listinfo/nemo-develhttps://github.com/bje-/NEMO/issueshttps://www.ceem.unsw.edu.au/staff/ben-ellistonhttps://www.ceem.unsw.edu.au/COPYINGhttps://www.industry.gov.au/Office-of-the-Chief-Economist/Publications/Pages/Australian-energy-technology-assessments.aspxhttp://www.co2crc.com.au/publication-category/reports/https://data.csiro.au/collections/collection/CIcsiro:44228https://aemo.com.au/en/energy-systems/major-publications/integrated-system-plan-isphttp://content.webarchive.nla.gov.au/gov/wayback/20140211194248/http://www.climatechange.gov.au/sites/climatechange/files/files/reducing-carbon/APPENDIX3-ROAM-report-wind-solar-modelling.pdfhttp://www.arena.gov.au/
https://github.com/AugustLONG/crawler,基于django和scrapy的采集系统,requirements.txthttp://scrapy-cluster.readthedocs.org/
https://github.com/donallmc/CarND-Traffic-Sign-Classifier-Project,Udacity Self-driving car course project 2,https://review.udacity.com/#!/rubrics/481/viewhttps://github.com/donallmc/CarND-Traffic-Sign-Classifier-Project/blob/master/Traffic_Sign_Classifier.ipynb-1 <= x <= 1
https://github.com/rkraig/cabi-predict,Predict near-term Capital Bikeshare availability using a random forest and Poisson regression. Display current status and predictions with leaflet.js map visualization.,
https://github.com/woobe/h2o_sandbox,H2O prototyping and experimentation,
https://github.com/pfctdayelise/leafvis,Python framework for visualising layer data using leaflet.,https://travis-ci.org/nfaggian/leafvis/notebooks/example.ipynb
https://github.com/johnkorn/speaker_recognition,Speaker recognition and verification with deep learning,
https://github.com/gavinmh/GADS12-NYC,General Assembly Data Science 12,mailto:gmh283@nyu.edujamesbev@gmail.commailto:shawnoakley@gmail.comhttps://github.com/gavinmh/GADS12-NYC/pulse#closed-issueshttps://github.com/gavinmh/GADS12-NYC/issues/newhttps://docs.google.com/presentation/d/1r2pWzZ3-ZvA4OiRVqTzDCSMj33RSI7_UrLn6kt9BZzQ/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-1/lab-1a.mdhttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-1/lab-1a-submission-example.mdhttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-1/lab-1b.mdhttps://docs.google.com/presentation/d/1b9bYZ9MIBqEmsJ3x5dBVlwxbSW-v0n-SazICmxh_iwU/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-2/simple-linear-regression-lab.pdfhttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-2/python-lab.ipynbhttps://github.com/gavinmh/GADS12-NYC/blob/master/lecture-2/numpy-lab.ipynbhttps://docs.google.com/presentation/d/1nzGQyOeE-kkv5SUXrBfSgBD_s4FaFeY1GekmqjqgQbE/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-3https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-3https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-3https://docs.google.com/presentation/d/11QwBL5HggOPv5VBLLyCjVGu1C41nLxTEEJXNrFWWwb8/edit?usp=drive_webhttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-4https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-4https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-4https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-4https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-4https://github.com/gavinmh/GADS12-NYC/blob/master/lecture-4/project-1-regression.mdhttps://docs.google.com/presentation/d/1NZJv9sgmbFivNMt7X-faPrnGTNri_g4C6soWKzvsUvQ/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-5https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-5https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-5https://docs.google.com/presentation/d/1evOrh5fxjUlr6F5zErzO_-Fc1Fo-s-T-0XxNeS8ZJiU/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-6https://docs.google.com/presentation/d/1ibefIZ1XHUnlI7BIAQdoqUxlU-Ayxi1p7k2tPtZyVVM/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-7https://docs.google.com/presentation/d/1TF6iAGHDrIKs3kN-smIWGdxIFUzwXRVK5Zj9GQvVz0E/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-9https://docs.google.com/presentation/d/1-URWRvKe9ecwQiH3U639NzDORjnXE27MA4fVb6APbIY/edithttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-10https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-10https://docs.google.com/presentation/d/1xcR9NX7spBurDak-Vzy3tlv08B_9LiHOBhAOr6xKK_Y/edit#slide=id.g3aa599f3c_3483https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-11https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-11https://docs.google.com/presentation/d/1WwoIrnmfq5Zd7BFg7kIdU4hvTJfy3gUKMYdfTaB0E8s/edit?usp=sharinghttps://docs.google.com/presentation/d/1WwoIrnmfq5Zd7BFg7kIdU4hvTJfy3gUKMYdfTaB0E8s/edit?usp=sharinghttps://docs.google.com/presentation/d/1YpLHCrr_vkXvq-2Pa5Snd1YDfBylexP22vJuDKf5wsU/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-14https://docs.google.com/presentation/d/1U8roNE3xY-35u0uT9Nm_0snrNKK-LrHlYzL0RYPWzhI/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-15https://docs.google.com/presentation/d/1KCo4Y5v89M1XJDyrOEnxtgTnROBE5F5vQoLZZo9USpU/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-16https://github.com/gavinmh/GADS12-NYC/tree/master/lecture-16https://docs.google.com/presentation/d/11SdNjR-f7DxTii6h9-oHNWILiFPy0CCFCxOLCT24my8/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-17https://docs.google.com/presentation/d/1gAKD9-_qRg4vNppzleAc7mxoUOe2aPPPEgDkIUOXqug/edit?usp=sharinghttps://github.com/gavinmh/GADS12-NYC/tree/master/lecture-18https://github.com/gavinmh/GADS12-NYC/tree/master/tips
https://github.com/htwangtw/DimensionsOfExperience,Scripts for paper Dimensions of Experience: Exploring the Ontology of the Wandering Mind,
https://github.com/learntextvis/code-samples,draft code to communicate ideas ,
https://github.com/athirara/GBM,Geometrical Brownian Motion,
https://github.com/alexisperrier/upem-topic-modeling,Cours sur le topic modeling - UPEM - Master Méthode computationnelle et analyse de contenu,
https://github.com/bryancshepherd/RunStatus,"Build a script running status tracker with R, Python and RPi",
https://github.com/jagman88/HACTproject_Julia,Describes and solves some simple HACT models in Julia.  The notes and code is modified and translated from Benjamin Moll's notes and codes: http://www.princeton.edu/~moll/notes.htm and http://www.princeton.edu/~moll/HACTproject.htm).,
https://github.com/timothydmorton/gaia-explore,first look into GAIA data,
https://github.com/doorleyr/SFCrime,Visualising crime in San Fransisco duing summer 2014,
https://github.com/RunZGit/Magicmail,Using Word2Vec techniques and K-Mean method to classifies Rose-Hulman sharepoint emails based on its content,
https://github.com/ramon-oliveira/deepstats,"Repository for ""Known Unknowns: Uncertainty Quality in Bayesian Neural Networks"" paper.",bash\npip install -r requirements.txt\nbash\npython run_experiment.py --dataset=mnist --model=mlp-dropout\nbash\npython plots_anova.py --dataset=mnist\n
https://github.com/Aniruddha-Tapas/Android_OpenCV_Scan2Excel,Android app to convert scanned tabular digit data to Excel using Tensorflow. [Incomplete],
https://github.com/koaning/python_data_intro,A beginner notebook for people who want to get started with python and data. Joy ensues! ,
https://github.com/profhuster/profhuster.github.io,Personal Web Site for Michael Huster (profhuster),
https://github.com/bz866/Exploration-on-New-York-Crime-Open-Data-Based-on-PolyGamy-Thoughts,NYU Big Data CourseTerm Project,spark_job_script.pyspark_validity_statistics.pysparksql_scriptall_area_code.pyarea_desc_rate.pyaverage_compliant_duration_each_borough.pyduration.pyduration.pyaverage_compliant_duration_each_borough.pypattern.pyplot.ipynbspark_job_script.py\nscp  dir/spark_job_script.py  NetID@dumbo.es.its.nyu.edu:/home/NetID\nNYPD_Complaint_Data_Historic.csv\nhadoop fs -copyFromLocal NYPD_Complaint_Data_Historic.csv\n\nmodule load python/gnu/3.4.4\nexport PYSPARK_PYTHON=/share/apps/python/3.4.4/bin/python\nexport PYTHONHASHSEED=0\nexport SPARK_YARN_USER_ENV=PYTHONHASHSEED=0\n\nspark-submit spark_job_script.py\n\nhadoop fs -getmerge name.out name.out\n
https://github.com/nikitakit/nbtools,Tools for IPython notebooks,
https://github.com/fperez/gh-activity,Tools to measure activity on github for a set of orgs and repos,
https://github.com/Anima-OS/Anima_Terminal,The default terminal. Based on gterm,monitor all the users\'  terminals <http://code.mitotic.org/graphterm/screenshots.html#dashboard-for-a-virtual-computer-lab-viewing-user-terminals>AjaxTerm <https://github.com/antonylesuisse/qweb/tree/master/ajaxterm>Terminology <http://www.enlightenment.org/p.php?p=about/terminology>yweatherscreenshots <https://github.com/mitotic/graphterm/blob/master/docs/screenshots.rst>YouTube Video <http://youtu.be/TvO1SnEpwfE>gtweetyweathergreveald3cloudgmatplot.pygraphterm-<version>tornadohttp://www.tornadoweb.org <http://www.tornadoweb.org>GraphTerm--auth_type=none~/.graphterm/_gterm_auth.txtgtermgraphtermgmenu newgtermlsvisudo gterm_setupPermission deniedGetting Started with GraphTerm <http://code.mitotic.org/graphterm/start.html>code.mitotic.org/graphterm <http://code.mitotic.org/graphterm>Talks and Tutorials <http://code.mitotic.org/graphterm/talks.html>@graphterm <https://twitter.com/intent/user?screen_name=graphterm>Issue Tracker <https://github.com/mitotic/graphterm/issues>AjaxTerm <https://github.com/antonylesuisse/qweb/tree/master/ajaxterm>jQuery <http://jquery.com>Ajax.org Cloud9 Editor <http://ace.ajax.org>CKEditor <http://ckeditor.com>d3.js <http://d3js.org/>Landslide <https://github.com/adamzap/landslide>pythontutor.com <http://pythontutor.com>Superfish <http://users.tpg.com.au/j_birch/plugins/superfish/>GraphTermBSD-license <http://www.opensource.org/licenses/bsd-license.php>
https://github.com/fanshi118/NLP_NMT_Project,Neural Machine Translation project for NLP Fall 2016,python translate.py source_language target_languagepython translate.py fr enplot_training_process.ipynb
https://github.com/yannche/pyCommon,ensemble de fichiers a mettre dans l'image virtualbox,
https://github.com/grantrosario/advanced_lane_finding,An advance implementation of detecting lane lines ,"alf.pyobjpobjpointsimgpointsobjpointsimgpointscv2.calibrateCamera()cv2.undistort()alf.pytransform()alf.pytransform()imgsrcdstpython\nw,h = 1280,720\nx,y = 0.5*w, 0.8*h\n\nsrc = np.float32([[200./1280*w,720./720*h],\n                  [453./1280*w,547./720*h],\n                  [835./1280*w,547./720*h],\n                  [1100./1280*w,720./720*h]])\n                  \ndst = np.float32([[(w-x)/2.,h],\n                  [(w-x)/2.,0.82*h],\n                  [(w+x)/2.,0.82*h],\n                  [(w+x)/2.,h]])\nsrcdstalf.pyalf.pypython\nleft_curverad = ((1 + (2*left_fit_cr[0]*y_eval*ym_per_pix + left_fit_cr[1])**2)**1.5) / np.absolute(2*left_fit_cr[0])\n\nright_curverad = ((1 + (2*right_fit_cr[0]*y_eval*ym_per_pix + right_fit_cr[1])**2)**1.5) / np.absolute(2*right_fit_cr[0])\nalf.pydrawLines()drawDatafinal_attempt.mp4add_fit()"
https://github.com/tuanavu/udacity-course,Udacity courses,https://www.udacity.com/
https://github.com/mu529/airport_modes,Modal choice study for NYC airports,
https://github.com/rllabmcgill/rlcourse-march-10-hugobb,rlcourse-march-10-hugobb created by GitHub Classroom,#1https://pdfs.semanticscholar.org/7eca/3acd1a4239d8a299478885c7c0548f3900a8.pdf
https://github.com/data-8/datascience,A Python library for introductory data science,http://denero.orghttp://www.cs.berkeley.edu/~cullerhttps://github.com/samlau95http://alvinwan.comhttp://data8.org/http://datascience.readthedocs.org/en/master/?badge=masterhttps://github.com/data-8/datascience/actions/workflows/run_tests.ymlhttps://coveralls.io/github/data-8/datascience?branch=masterpip\npip install datascience\n
https://github.com/betagouv/mes-aides-analytics,Analyse de données sur les usages de Mes Aides,main
https://github.com/Gamrix/cs231n_proj,Deep View Morphing,
https://github.com/mi41814/tf_test1,tf test 1,https://tensorflow.orghttps://www.tensorflow.org/installautoencodercompressiondifferential_privacyim2txtinceptionlearning_to_remember_rare_eventslm_1bnamignizerneural_gpuneural_programmernext_frame_predictionreal_nvpresnetskip_thoughtsslimstreetswivelsyntaxnettextsumtransformertutorialshttps://www.tensorflow.org/tutorials/video_prediction
https://github.com/j3hempsey/dotfiles,Just some dotfiles,\n                 ______   _______ _________ _______ _________ _        _______  _______\n                (  __  \\ (  ___  )\\__   __/(  ____ \\\\__   __/( \\      (  ____ \\(  ____ \\\n                | (  \\  )| (   ) |   ) (   | (    \\/   ) (   | (      | (    \\/| (    \\/\n                | |   ) || |   | |   | |   | (__       | |   | |      | (__    | (_____\n                | |   | || |   | |   | |   |  __)      | |   | |      |  __)   (_____  )\n                | |   ) || |   | |   | |   | (         | |   | |      | (            ) |\n                | (__/  )| (___) |   | |   | )      ___) (___| (____/\\| (____/\\/\\____) |\n                (______/ (_______)   )_(   |/       \\_______/(_______/(_______/\\_______)\n\nbash\n./install.sh\n
https://github.com/Gumil9/Ciscer,Программа для успешного написания тестов CCNA без заучивания ответов,"https://addons.mozilla.org/ru/firefox/addon/greasemonkey/mipthttp://umath.ru/cs.jsclient.jsCtrl+Spacenot foundCtrl+SpaceCtrl+ShiftCtrl+Alt + \xe2\x86\x91Ctrl+SpaceCtrl+Alt + \xe2\x86\x90/\xe2\x86\x92Ctrl+Alt + \xd0\xba\xd0\xbe\xd0\xbb\xd1\x91\xd1\x81\xd0\xb8\xd0\xba\xd0\xbe \xd0\xbc\xd1\x8b\xd1\x88\xd0\xb8http://umath.ru/img/ciscer_point.pnganswers.jsvar add = tests.add;javascript\nadd(\'question\', \'answer0\', \'answer1\', ...);\nvar add = prompts.add;javascript\nadd(\'prompt\');\njavascript\nadd(\'full operating system > flash\');\nadd(\'limited operating system > ROM\');\nanswers.jshttp://vk.com/id170372339answers.jsanswers_archive.jsanswers.jsanswers.jsXYYanswers.jsanswers.jsanswers_archive.jsAdded ccna1-chapter4, deleted ccna1-chapter2Edited ccna1-chapter3core.jsclient.jshttps://github.com/Gumil9/Ciscer/issues/1#issuecomment-289246163"
https://github.com/tksaha/con-s2v,Con-S2V: A Generic Framework for Incorporating Extra-Sentential Context into Sen2Vec,"\n@inproceedings{saha2017c,\n  title={Con-S2V: A Generic Framework for Incorporating Extra-Sentential Context into Sen2Vec},\n  author={Saha, Tanay Kumar and Joty, Shafiq and Al Hasan, Mohammad},\n  booktitle={Joint European Conference on Machine Learning and Knowledge Discovery in Databases},\n  pages={753--769},\n  year={2017},\n  organization={Springer}\n}\n\n@inproceedings{saha2017regularized,\n  title={Regularized and Retrofitted models for Learning Sentence Representation with Context},\n  author={Saha, Tanay Kumar and Joty, Shafiq and Hassan, Naeemul and Hasan, Mohammad Al},\n  booktitle={Proceedings of the 2017 ACM on Conference on Information and Knowledge Management},\n  pages={547--556},\n  year={2017},\n  organization={ACM}\n}\nhttps://www.continuum.io/downloadshttp://www.berouge.com/Pages/DownloadROUGE.aspx\nconda env create -f sen2vec_environment.yml\n\nsource activate sen2vec\n\nconda env export > sen2vec_environment.yml\n\n./ROUGE-1.5.5.pl \n\ncpan XML::DOM\nhttp://postgresapp.com/\npsql -c ""create database news""\n\npg_restore --jobs=3 --exit-on-error --no-owner --dbname=news sql_dump.dump\n\npg_restore --jobs=3 -n public --exit-on-error --no-owner --dbname=news sql_dump.dump\npostgrespostgres\npsql -h localhost -d news -U postgres -w\n\\password\nhttp://stackoverflow.com/questions/10430645/how-can-i-get-pg-dump-to-authenticate-properly\nsudo -u postgres pg_dump -s --no-owner -FC news >sql-dump.dump \n\nsudo -u postgres pg_dump --data-only -t summary news --no-owner -Fc > news_summary.dump\n\nsource environment.sh #Unix, os-x\n\nmake clean\nmake\n\npip install theano\nsudo apt install nvidia-cuda-toolkit\n\npip install keras\ntheano\n{\n    ""image_dim_ordering"": ""tf"",\n    ""epsilon"": 1e-07,\n    ""floatx"": ""float32"",\n    ""backend"": ""theano""\n}\n\ncat cphrase.txt.zip_* > cphrase.txt.zip \nsed -i  \'1 i\\174814 300\'  cphrase.txt  # converting into word2vec format\n\nsed -i \'1 i\\400000 300\' glove.6B.300d.txt\n\npython sen2vec -h\nusage: sen2vec [-h] -dataset DATASET -ld LD\n\nSen2Vec\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -dataset DATASET, --dataset DATASET\n                        Please enter dataset to work on [reuter, news]\n  -ld LD, --ld LD       Load into Database [0, 1]\n  \n  -pd PD, --pd PD       Prepare Data [0, 1]\n  \n  -rbase RBASE, --rbase RBASE       Run the Baselines [0, 1]\n  \n  -gs GS, --gs GS       Generate Summary [0, 1]\n\npython sen2vec -dataset news -ld 1 -pd 1 -rbase 1 -gs 1\n"
https://github.com/fnielsen/afinn,AFINN sentiment analysis in Python,
https://github.com/vck/geophy,geophysics homework,
https://github.com/blairhudson/learningml,Learning ML ~ A practical guide to understanding and applying machine learning algorithms in the quest to become a 🦄 by Blair Hudson,http://learning.ml01.00-Introduction.ipynb01.01-Help.ipynb01.02-Getting-Started.ipynb02.00-Classification.ipynb02.01-Dummy-Classifiers.ipynb02.02-Naive-Bayes.ipynb02.03-k-Nearest-Neighbours.ipynb02.04-Decision-Trees.ipynb03.00-Regression.ipynb04.00-Unsupervised.ipynb05.00-Deep-Learning.ipynb06.00-Big-Data.ipynb99.00-Appendix.ipynb99.01-Glossary.ipynb99.02-Acknowledgements.ipynb99.03-Resources.ipynbhttp://learning.mlhttps://creativecommons.org/licenses/by-nc-nd/3.0/au/
https://github.com/johnnygreco/hugs-graveyard,old hugs project repository,
https://github.com/jam1245/Visualizations,Collection of various visualizations,
https://github.com/ericwayman/nflData,Some models and analysis to investigate efficiency of the NFL gambling market,
https://github.com/rgdn-info-community/piramidy,База пирамид,http://www.antarcticstation.org/sciencehttp://static.panoramio.com/photos/large/47977512.jpghttp://sibved.livejournal.com/152355.htmlhttp://wordscience.org/v-antarktide-uchenye-obnaruzhili-tri-zagadochnye-piramidy.html\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x87\xd0\xb8\xd0\xb5-\xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd1\x8b/\xd0\xb1\xd0\xb0\xd0\xb7\xd0\xb0-\xd0\xbf\xd0\xb8\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb8\xd0\xb4.kml\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x87\xd0\xb8\xd0\xb5-\xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd1\x8b/geolines-ru-\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd1\x8b\xd0\xb9.kmlhttp://lah.flybb.ru/topic1785.htmlhttp://www.kosmm.ru/arl6.htmlhttp://home.hiwaay.net/~jalison/index.htmlhttps://github.com/rgdn-info-community/piramidy/zipball/master\xd0\xb1\xd0\xb0\xd0\xb7\xd0\xb0-\xd0\xbf\xd0\xb8\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb8\xd0\xb4.kml\xd0\xb1\xd0\xb0\xd0\xb7\xd0\xb0-\xd0\xbf\xd0\xb8\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb8\xd0\xb4img/raw.png\xd0\xa1\xd0\xbe\xd1\x85\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81\xd0\xbe\xd0\xb4\xd0\xb5\xd1\x80\xd0\xb6\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb5 \xd0\xba\xd0\xb0\xd0\xba...https://github.comusernamehttps://github.com/rgdn-info-community/piramidyWatch (\xd0\xa1\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd1\x8c)img/watch-button.pnghttps://github.com/rgdn-info-community/\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x87\xd0\xb8\xd0\xb5-\xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd1\x8b.kml.kmz.kmlCtrl+CCtrl+VCmd.kmlXMLimg/issues.png/img/issues-new.pngimg/issues-new-submit.pngimg/timeback-button.pngimg/planet.png
https://github.com/mikeengland/Twitter-MongoDB-Python-Integration,Example adapted from Python for Data Analysis,
https://github.com/TueVJ/Python-Introduction,Introduces basic Python concepts for those used to other programming languages. Ends with writing optimization problems in Gurobi for Python.,https://www.continuum.io/downloadshttp://jupyter.org/http://www.gurobi.com/downloads/gurobi-optimizerhttps://user.gurobi.com/download/licenses/free-academic
https://github.com/PierreGe/RL-movie-recommender,The purpose of our research is to study reinforcement learning approaches to building a movie recommender system. We formulate the problem of interactive recommendation as a contextual multi-armed bandit.,
https://github.com/QuantEcon/NUS_workshop_2016,Computational Economics with Python and Julia,http://johnstachurski.net/https://github.com/mmckyhttps://www.python.org/http://julialang.org/https://www.continuum.io/downloadshttp://julialang.org/downloadshttp://julialang.org/downloads/platform.htmlhttp://nbviewer.jupyter.org/github/QuantEcon/NUS_workshop_2016/blob/master/ar1_plots_julia.ipynbhttp://nbviewer.jupyter.org/github/QuantEcon/NUS_workshop_2016/blob/master/ar1_plots_python.ipynbhttp://lectures.quantecon.org/http://cheatsheets.quantecon.org/http://discourse.quantecon.org/https://git-scm.comhttps://atom.io/https://git-scm.com/downloads
https://github.com/bcongdon/sgdq-2017-schedule-analysis,📊 Visualizations of the SGDQ 2017 Marathon Schedule,
https://github.com/mnagaku/naumanni-exercises,ナウマンを改象,"\\n"",\n    ""# docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 8888:8888 -e GRANT_SUDO=yes --user root --name minimal-lab mnagaku/minimal-lab start-notebook.sh --NotebookApp.token=\'\'\\n"",\n    ""\\n"",\n    ""http://localhost:8888/lab\\n"",\n    ""\\n"",\n    ""http://localhost/\\n"",\n    ""\\n"",\n    ""function _expandMastodonStatus(content) {\\n"",\n    ""  content = \'\xe3\x81\x8a\xe3\x81\xa3\xe3\x81\xb1\xe3\x81\x84\';\\n"",\n    """
https://github.com/solvcon/solvcon,A software framework of conservation-law solvers that use the space-time Conservation Element and Solution Element (CESE) method.,Conservation Element and Solution Element (CESE) method\n<http://www.grc.nasa.gov/WWW/microbus/>cmake\n<https://cmake.org>pybind11 <https://github.com/pybind/pybind11>Cython\n<http://www.cython.org/>Numpy <http://www.numpy.org/>LAPACK <http://www.netlib.org/lapack/>SCOTCH\n<http://www.labri.fr/perso/pelegrin/scotch/>Nose\n<https://nose.readthedocs.org/en/latest/>Paramiko\n<https://github.com/paramiko/paramiko>boto\n<http://boto.readthedocs.org/>gmsh <http://geuz.org/gmsh/>contrib/conda.shcontrib/build-pybind11-in-conda.shAnaconda\n<https://www.anaconda.com/download/>Sphinx <http://sphinx.pocoo.org/>pstake\n<http://pstake.readthedocs.org/>graphviz\n<http://www.graphviz.org/>doc/build/html/
https://github.com/pdfliberation/pdf_table_extraction,experimenting with pdf2text and python pdf-table-extract,pdftotext -bbox
https://github.com/nvasilius/PyBootCamp,Files for the uDemy Complete Python Bootcamp,
https://github.com/vishal8266/Tensorflow-Project---Bank-Note-Classification,Tensorflow Project - Bank Note Classification,
https://github.com/brakmic/Julia-Articles,Code examples from my articles on the Julia programming language,
https://github.com/qmcs/qmcs.github.io,EECS Society. Queen Mary University of London,EECS Society website <http://qmcs.io/>content/articles/nnn-slug.rstnnnarticlesslug.rstreStructuredText quick referenceitalicpull requesttutorial provided by Software Carpentry <http://apawlik.github.io/2014-02-03-TGAC/lessons/tgac/version-control/tutorial.html>pull request <https://help.github.com/articles/creating-a-pull-request>@dimazest <https://twitter.com/dimazest>-- PELICAN_END_SUMMARY --service__Font Awesome\n<http://fortawesome.github.io/Font-Awesome/icons/>content/static/author_imagescontent/static/cv:cv:Writing an\narticletemplateTemplate: article_coverTemplate: articleCover: space-cat.pngspace-cat.pngcontent/static/article_coversbuildout <https://pypi.python.org/pypi/zc.buildout/2.2.1>buildoutrestview <https://pypi.python.org/pypi/restview>.rstmeow <https://pypi.python.org/pypi/meow/>.mdbuildoutsrc/Mr.\nDeveloper <https://pypi.python.org/pypi/mr.developer>bin/buildoutbuildoutpelicangit@github.com:qmcs/qmcs.github.ioCreative Commons Attribution 4.0 International\nLicense <http://creativecommons.org/licenses/by/4.0/deed.en_US>
https://github.com/brunoperry/Udacity,Deep Learning Nanodegree Foundation,
https://github.com/hkaushalya/CMSPubWordFreqAnalysis,CDF/CMS Publications' WORD analysis.,
https://github.com/anubhav-reddy/Fun-Projects,Practice and Fun Project Code,
https://github.com/natalia2q/Misc_Python,a mix of Python code that I've been working.,
https://github.com/davebiagioni/pylighter,"Simple, score-based text highlighting for Python","\nimport pylighter as pl\nfrom numpy import linspace\n\ntokens = 'Life is like riding a bicycle. To keep your balance, you must keep moving.'.split()\nscores = linspace(0, 1, len(tokens))\n\nfig, ax = pl.render(tokens, scores)\n_img/example.pngpylighter/examples.ipynb"
https://github.com/llathrop/AIND-Recognizer,Udacity AIND Recognizer project,http://www.numpy.org/https://www.scipy.org/http://scikit-learn.org/0.17/install.htmlhttp://pandas.pydata.org/http://matplotlib.org/http://ipython.org/notebook.htmlhttp://hmmlearn.readthedocs.io/en/latest/http://continuum.io/downloadssh\npip install git+https://github.com/hmmlearn/hmmlearn.git\nasl_recognizer.ipynbAIND_recognizer/jupyter notebook asl_recognizer.ipynbasl_recognizer/data/http://www-i6.informatik.rwth-aachen.de/~dreuw/database-rwth-boston-104.phphand_condensed.csvboston104.handpositions.rybach-forster-dreuw-2009-09-25.full.xmlhttp://www-i6.informatik.rwth-aachen.de/~dreuw/download/021.avitrain_words.csvtest_words.csvspeaker.csv
https://github.com/LiXiling/ml_insurancePred,Insurance Claim Prediction using Machine Learning - Udacity Nanodegree Capstone Project,
https://github.com/eisproject/levin,Lancaster Energy Visualization Interface,
https://github.com/shead-custom-design/pipecat,"Elegant, flexible data logging in Python for connected sensors and instruments.",http://pipecat.readthedocs.io/en/latest/battery-chargers.htmlhttp://pipecat.readthedocs.io/en/latest/gps-receivers.htmlhttp://www.gnu.org/licenses/
https://github.com/bdhammel/machine-learning-models,Tensorflow scripts of different machine learning algorithms ,./media/pca.png./media/vgg16.png./media/xwing.png./media/cae.png./media/vae.pnghttps://arxiv.org/pdf/1511.06434v2.pdf./media/dcgan.png
https://github.com/rjleveque/amath584a2016,"UW Applied Math 584, Autumn 2016",http://faculty.washington.edu/rjl/classes/am584a2016/sphinxhttps://github.com/rjleveque/amath584a2016/tree/master/index.ipynbhttp://mybinder.orghttp://mybinder.org:/repo/rjleveque/amath584a2016
https://github.com/arve0/microscopestitching,Automatic merge/stitching of regular spaced images,"pipbash\npip install microscopestitching\npython\nfrom microscopestitching import stitch\nfrom skimage.io import imsave\n\nimages = []\nfor i in range(50):\n    row = i // 10\n    col = i % 10\n    images.append(('%d.png' % i, row, col))\n\nmerged = stitch(images)\nimsave('merged.png', merged)\nhttp://nbviewer.ipython.org/github/arve0/microscopestitching/blob/master/notebooks/bash\ngit clone https://github.com/arve0/microscopestitching\ncd microscopestitching\npip install -r requirements.txt # install dependencies and microscopestitching-package\nbash\ntox\nbash\npip install -r docs/requirements.txt\nmake docs\n"
https://github.com/marisarivera/Arrivals,Análisis Preliminar,
https://github.com/ericinlinux/BDiSN_Assignment_6_old,Deprecated.,https://www.stats.ox.ac.uk/~snijders/siena/Glasgow_data.htmAssignment06v2.pdf
https://github.com/kho226/nueralNetwork,A nueral network built with the purpose of recognizing handwritten letters,/screenshots/usage.png?raw=truehttp://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/install.html
https://github.com/paulovn/docker-dl-gpu,Build a Docker image for Deep Learning processes running on GPUs,
https://github.com/priyaranjan1202/Machine-Learning,This repository contains  Machine learning projects I have been working on.Currently it contains projects from Udacity Nanodegree.,jupyter notebook
https://github.com/selvakumar-sss/FirstGitProject,Loading working jupyter notebooks,
https://github.com/miguel-faria/robot-serving,Master Thesis on Human-Robot Collaboration,
https://github.com/RaoOfPhysics/phd-notebooks,R Notebooks for my PhD research,"https://github.com/RaoOfPhysics/phdhttps://img.shields.io/badge/language-R-blue.svghttps://img.shields.io/badge/status-WIP-red.svghttps://www.r-project.org/.ipynbdatfinal_dataset.csv{r}\ndat <- read.csv(file = ""../quant_analysis/final_dataset.csv"", header = TRUE)\nhttp://jupyter.readthedocs.io/en/latest/install.htmlhttps://irkernel.github.io/installation/"
https://github.com/chrisjsewell/pandas3js,a pandas dataframe interface for traitlets and pythreejs,https://travis-ci.org/chrisjsewell/pandas3jshttps://coveralls.io/github/chrisjsewell/pandas3js?branch=masterhttps://pypi.python.org/pypi/pandas3js/https://traitlets.readthedocs.io/en/stable/index.htmlhttps://github.com/jovyan/pythreejshttp://pandas.pydata.org//pandas3js_example.ipynb/pandas3js_example.gifpandas3jsGeometryCollectionpandas.DataFrameGeometryCollectionpythreejs.Scenepythreejs.3DObject
https://github.com/pprzetacznik/IElixir,Jupyter's kernel for Elixir programming language,"https://travis-ci.org/pprzetacznik/IElixirhttps://github.com/pprzetacznik/IElixir/actions?query=workflow%3A""IElixir+CI""https://github.com/pprzetacznik/IElixir/actions?query=workflow%3A""IElixir+Docker""http://inch-ci.org/github/pprzetacznik/IElixirhttps://coveralls.io/github/pprzetacznik/IElixir?branch=masterhttps://gitter.im/pprzetacznik/IElixir?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge#configure-jupyter#configure-ielixir#install-kernel#use-ielixir#package-management-with-boyle#developement-mode#generate-documentation#docker#some-issues#contribution#references#licensevirtualenvvirtualenvwrapperBash\n$ pip install virtualenv virtualenvwrapper\nvirtualenvwrapper.sh~/.bash_profile.shBash\n$ source /usr/local/bin/virtualenvwrapper.sh\nBash\n$ mkvirtualenv jupyter-env\n$ workon jupyter-env\n(jupyter-env) $ pip install jupyter\nBash\n$ git clone https://github.com/pprzetacznik/IElixir.git\n$ cd IElixir\n$ mix deps.get\n$ mix test\n$ MIX_ENV=prod mix compile\n#zeromq-header-files-missingBash\n$ mix test --include skip\nBash\nmix local.rebar --force\n~/.mix/$PATHrebar~/.mix/kernel.json./resoucesBash\n$ ./install_script.sh\nBash\n(jupyter-env) $ jupyter console --kernel ielixir\nCtrl-DBash\n(jupyter-env) $ jupyter notebook resources/example.ipynb\nhttp://localhost:8888//resources/jupyter_pick_kernel.png?raw=true/resources/jupyter_ielixir_matrex_demo.png?raw=trueansoutout[1]./envs/you_new_environmentiex -S mixElixir\niex> Boyle.mk(""my_new_environment"")\n{:ok, [""my_new_environment""]}\nElixir\niex> Boyle.list()\n{:ok, [""my_new_environment""]}\nElixir\niex> Boyle.activate(""my_new_environment"")\n:ok\nElixir\niex> Boyle.install({:number, ""~> 0.5.7""})\n:ok\niex> Number.Currency.number_to_currency(2034.46)\n""$2,034.46""\nElixir\niex> Boyle.deactivate()\n:ok\niex> Number.Currency.number_to_currency(2034.46)\n** %UndefinedFunctionError{arity: 1, exports: nil, function: :number_to_currency, module: Number.Currency, reason: nil}\nhttps://github.com/pprzetacznik/IElixir/blob/master/resources/boyle%20example.ipynbhttps://github.com/pprzetacznik/IElixir/blob/master/resources/boyle%20example%20-%20matrex%20installation%20and%20usage.ipynbhttps://github.com/pprzetacznik/IElixir/blob/master/resources/inlineplot%20example%20-%20gnuplot.ipynbdevBash\n(jupyter-env) $ MIX_ENV=dev jupyter console --kernel ielixir\ndocBash\n$ MIX_ENV=docs mix docs\nhttps://hub.docker.com/r/pprzetacznik/ielixir\n$ docker run -p 8888:8888 --hostname localhost -v /my/workspace:/home/jovyan/work pprzetacznik/ielixir\nhttps://hub.docker.com/r/jupyter/base-notebook/https://hub.docker.com/_/elixir/https://hub.docker.com/r/pprzetacznik/ielixir-requirements/https://github.com/cprieto/docker-jupyter/blob/master/elixir/Dockerfile\n===> /home/travis/build/bryanhuntesl/IElixir/deps/erlzmq/c_src/erlzmq_nif.c:24:17: fatal error: zmq.h: No such file or directory\n #include ""zmq.h""\n                 ^\ncompilation terminated.\ndnf install zeromq-develbrew install zmqapt-get install libzmq3-devapk add zeromq-devBash\nELIXIR_ERL_OPTIONS=""-smp enable""\ninstall_script.shstart_script.shhttps://mattvonrocketstein.github.io/heredoc/ielixir-notebook-in-docker.htmlhttps://atom.io/packages/hydrogenhttp://blog.jonharrington.org/elixir-and-jupyter/https://medium.com/@tonyhammond/jupyter-notebooks-with-elixir-and-rdf-598689c2dad3https://web.archive.org/web/20191228085409/http://aipotato.com/2019/04/making-graphs-using-elixir-inside-jupyter-notebook/https://github.com/pminten/ielixirhttps://github.com/robbielynch/ierlanghttps://github.com/dsblank/simple_kernelhttp://andrew.gibiansky.com/blog/ipython/ipython-kernels/https://ipython.org/ipython-doc/dev/development/messaging.htmlNOTICELICENSE"
https://github.com/Pavle992/Cash-me-outside,How about that!?,
https://github.com/mahkuss/inflammation,inflammation project,
https://github.com/ilevcovitz/econ_tutoring_sign_in,Sign In for the Econ Tutoring Center,
https://github.com/brent-lemieux/p2-baseball,An investigation into whether or not the same factors that are correlated with scoring runs are also correlated with player salaries,/images/winshisto.png/images/winshisto2.png/images/coefficients.png/images/feature_importances.png
https://github.com/grigi/pyza14-docs,PyConZA 2014 Documentation presentation.,http://rawgit.com/grigi/pyza14-docs/master/Documentation.slides.html
https://github.com/kamidox/pandas_tutor,Tutorial for Pandas,
https://github.com/youralien/sign_follower,base repo for scaffolded computer vision project for comprobo17,"https://youtu.be/poReVhj1lSAneato_2dnavhttp://wiki.ros.org/gmappinghttp://wiki.ros.org/move_base/move_base_simple/goal/predicted_signhttps://drive.google.com/open?id=0B85lERk460TUYjFGLVg1RXRWamshttps://drive.google.com/open?id=0B85lERk460TUN3ZmUk15dmtPTFkhttps://drive.google.com/open?id=0B85lERk460TUTkdTQW5yQ0FwSEE\nrosbag play uturn.bag -l\n/camera/image_raw/compressed\nrosrun image_transport republish compressed in:=/camera/image_raw _image_transport:=compressed raw out:=/camera/image_raw\n\nrosrun sign_follower street_sign_recognizer.py\nhsv_imagebinarized_imageprocess_imagepython\n    def process_image(self, msg):\n        """""" Process image messages from ROS and stash them in an attribute\n            called cv_image for subsequent processing """"""\n        self.cv_image = self.bridge.imgmsg_to_cv2(msg, desired_encoding=""bgr8"")\n\n        left_top, right_bottom = self.sign_bounding_box()\n        left, top = left_top\n        right, bottom = right_bottom\n\n        # crop bounding box region of interest\n        cropped_sign = self.cv_image[top:bottom, left:right]\n\n        # draw bounding box rectangle\n        cv2.rectangle(self.cv_image, left_top, right_bottom, color=(0, 0, 255), thickness=5)\nleft_top = (x1,y1)right_bottom = (x2,y2)sign_bounding_boxpython\n    def sign_bounding_box(self):\n        """"""\n        Returns\n        -------\n        (left_top, right_bottom) where left_top and right_bottom are tuples of (x_pixel, y_pixel)\n            defining topleft and bottomright corners of the bounding box\n        """"""\n        # TODO: YOUR SOLUTION HERE\n        left_top = (200, 200)\n        right_bottom = (400, 400)\n        return left_top, right_bottom""\nStreetSignRecognizerimages/http://docs.opencv.org/2.4/modules/highgui/doc/reading_and_writing_images_and_video.html?highlight=imwrite#imwrite(n_rows, n_cols)(n_rows, n_cols, 3)https://en.wikipedia.org/wiki/HSL_and_HSV(n_rows, n_cols, 3)http://docs.opencv.org/2.4/modules/imgproc/doc/miscellaneous_transformations.html#cvtcolorself.cv_imagepython\n    def process_mouse_event(self, event, x,y,flags,param):\n        """""" Process mouse events so that you can see the color values associated\n            with a particular pixel in the camera images """"""\n        self.image_info_window = 255*np.ones((500,500,3))\n\n        # show hsv values\n        cv2.putText(self.image_info_window,\n                    \'Color (h=%d,s=%d,v=%d)\' % (self.hsv_image[y,x,0], self.hsv_image[y,x,1], self.hsv_image[y,x,2]),\n                    (5,50), # 5 = x, 50 = y\n                    cv2.FONT_HERSHEY_SIMPLEX,\n                    1,\n                    (0,0,0))\n\n        # show bgr values\n        cv2.putText(self.image_info_window,\n                    \'Color (b=%d,g=%d,r=%d)\' % (self.cv_image[y,x,0], self.cv_image[y,x,1], self.cv_image[y,x,2]),\n                    (5,100),\n                    cv2.FONT_HERSHEY_SIMPLEX,\n                    1,\n                    (0,0,0))\n__init__python\nself.image_info_window = None\ncv2.setMouseCallback(\'video_window\', self.process_mouse_event)\npython\n            if not self.image_info_window is None:\n                cv2.imshow(\'image_info\', self.image_info_window)\n                cv2.waitKey(5)\n__init__python\n            cv2.namedWindow(\'threshold_image\')\n            self.hsv_lb = np.array([0, 0, 0]) # hsv lower bound\n            cv2.createTrackbar(\'H lb\', \'threshold_image\', 0, 255, self.set_h_lb)\n            cv2.createTrackbar(\'S lb\', \'threshold_image\', 0, 255, self.set_s_lb)\n            cv2.createTrackbar(\'V lb\', \'threshold_image\', 0, 255, self.set_v_lb)\n            self.hsv_ub = np.array([255, 255, 255]) # hsv upper bound\n            cv2.createTrackbar(\'H ub\', \'threshold_image\', 0, 255, self.set_h_ub)\n            cv2.createTrackbar(\'S ub\', \'threshold_image\', 0, 255, self.set_s_ub)\n            cv2.createTrackbar(\'V ub\', \'threshold_image\', 0, 255, self.set_v_ub)\npython\n    def set_h_lb(self, val):\n        """""" set hue lower bound """"""\n        self.hsv_lb[0] = val\n\n    def set_s_lb(self, val):\n        """""" set saturation lower bound """"""\n        self.hsv_lb[1] = val\n\n    def set_v_lb(self, val):\n        """""" set value lower bound """"""\n        self.hsv_lb[2] = val\n\n    def set_h_ub(self, val):\n        """""" set hue upper bound """"""\n        self.hsv_ub[0] = val\n\n    def set_s_ub(self, val):\n        """""" set saturation upper bound """"""\n        self.hsv_ub[1] = val\n\n    def set_v_ub(self, val):\n        """""" set value upper bound """"""\n        self.hsv_ub[2] = val\nself.hsv_lbself.hsv_ubhttp://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_colorspaces/py_colorspaces.htmlgrid_size=(M,N)grid_image.pypython\nimport cv2\nimport os\n\nimgpath = os.path.join(os.path.dirname(os.path.realpath(__file__)),\n                       ""../images/leftturn_scene.jpg"")\nimg = cv2.imread(imgpath)\n\ngrid_cell_w = 64*3\ngrid_cell_h = 48*3\n\ncv2.namedWindow(""my_window"")\n\n# NumPy array slicing!!\ngrid_cell = img[grid_cell_h:2*grid_cell_h,\n                grid_cell_w:2*grid_cell_w] \n\ncv2.imshow(""my_window"", grid_cell)\ncv2.waitKey(0);\nboundingRecthttp://answers.opencv.org/question/4183/what-is-the-best-way-to-find-bounding-box-for-binary-mask/left_top = (x1, y1)right_bottom = (x2, y2) python\nif __name__ == \'__main__\':\n    images = {\n        ""left"": \'../images/leftturn_box_small.png\',\n        ""right"": \'../images/rightturn_box_small.png\',\n        ""uturn"": \'../images/uturn_box_small.png\'\n        }\n        \n    tm = TemplateMatcher(images)\ntm.predict python\nscenes = [\n    ""../images/uturn_scene.jpg"",\n    ""../images/leftturn_scene.jpg"",\n    ""../images/rightturn_scene.jpg""\n]\n\nfor filename in scenes:\n    scene_img = cv2.imread(filename, 0)\n    pred = tm.predict(scene_img)\n    print filename.split(\'/\')[-1]\n    print pred\ntm.predict bash\nuturn_scene.jpg\n{}\nleftturn_scene.jpg\n{}\nrightturn_scene.jpg\n{}\nhttp://docs.opencv.org/3.1.0/da/df5/tutorial_py_sift_intro.html python\nfor k, filename in images.iteritems():\n    # load template sign images as grayscale\n    self.signs[k] = cv2.imread(filename,0)\n\n    # precompute keypoints and descriptors for the template sign \n    self.kps[k], self.descs[k] = self.sift.detectAndCompute(self.signs[k],None)\npredictpredict_compute_prediction_compute_prediction python\n# Transform input image so that it matches the template image as well as possible\nM, mask = cv2.findHomography(img_pts, template_pts, cv2.RANSAC, self.ransac_thresh)\nimg_T = cv2.warpPerspective(img, M, self.signs[k].shape[::-1])\nimgvisual_diff = compare_images(img, self.signs[k])img_Tcompare_images(each_element - mean)/standard_devpredictcompare_images_compute_predictionvisual_diffTemplateMatcher"
https://github.com/ihmeuw/fungi,"Command-line interface to search provenance data generated by Provda, stored in ElasticSearch",provda package for provenance management\n<https://stash.ihme.washington.edu/users/adolgert/repos/provda/browse>
https://github.com/maxalbert/auto-exec-notebook,Illustrates how to programmatically generate and execute an IPython notebook,http://stackoverflow.com/questions/22328052/ipython-notebook-programatically-read-and-execute-cellshttp://nbviewer.ipython.org/github/maxalbert/auto-exec-notebook/blob/master/how-to-programmatically-generate-and-execute-an-ipython-notebook.ipynbnbviewerhttp://nbviewer.ipython.org/github/maxalbert/auto-exec-notebook/blob/master/executed_notebook_with_freq_5.0.ipynb
https://github.com/ziyanfeng/udacity-deep-learning,Assignments for Udacity's Deep Learning with TensorFlow course,"--rm--rmsh\n# you only need to ""run"" the container the first time:\ndocker run -p 8888:8888 -it --name tensorflow-udacity b.gcr.io/tensorflow-udacity/assignments:0.5.0\n# \xe2\x80\xa6do various things\xe2\x80\xa6\n# when you\'re done, control-C to kill jupyter and stop the container\n# when you\'re ready to do more things, you can now just ""start"" the container:\ndocker start -ai tensorflow-udacity\n# \xe2\x80\xa6do more things\xe2\x80\xa6\n# \xe2\x80\xa6repeat\xe2\x80\xa6\ndocker-machinehttp://stackoverflow.com/questions/32834082/how-to-increase-docker-machine-memory-mac--memory=8gdocker rundocker-machine-dhttps://docs.docker.com/machine/drivers/tensorflowdocker-machine env tensorflowDOCKER_HOSTtensorflowtensorflow/examples/udacity"
https://github.com/hplgit/bumpy,Quick tutorial of scientific computing with Python using a real physics application.,http://hplgit.github.io/bumpy/doc/pub/._bumpy010.html#app:resources
https://github.com/tarlen5/cbb_analytics,College Basketball analytics software for analyzing trends in 5 man units and rosters,LoadAllGames.pynotebooks/Explore_Play_By_Play_DB.ipynbplay_by_playgame_tablehttp://www.crummy.com/software/BeautifulSoup/https://pypi.python.org/pypi/tabulatehttp://pandas.pydata.org
https://github.com/anoblega/Spectral-Clustering-,Trabajo de Spectral Clustering para la matéria de Machine Learning,
https://github.com/shounakG/2012-US-presidential-Elections-Lobbying-Analysis,Presidential Elections 2012,
https://github.com/jklymak/PelicanSite,My Peilican Website,themes/pelican-bootstrapJMK/templates/publications.htmlbash\nsource activate pelican\ncd ~/Dropbox/PelicanSite/\nmake bib # to make the bibliography\nmake cp_upload # to install on site\nbash\nconda env create -f pelican.env\nliquid_tags.img
https://github.com/lapis-zero09/deep_learning_book,Deep Learning Book勉強会の資料,https://www.slideshare.net/ShinsakuKono/deep-learningbook-chap7
https://github.com/HanchenXiong/Python_Essential,a notebook for collecting pieces of Python programming at different corners,
https://github.com/lschollmeyer/gis_visualizations,Introductory Python visualizations for GIS data,
https://github.com/bamtak/titanic_survival_exploration,Titanic survival exploration Machine Learning project,http://www.numpy.org/http://pandas.pydata.orghttp://matplotlib.org/http://scikit-learn.org/stable/http://ipython.org/notebook.htmlhttp://continuum.io/downloadstitanic_survival_exploration.ipynbvisuals.pyvisuals.pytitanic_survival_exploration/bash\njupyter notebook titanic_survival_exploration.ipynb\nbash\nipython notebook titanic_survival_exploration.ipynb\ntitanic_data.csvpclassnamesexagesibspparchticketfarecabinembarkedsurvival
https://github.com/evizitei/NFIRS-property-loss-prediction,Capstone project for Udacity Machine Learning Engineer nanodegree,"\nfrom dbfread import DBF\nincidents_table = DBF(\'data/basicincident.dbf\')\nlen(incidents_table) # -> 2,311,716\n\n# this will be a great deal of output\n# but it\'s useful for seeing how records are structured\nfor record in table:\n    print(record)\n\nOrderedDict([\n  (u\'STATE\', u\'AK\'),\n  (u\'FDID\', u\'13425\'),\n  (u\'INC_DATE\', 3292011),\n  (u\'INC_NO\', u\'0000051\'),\n  (u\'EXP_NO\', 0),\n  (u\'VERSION\', u\'5.0\'),\n  (u\'DEPT_STA\', u\'8\'),\n  (u\'INC_TYPE\', u\'461\'),\n  (u\'ADD_WILD\', u\'N\'),\n  (u\'AID\', u\'1\'),\n  (u\'ALARM\', 32920110944),\n  (u\'ARRIVAL\', 32920110950),\n  (u\'INC_CONT\', 32920111004),\n  (u\'LU_CLEAR\', 32920111016),\n  (u\'SHIFT\', u\'\'),\n  (u\'ALARMS\', u\'0\'),\n  (u\'DISTRICT\', u\'\'),\n  (u\'ACT_TAK1\', u\'86\'),\n  (u\'ACT_TAK2\', u\'\'),\n  (u\'ACT_TAK3\', u\'\'),\n  (u\'APP_MOD\', u\'Y\'),\n  (u\'SUP_APP\', 0),\n  (u\'EMS_APP\', 0),\n  (u\'OTH_APP\', 4),\n  (u\'SUP_PER\', 0),\n  (u\'EMS_PER\', 0),\n  (u\'OTH_PER\', 5),\n  (u\'RESOU_AID\', u\'Y\'),\n  (u\'PROP_LOSS\', 18000),\n  (u\'CONT_LOSS\', 0),\n  (u\'PROP_VAL\', 18000),\n  (u\'CONT_VAL\', 0),\n  (u\'FF_DEATH\', 0),\n  (u\'OTH_DEATH\', 0),\n  (u\'FF_INJ\', 0),\n  (u\'OTH_INJ\', 0),\n  (u\'DET_ALERT\', u\'U\'),\n  (u\'HAZ_REL\', u\'N\'),\n  (u\'MIXED_USE\', u\'NN\'),\n  (u\'PROP_USE\', u\'419\'),\n  (u\'CENSUS\', u\'\')])\n\nfrom dbfread import DBF\nlookup_table = DBF(\'data/codelookup.DBF\')\nlen(lookup_table) # -> 6,619\n\nfor record in lookup_table:\n    print(record)\n./bin/build_lookup_csv./bin/data_to_sqlite\nimport dataset\n\ndb = dataset.connect(\'sqlite:///./sqlite/incidents.sqlite\')\nbasic_table = db[\'basic_incidents\']\nfire_table = db[\'fire_incidents\']\n\n# return one row from each table\nbasic_table.find_one()\nfire_table.find_one()\n\n# find by column values:\nbasic_table.find(FDID=u\'11100\', INC_NO=u\'391\')\n./bin/join_incidents_to_one_table\nimport dataset\n\ndb = dataset.connect(\'sqlite:///./sqlite/fire_incidents.sqlite\')\ntable = db[\'incidents\']\ntable.find_one()\n./bin/reduce_to_useful_inputs\nimport dataset\ndb = dataset.connect(\'sqlite:///./sqlite/useful_incidents.sqlite\')\ntable = db[\'incidents\']\nlen(table)\n# -> 196,574\n\nimport pandas as pd\nimport sqlite3\nconn = sqlite3.connect(\'./sqlite/useful_incidents.sqlite\')\ndata = pd.read_sql_query(""select PROP_LOSS from incidents"", conn)\ndata.describe()\n./bin/clean_data./bin/normalize_data\nimport dataset\ndb = dataset.connect(\'sqlite:///./sqlite/normalized_incidents.sqlite\')\ntable = db[\'incidents\']\ntable.find_one()\n./bin/split_off_test_set\nimport dataset\ntdb = dataset.connect(\'sqlite:///./sqlite/training_incidents.sqlite\')\nvdb = dataset.connect(\'sqlite:///./sqlite/validation_incidents.sqlite\')\nt_table = tdb[\'incidents\']\nv_table = vdb[\'incidents\']\nlen(t_table) # -> 162448\nlen(v_table) # -> 29957\njupyter notebook AlgorithmExploration.ipynb"
https://github.com/datosgobar/presentacion-type-checking-python,"Una nueva forma de tener type checking en python (PEP 484), usando una notación vieja (PEP 3107) - PyConAR 2016.",https://datosgobar.github.io/presentacion-type-checking-python#outline#ejemplos#referencias#herramientas-usadas-en-la-presentaci%C3%B3n#duraci%C3%B3n-recomendadamypymypytypeguardmypymypy --py2 examples/foo_py2.pymypymypy examples/foo_py3.pytypeguardhttps://www.python.org/dev/peps/pep-3107/https://www.python.org/dev/peps/pep-0484/https://github.com/jdan/cleaver
https://github.com/khwilson/pydata2014,Materials for PyData2014,cfb2013lines.csvconferences.csvbaseelomake_graphfdpmake_graphpython football/make_grapheloElo.ipynbsimulatemake_irt_neg_objectivescipy.optimizeIRT.ipynbtools
https://github.com/ricardodeazambuja/IJCNN2017,Short-Term Plasticity in a Liquid State Machine Biomimetic Robot Arm Controller,http://www.ijcnn.org/https://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_data_generator-figures.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_data_generator_and_physics.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation-Main.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_linear_regression.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_testing_learned_readouts-A-STP_ON.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_testing_learned_readouts-B-STP_OFF.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_testing_learned_readouts-C-STP_ON.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_testing_learned_readouts-D-STP_OFF.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/___2DofArm_simulation_testing_analysis.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/___2DofArm_simulation_testing_learned_readouts-analysis-metric-individual-sets.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/___2DofArm_simulation_testing_learned_readouts-analysis.ipynbhttps://github.com/ricardodeazambuja/IJCNN2017/blob/master/2DofArm_simulation_3D_printing_of_liquid_structure.ipynbhttps://github.com/ricardodeazambuja/BEEhttps://github.com/ricardodeazambuja/DTWhttps://github.com/ricardodeazambuja/IJCNN2017/raw/master/IJCNN2017_draft.pdfhttps://github.com/ricardodeazambuja/ICONIP2016https://github.com/ricardodeazambuja/IJCNN2016https://github.com/ricardodeazambuja/IJCNN2017-2https://github.com/ricardodeazambuja/I2MTC2017-LSMFusion
https://github.com/cvetakg/Traffic_Sign_Classifier_Jelena,Traffic_Sign_Classifier,
https://github.com/eduDorus/udacity_dl_project_4,Language Translation,
https://github.com/lorenzomartino86/titanic-survival,A sample machine learning predictor for Kaggle competitions startup,
https://github.com/jbrambleDC/datachallenge,This is our data challenge. Used to asses how potential interns technical skills are.,
https://github.com/nishalad95/Langevin-Monte-Carlo,Statistical simulation of Brownian Motion using the Langevin Monte Carlo Markov Chain algorithm for a particle under the influence of a drift function. ,
https://github.com/avtomato/netology-homework,:snake: Netology python course homeworks ,http://netology.ru/programs/python
https://github.com/petethemeat/quora-competition,Repository for our final Data Science project,
https://github.com/tomlouden/SPIDERMAN-paper,The first spiderman paper,
https://github.com/wesleybeckner/wesleybeckner.github.io,wesley's github website,"http://jekyllrb.com/preview.jpghttp://jamigibbs.github.io/phantom/bash\n  git clone https://github.com/jamigibbs/phantom.git your-dir-name && cd your-dir-name\n  bash\n  gem install bundler\n  bundle install\n  bundle exec jekyll serve\n  sudoer installed then!](http://jekyllrb.com/docs/installation/)_\n\n3. Visit in your browser at:\n\n  \n\n## Launching with Github Pages :rocket:\n\nJekyll + Github pages is a marriage made in heaven. You can [use your own custom domain name](https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/) or use the default Github url (ie. http://username.github.io/repository) and not bother messing around with DNS settings.\n\n## Theme Features\n\n### Navigation\n\nNavigation can be customized in under thekey. Default settings:\n\n```yaml\nnav_item:\n    - { url: \'/\', text: \'Home\' }\n    - { url: \'/about\', text: \'About\' }\n```\n\nSet thevariable to false into disable navigation.\n\n### Contact Form\n\nYou can display a contact form within the modal window template. This template is already setup to use the [Formspree](https://formspree.io) email system. You\'ll just want to add your email address to the form in.\n\nPlace the modal window template in any place you\'d like the user to click for the contact form.\nThe template will display a link to click for the contact form modal window:\n\n```liquid\n{% include contact.html %}\n{% include contact-modal.html %}\n```\n\n### Animation Effects\n\nAnimations with CSS classes are baked into the theme. To animate a section or element, simply add the animation classes:\n\n```html\n<div id=""about-me"" class=""wow fadeIn"">\n  I\'m the coolest!\n</div>\n```\n\nFor a complete list of animations, see the [animation list](http://daneden.github.io/animate.css/).\n\n### Pagination\n\nBy default, pagination on the home page will activate after 10 posts. You can change this within liquid\n  {% for post in paginator.posts %}\n    {% include post-content.html %}\n  {% endfor %}\n\n  {% include pagination.html %}\nhttp://jekyllrb.com/docs/pagination/https://github.com/twbs/bootstrap/blob/master/LICENSEhttps://github.com/matthieua/WOW#open-source-licensehttps://github.com/daneden/animate.css/blob/master/LICENSE"
https://github.com/dustin-anthc/CCHRC,A repository of notebooks that we use for data analysis,
https://github.com/pattrickmiller/udacity,Udacity Projects,
https://github.com/badphysics/velocity_selector,velocity selector for university physics II at RIT,
https://github.com/llSourcell/The_evolution_of_gradient_descent,"This is the code for ""The Evolution of Gradient Descent"" by Siraj Raval on Youtube",https://stats.stackexchange.com/questions/220494/how-does-the-adam-method-of-stochastic-gradient-descent-workhttps://youtu.be/nhqo0u1a6fwhttps://pip.pypa.io/en/stable/jupyter notebookhttps://github.com/GRYEhttps://github.com/dtnewman/gradient_descent
https://github.com/Davin-IBM/Proof-of-Technology,Proofs of Technology (PoT) are to determine feasible solutions to technical problems.,DSX
https://github.com/ledrui/Advanced-Lane-Lines-detection,Detecting road lane using advanced Computer Vision techniques ,http://www.udacity.com/drivehttps://github.com/udacity/CarND-Advanced-Lane-Lines/blob/master/writeup_template.mdcamera_caltest_imagescv2.imwrite()ouput_imagesproject_video.mp4challenge_video.mp4harder_challenge.mp4
https://github.com/ishantiw/customer_insights,Customer Insights,..\'  |  |  ||  |  \\  :|  -\' | .\'  /   |  ||  \'--\'  /|  -----\'---\'  ---\'  --\'------\'\n    ----------------------------------------------------------------- \n\n\nWelcome to your Node.js project on Cloud9 IDE!\n\nThis chat example showcases how to use with a staticserver.\n\n## Running the server\n\n1) Open
https://github.com/gacafe/vala_tc,Introduction to Python for Librarians,https://gacafe.github.com/vala_tc/content
https://github.com/Yurlungur/spectral-methods-demo,A Demonstration of Spectral Methods in Python,mailto:jonah.maxwell.miller@gmail.com
https://github.com/jfnavarro21/Python,"Work in numpy and pandas, plus simple coding algorithms",
https://github.com/russodanielp/sbv,sbv Challenge,https://sbvimprover.com/challenge-4
https://github.com/sophienchu/tutorials,trying to learn python,
https://github.com/lexieheinle/jour407homework,Agate-analyzed data for data journalism class,DataNormalizationHomeworkDataSmellsHomeworkJoinHomeworkChartHomeworkhttps://stanford.edu/~mwaskom/software/seaborn/http://matplotlib.orgChartSecondHomeworkIndependentStoryhttp://www.sos.ne.gov/elec/prev_elec/index.htmlhttp://store.ire.org/products/numbers-in-the-newsroom-using-math-and-statistics-in-news-second-edition-e-versionCellPhoneStoryhttp://www.psc.nebraska.gov/ntips/ntips_e911.htmlhttp://homelandsecurity.iowa.gov/programs/e_911.htmlWellDatabaseshttp://quickstats.nass.usda.govhttp://quickstats.nass.usda.govWellDatabases/wells_acres_total.csvClimateDatahttp://climod.unl.edu/ClimateData/snrScrapper.pyhttp://snr.unl.edu/lincolnweather/data/monthly-observed-vs-normals.aspSpouseBusinessStoryhttp://www.census.gov/econ/sbo/getdata.htmlStormDatahttps://www.ncdc.noaa.gov/stormevents/StormData/findNebraska.pyUSstatesNaturalBeautyhttps://www.dropbox.com/s/qfv8xn4cffwqtvg/naturalamenities.csv?dl=0http://www.ers.usda.gov/data-products/natural-amenities-scale.aspxUSstatesNaturalBeauty/natural-amenities-map.png
https://github.com/jkroso/HTTP.jl,An HTTP client and server for Julia,https://github.com/jkroso/Kip.jlhttps://github.com/jkroso/Jest.jl
https://github.com/thedanschmidt/unsupervised-stock-features,"My final project for Professor Gu's Mathematics of Big Data class, Fall 2016 Harvey Mudd College.",make datamake train-1.0-jqp-initial-data-explorationpip freeze > requirements.txt
https://github.com/streety/djangodistrict-geoviews-bokeh-intro,Lightning talk given at the django district January 2017 new tech event on geoviews and bokeh,
https://github.com/anxingle/ctc_example,CTC tutorial of OCR recognition(tensorflow0.9),https://github.com/sjchoi86/Tensorflow-101
https://github.com/cessor/showmanship,A small presentation framework. You don't need PowerPoint. ,
https://github.com/rpicatoste/carnd-term1-project2-traffic-sign-classifier,"Self-Driving Car Nanodegree Project 2, a traffic sign classifier",https://d17h27t6h515a5.cloudfront.net/topher/2017/February/5898cd6f_traffic-signs-data/traffic-signs-data.zip
https://github.com/LukasMosser/Jupetro,A collection of oil&gas related Jupyter notebooks,http://mybinder.org:/repo/lukasmosser/jupetro
https://github.com/oist/TQM-demostrations,things that I might want to share with others in TQM,
https://github.com/abhshkdz/neural-vqa-attention,:question: Attention-based Visual Question Answering in Torch,http://i.imgur.com/VbqIRZz.png#train-your-own-network#extract-image-features#preprocess-vqa-dataset#training#use-a-pretrained-model#pretrained-models-and-data-files#running-evaluation#resultsnum_attention_layers#resultssplit1trainval2trainvaltest\ncd data/\npython vqa_preprocessing.py --download True --split 1\ncd ..\n\npython prepro.py --input_train_json data/vqa_raw_train.json --input_test_json data/vqa_raw_test.json --num_ans 1000\n\nsh scripts/download_vgg19.sh\nth prepro_img.lua -image_root /path/to/coco/images/ -gpuid 0\n\nth train.lua\nsan1_2.t7trainvalsan2_2.t7trainvalparams_1.jsontrainvalparams_2.jsontrainvaltestqa_1.h5trainvalqa_2.h5trainvaltestimg_train_1.h5img_test_1.h5trainvalimg_train_2.h5img_test_2.h5trainvaltest\nmodel_path=checkpoints/model.t7 qa_h5=data/qa.h5 params_json=data/params.json img_test_h5=data/img_test.h5 th eval.lua\nvaltesthttp://i.imgur.com/Q0byOyp.jpgtrainvaltrainvaltest
https://github.com/mutaihillary/Mytodo_app,"Todo App built using Flask, SQLAlchemy and intergrate with login API",
https://github.com/codrut3/Kaggle-notebooks,"A collection of my Jupyter notebooks, created while analyzing data during Kaggle competitions.",
https://github.com/DJMedhaug/Boggler,Dana and Kevin's Boggler project.,
https://github.com/kacerchio/CS505-final-project,This is a repository for analysis on the success of movie releases based upon IMDB movie data. ,
https://github.com/bird-house/twitcher,Security Proxy for Web Processing Services (WPS),Leo <https://dict.leo.org/ende/index_en.html>WeaverTwitcher fork <https://github.com/ouranosinc/twitcher/>BirdhouseReadTheDocs
https://github.com/opentrv/ors,OpenTRV REST Server,
https://github.com/LibraryOfCongress/data-exploration,Tutorials for working with Library of Congress collections data,
https://github.com/Databingo/Databingo,Databooking examples,
https://github.com/mat-esp-2015/funcoes-douglas-paulo-julyana,funcoes-douglas-paulo-julyana created by Classroom for GitHub,"http://www.leouieda.com/matematica-especial/http://www.uerj.br/http://www.leouieda.com/http://software-carpentry.org/alunos.txthttp://jupyter.org/http://127.0.0.1:8888$ jupyter notebookgit addgit commitgit pushgit pull origin masterespacamento = (maximo - minimo)/(N - 1)indices = range(0, N, 1)dado = dados[i + 1]espacamento=(maximo-minimo)/ (N-1)indices=range (0,N,1)dado= dados [i+ 1]for i in range(0, N):A[k][N - 1]for i in range(0, 39):A[k][47]temperaturamedia_por_horalinhasomatorioavarmehlistahttp://creativecommons.org/licenses/by/4.0/https://i.creativecommons.org/l/by/4.0/88x31.png"
https://github.com/elmasria/titanic-survival-exploration,Titanic Survival Exploration,https://www.python.org/download/releases/2.7/http://www.numpy.org/http://pandas.pydata.orghttp://matplotlib.org/http://scikit-learn.org/stable/http://ipython.org/notebook.htmltitanic_survival_exploration/bash\njupyter notebook titanic_survival_exploration.ipynb\nbash\nipython notebook titanic_survival_exploration.ipynb\ntitanic_data.csvpclassnamesexagesibspparchticketfarecabinembarkedsurvival
https://github.com/ducha-aiki/pytorch-sift,PyTorch implementation of SIFT descriptor,"https://github.com/pytorch/pytorchhttps://github.com/arraiyopensource/korniakornia.features.SIFTDescriptorhttps://github.com/perdoch/hesaff/blob/master/siftdesc.cpphttp://cmp.felk.cvut.cz/~chum/papers/perdoch-cvpr09.pdfhttp://www.vlfeat.org/sandbox/api/sift.html/img/mp_kernel.png/img/vlfeat_kernel.pngpython\n\ndescriptor_mp_mode = SIFTNet(patch_size = 65,\n                        sigma_type= 'hesamp',\n                        masktype='CircularGauss')\n\ndescriptor_vlfeat_mode = SIFTNet(patch_size = 65,\n                        sigma_type= 'vlfeat',\n                        masktype='Gauss')\n\n/img/hpatches-results.png\nOPENCV-SIFT - mAP \n   Easy     Hard      Tough     mean\n-------  -------  ---------  -------\n0.47788  0.20997  0.0967711  0.26154\n\nVLFeat-SIFT - mAP \n    Easy      Hard      Tough      mean\n--------  --------  ---------  --------\n0.466584  0.203966  0.0935743  0.254708\n\nPYTORCH-SIFT-VLFEAT-65 - mAP \n    Easy      Hard      Tough      mean\n--------  --------  ---------  --------\n0.472563  0.202458  0.0910371  0.255353\n\nNUMPY-SIFT-VLFEAT-65 - mAP \n    Easy      Hard      Tough      mean\n--------  --------  ---------  --------\n0.449431  0.197918  0.0905395  0.245963\n\nPYTORCH-SIFT-MP-65 - mAP \n    Easy      Hard      Tough      mean\n--------  --------  ---------  --------\n0.430887  0.184834  0.0832707  0.232997\n\nNUMPY-SIFT-MP-65 - mAP \n    Easy     Hard      Tough      mean\n--------  -------  ---------  --------\n0.417296  0.18114  0.0820582  0.226832\n\n\nhttps://github.com/ducha-aiki/numpy-sifthttps://github.com/perdoch/hesaff/blob/master/siftdesc.cpp\n@InProceedings{AffNet2018,\n    title = {Repeatability Is Not Enough: Learning Affine Regions via Discriminability},\n    author = {Dmytro Mishkin, Filip Radenovic, Jiri Matas},\n    booktitle = {Proceedings of ECCV},\n    year = 2018,\n    month = sep\n}\n\n"
https://github.com/sarineb/lebanon-refugee-data,Analyzing data from informal settlements of Syrian refugees in Lebanon,
https://github.com/bohare/MNIST-Classification,Classifying standard MNIST dataset with NNs.,
https://github.com/ccopelan/ubcs3-exercises,Exercises for the UBC Scientific Software Seminar,
https://github.com/matthiaskoenig/sbmlutils,Python utilities for SBML,SBML <http://www.sbml.org>libsbml <http://sbml.org/Software/libSBML>https://github.com/matthiaskoenig/sbmlutils <https://github.com/matthiaskoenig/sbmlutils>https://sbmlutils.readthedocs.io <https://sbmlutils.readthedocs.io>contributing guidelines\n<https://github.com/matthiaskoenig/sbmlutils/blob/develop/.github/CONTRIBUTING.rst>LGPLv3 <http://opensource.org/licenses/LGPL-3.0>sbmlutilspypi <https://pypi.python.org/pypi/sbmlutils>tkinter
https://github.com/richard-alexander/language-translation,Deep learning: Simple model for language translation using encoder/decoder recurrent neural network (RNN),
https://github.com/chrishokamp/constrained_decoding,Lexically constrained decoding for sequence generation using Grid Beam Search,"https://arxiv.org/abs/1704.07138https://github.com/rsennrich/nematus\ngit clone https://github.com/chrishokamp/constrained_decoding.git\ncd constrained_decoding\npip install -e .\nhttp://deeplearning.net/software/theano/install_ubuntu.htmlhttps://github.com/EdinburghNLP/nematus/tree/theano\ngit clone https://github.com/EdinburghNLP/nematus.git\ncd nematus\ngit checkout theano\npython setup.py install\n\n# CHANGE THIS TO A LOCAL PATH \nEXP_DIR=/data/mt_data/nematus_en-de_example\n\n# Download one of the Edinburgh pre-trained Nematus models from WMT 2016\nmkdir $EXP_DIR && cd $EXP_DIR\nLANG_PAIR=en-de\nwget -r --cut-dirs=2 -e robots=off -nH -np -R index.html* http://data.statmt.org/rsennrich/wmt16_systems/$LANG_PAIR/\n\ncd $EXP_DIR\n# get subword-nmt\ngit clone https://github.com/rsennrich/subword-nmt\nSUBWORD=$EXP_DIR/subword-nmt\n\n# get moses scripts for preprocessing\ngit clone https://github.com/marian-nmt/moses-scripts.git \nMOSES_SCRIPTS=$EXP_DIR/moses-scripts\n\nSRC=en\nTRG=de\n\n# Download the WMT 16 En-De test data\nTEST_DATA=$EXP_DIR/wmt_test\nmkdir $TEST_DATA && cd $TEST_DATA\nwget http://data.statmt.org/wmt16/translation-task/test.tgz\ntar xvf test.tgz\n\n# preprocess test data\n# SRC\ncat $TEST_DATA/test/newstest2016-ende-src.en.sgm | $MOSES_SCRIPTS/scripts/generic/input-from-sgm.perl | \\\n$MOSES_SCRIPTS/scripts/tokenizer/normalize-punctuation.perl -l $SRC | \\\n$MOSES_SCRIPTS/scripts/tokenizer/tokenizer.perl -l $SRC -penn | \\\n$MOSES_SCRIPTS/scripts/recaser/truecase.perl -model $EXP_DIR/$LANG_PAIR/truecase-model.$SRC | \\\n$SUBWORD/apply_bpe.py -c $EXP_DIR/$LANG_PAIR/$SRC$TRG.bpe > $TEST_DATA/newstest2016-$SRC.preprocessed\n\n# we\'ll use this as the reference when computing BLEU scores\n$MOSES_SCRIPTS/scripts/generic/input-from-sgm.perl < $TEST_DATA/test/newstest2016-ende-ref.de.sgm > $TEST_DATA/test/newstest2016-ende-ref.de\n\n# extract a small sample from the test set\ncat $TEST_DATA/newstest2016-$SRC.preprocessed | head -500 >  $TEST_DATA/newstest2016-$SRC.preprocessed.small\n\n\nMODEL_DIR=$EXP_DIR/$LANG_PAIR\n# Now open $MODEL_DIR/model.npz.json, editing the \'dictionaries\' key to point to the full path of the dictionaries\n# i.e. $EXP_DIR/$SRC_LANG-$TRG_LANG/vocab.en.json\n\n# for example, mine looks like this:\n#  ""dictionaries"": [\n#    ""/data/mt_data/nematus_en-de_example/en-de/vocab.en.json"",\n#    ""/data/mt_data/nematus_en-de_example/en-de/vocab.de.json""\n#  ],\n\n# your path to `constrained_decoding`\nGBS=~/projects/constrained_decoding\n\n# run translation without constraints \npython $GBS/scripts/translate_nematus.py \\\n  -m $MODEL_DIR/model.npz \\\n  -c $MODEL_DIR/model.npz.json \\\n  -i $TEST_DATA/newstest2016-$SRC.preprocessed.small \\\n  --alignments_output $TEST_DATA/newstest2016-$SRC.preprocessed.small.alignments \\\n  > $TEST_DATA/newstest2016-$SRC.preprocessed.small.baseline_translated\n\n\n# run translation with constraints \nCONSTRAINTS=$GBS/examples/nematus/wmt_16_en-de/sample.constraints.wmt-test.small.json\n\npython $GBS/scripts/translate_nematus.py \\\n  -m $MODEL_DIR/model.npz \\\n  -c $MODEL_DIR/model.npz.json \\\n  -i $TEST_DATA/newstest2016-$SRC.preprocessed.small \\\n  --constraints $CONSTRAINTS \\\n  --alignments_output $TEST_DATA/newstest2016-$SRC.preprocessed.small.constrained.alignments \\\n  > $TEST_DATA/newstest2016-$SRC.preprocessed.small.constrained_translated\n\n# Check BLEU Scores\n# postprocess baseline\ncat $TEST_DATA/newstest2016-$SRC.preprocessed.small.baseline_translated | sed \'s/\\@\\@ //g\' | \\\n$MOSES_SCRIPTS/scripts/recaser/detruecase.perl | \\\n$MOSES_SCRIPTS/scripts/tokenizer/detokenizer.perl -l $TRG \\\n> $TEST_DATA/newstest2016-$SRC.preprocessed.small.baseline_translated.postprocessed\n\n# postprocess constrained\ncat $TEST_DATA/newstest2016-$SRC.preprocessed.small.constrained_translated | sed \'s/\\@\\@ //g\' | \\\n$MOSES_SCRIPTS/scripts/recaser/detruecase.perl | \\\n$MOSES_SCRIPTS/scripts/tokenizer/detokenizer.perl -l $TRG \\\n> $TEST_DATA/newstest2016-$SRC.preprocessed.small.constrained_translated.postprocessed\n\n# get BLEU scores\n# we only used the first 500 lines \ncat $TEST_DATA/test/newstest2016-ende-ref.de | head -500 >  $TEST_DATA/test/newstest2016-ende-ref.de.small\n\n# baseline\n$MOSES_SCRIPTS/scripts/generic/multi-bleu.perl $TEST_DATA/test/newstest2016-ende-ref.de.small < $TEST_DATA/newstest2016-$SRC.preprocessed.small.baseline_translated.postprocessed\n\n# with constraints\n$MOSES_SCRIPTS/scripts/generic/multi-bleu.perl $TEST_DATA/test/newstest2016-ende-ref.de.small < $TEST_DATA/newstest2016-$SRC.preprocessed.small.constrained_translated.postprocessed\n\n\n@InProceedings{hokamp-liu:2017:Long,\n  author    = {Hokamp, Chris  and  Liu, Qun},\n  title     = {Lexically Constrained Decoding for Sequence Generation Using Grid Beam Search},\n  booktitle = {Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)},\n  month     = {July},\n  year      = {2017},\n  address   = {Vancouver, Canada},\n  publisher = {Association for Computational Linguistics},\n  pages     = {1535--1546},\n  url       = {http://aclweb.org/anthology/P17-1141}\n}\n*.json[[[c1_t1, c1_t2], [c2_t1, c2_t2, c2_t3], ...], ...]*.jsonscripts/run_constrained_decoding_server.py"
https://github.com/daedaluschan/HKAiportSchedule,HKAiportSchedule,
https://github.com/nicolasalvarez/titanic_survival_exploration,Project 0: Titanic Survival Exploration,http://www.numpy.org/http://pandas.pydata.orghttp://matplotlib.org/http://scikit-learn.org/stable/http://ipython.org/notebook.htmlhttps://www.continuum.io/downloadstitanic_survival_exploration.ipynbtitanic_visualizations.pytitanic_survival_exploration/bash\njupyter notebook titanic_survival_exploration.ipynb\nbash\nipython notebook titanic_survival_exploration.ipynb\ntitanic_data.csvsurvivalpclassnamesexagesibspparchticketfarecabinembarked
https://github.com/NIEHS/orso,ORSO (Online Resource for Social Omics) is an web application that leverages a social network to connect life scientists to NGS data of interest.,https://github.com/lavenderca/genomics-network/blob/master/docs/user_manual.mdhttps://github.com/lavenderca/genomics-network/blob/master/docs/dev_manual.md
https://github.com/1501213456/2016.M3.TQF-ML.FundPerformanceAttribution,Fund Performance Attribution and Prediction,https://github.com/1501213456/2016.M3.TQF-ML.FundPerformanceAttribution/blob/master/Benchmark_index.csvhttps://github.com/1501213456/2016.M3.TQF-ML.FundPerformanceAttribution/blob/master/Target_Active_Funds.csvhttps://github.com/1501213456/2016.M3.TQF-ML.FundPerformanceAttribution/blob/master/Final%20Report-Fund%20Performance%20Attribution%20and%20Prediction.pdfhttps://github.com/1501213456/2016.M3.TQF-ML.FundPerformanceAttribution/blob/master/FundPerformanceAttribution.ipynb
https://github.com/EricDoug/tensorflowDev,tensorflowDev主要记录我的一些学习tensorflow的代码。,
https://github.com/Himanshu141/StreetSignRecognition,ML Hackathon by MapMyIndia and BITS ACM on Kaggle,https://github.com/sawarniayushhttps://github.com/himanshu141https://github.com/rishabhjoshi
https://github.com/chembl/autoencoder_ipython,Ipython notebook for blog post entry,
https://github.com/jwilber/python_nlp,Python nlp stuff with NLTK,
https://github.com/openhealthcare/openspirometer,Better open data with the open spirometer,
https://github.com/dvm-shlee/PyNIT,Python based NeuroImaging Toolkit,
https://github.com/wilkens/edinburgh-masterclass,"Materials for masterclass in quantitative humanities at Edinburgh, Sept 2016",jupyter notebook00 Intro and Setup.ipynb
https://github.com/donkey-hotei/neuraldata,Exploring Neural Data @ Brown,
https://github.com/sujitpal/intro-dl-talk-code,Jupyter notebooks and code for Intro to DL talk at Genesys,
https://github.com/Pmcmanus02/hello-world,Starting my Git hub.,
https://github.com/cabaf/udacity-face-generation,Generating celebrity faces with GANs,
https://github.com/yeshg/AI_Art,Deepdream approach to generate high-resolution visualizations of Convolutional Neural Networks.,http://caffe.berkeleyvision.org/installation.htmlhttps://github.com/BVLC/caffe/tree/master/models/bvlc_googlenetpycaffe_pathmodel_pathhttps://github.com/google/deepdreamhttps://github.com/kylemcdonald/deepdream/blob/master/dream.ipynbhttps://github.com/auduno/deepdrawhttps://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a
https://github.com/glouppe/tutorials-scikit-learn,Scikit-Learn tutorials,https://www.continuum.io/downloads\nconda install numpy scipy scikit-learn jupyter matplotlib \n\ngit clone https://github.com/glouppe/tutorial-scikit-learn.git\ncd tutorial-scikit-learn\njupyter notebook\nhttp://mybinder.org/repo/glouppe/tutorial-scikit-learn
https://github.com/spm2164/data-homework,homework for allison!,
https://github.com/Biodun/Data-Science-Projects,Personal data science projects I've done,http://nbviewer.ipython.org/github/Biodun/Data-Science-Projects/blob/master/BayAreaBikeShare/Data_challenge_1.ipynb
https://github.com/jorghyq/Gwyddion-Utils,Some modules for Gwyddions,http://gwyddion.net/import gwy
https://github.com/esmatanis/Advanced_Lane_Lines_Finding,"Developed a pipeline to process a video stream from a car driving on a highway in order to robustly identify individual lane lines from the road irrespective of curvature.  Primary languages/libraries: Python, OpenCV",calibrate.pylane_detection.pypipeline.pyProject.ipynbcalibrate.pycalibrationcalibration.add_image()calibration.obj_pointscalibration.find_corners()calibration.img_pointsoutput_images/calibration/corners.pngcalibration.obj_pointscalibration.img_pointscv2.calibrateCamera()calibration.calc_distortion()cv2.undistort()calibration.undistort_img()output_images/calibration/undistorted.pnglane_detection.split_channels()lane_detection.pyoutput_images/thresholding/white.pngoutput_images/thresholding/white_challenge.pngoutput_images/thresholding/yellow.pngoutput_images/thresholding/yellow_challenge.pnglane_detection.warper()lane_detection.pyoutput_images/perspective/perspective.pnglane_detection.sliding_window()lane_detection.pylane_detection.get_good_pixels()lane_detection.pyoutput_images/detection/window_sliding.pngoutput_images/detection/window_sliding_challenge.pngnumpy.polyfitlane_detection.curve_fit()lane_detection.pylane_detection.target_search()lane_detection.pyoutput_images/detection/target_search.pnglane_line.calc_R()pipeline.pylane_linepipeline.pypipeline(img)pipeline.pyimgoutput_images/output/output.pnghttps://www.youtube.com/watch?v=kIUPB5wd10Ehttps://www.youtube.com/watch?v=A1_HX8_tke4
https://github.com/TheGoldenRatio/thegoldenratio.github.com,blog,
https://github.com/kingsman142/Projects,Some of my ongoing and finished projects,
https://github.com/habinez/Google-ML-Recipes,A guide to a a friend following Machine Learning Recipes with Josh Gordon,https://nbviewer.jupyter.org/github/habinez/Google-ML-Recipes/blob/master/00_Week%200%20Environment%20Set%20Up.ipynbhttps://nbviewer.jupyter.org/github/habinez/Google-ML-Recipes/blob/master/01_Week%201%20Hello%20World.ipynbhttps://nbviewer.jupyter.org/github/habinez/Google-ML-Recipes/blob/master/02_Week%201%20Visualizing%20a%20Decision%20Tree.ipynb
https://github.com/mmalmrose/Continuum_flux_demo,read in and plot some astronomical spectra while fitting components to the continuum,
https://github.com/nicolasfauchereau/SAM,Calculates the Southern Annular Mode index (SAM) from NCEP/NCAR monthly anomalies,http://htmlpreview.github.io/?https://github.com/nicolasfauchereau/SAM/blob/master/calculates_SAM_index.html
https://github.com/VeerpalBrar/ML-Algorithms-from-Scratch,Implement algorithms from scratch,
https://github.com/toddhodes/ipynb,"iphython note example, checking out the github integration",
https://github.com/hatshex/text-mining,Clase de minería de texto del ITAM,
https://github.com/GGYIMAH1031/LPinPython,Linear Programming in Python (Using PuLP),
https://github.com/DmitryUlyanov/AGE,"Code for the paper ""Adversarial Generator-Encoder Networks""","https://arxiv.org/abs/1704.02304data/readme_pics/age.pngpytorch 0.2jupyter notebook\nbash download_pretrained.sh\njupyter notebookevaluate.ipynbimagenetcelebacifar10evaluate.ipynbdata/readme_pics/celeba_samples.pngdata/readme_pics/celeba_reconstructions.pngdata/readme_pics/cifar10_samples.pngdata/readme_pics/cifar10_reconstructions.pngdata/readme_pics/imagenet_samples.pngdata/readme_pics/imagenet_reconstructions.pngage.py--dataset--dataroottorchvisiontrainval--image_size--save_dir--nz-- batch_size--netG.pymodels--netE.pymodels--netG_chp--netE_chp--nepoch--start_epoch--e_updates<num steps>;KL_fake:<weight>,KL_real:<weight>,match_z:<weight>,match_x:<weight>--g_updates<num steps>;KL_fake:<weight>,match_z:<weight>,match_x:<weight>--workers--ngf--ndf--beta1--cpu--criterionparamnonparamparam--KLqppqqp--noisespheregaussiansphere--match_zL1|L2|coscos--match_xL1|L2|cosL1--drop_lrdrop_lr--save_every50--manual_seed123cmddata_roottrainval\npython age.py --dataset celeba --dataroot <data_root> --image_size 64 --save_dir <save_dir> --lr 0.0002 --nz 64 --batch_size 64 --netG dcgan64px --netE dcgan64px --nepoch 5 --drop_lr 5 --e_updates \'1;KL_fake:1,KL_real:1,match_z:0,match_x:10\' --g_updates \'3;KL_fake:1,match_z:1000,match_x:0\'\nbatch_size\npython age.py --dataset celeba --dataroot <data_root> --image_size 64 --save_dir <save_dir> --start_epoch 5 --lr 0.0002 --nz 64 --batch_size 256 --netG dcgan64px --netE dcgan64px --nepoch 6 --drop_lr 5   --e_updates \'1;KL_fake:1,KL_real:1,match_z:0,match_x:15\' --g_updates \'3;KL_fake:1,match_z:1000,match_x:0\' --netE_chp  <save_dir>/netE_epoch_5.pth --netG_chp <save_dir>/netG_epoch_5.pth\n\npython age.py --dataset imagenet --dataroot /path/to/imagenet_dir/ --save_dir <save_dir> --image_size 32 --save_dir ${pdir} --lr 0.0002 --nz 128 --netG dcgan32px --netE dcgan32px --nepoch 6 --drop_lr 3  --e_updates \'1;KL_fake:1,KL_real:1,match_z:0,match_x:10\' --g_updates \'2;KL_fake:1,match_z:2000,match_x:0\' --workers 12\n256\npython age.py --dataset cifar10 --image_size 32 --save_dir <save_dir> --lr 0.0002 --nz 128 --netG dcgan32px --netE dcgan32px --nepoch 150 --drop_lr 40  --e_updates \'1;KL_fake:1,KL_real:1,match_z:0,match_x:10\' --g_updates \'2;KL_fake:1,match_z:1000,match_x:0\'\nhttps://github.com/pytorch/examples/tree/master/dcgan\n@inproceedings{DBLP:conf/aaai/UlyanovVL18,\n  author    = {Dmitry Ulyanov and\n               Andrea Vedaldi and\n               Victor S. Lempitsky},\n  title     = {It Takes (Only) Two: Adversarial Generator-Encoder Networks},\n  booktitle = {{AAAI}},\n  publisher = {{AAAI} Press},\n  year      = {2018}\n}\n"
https://github.com/cornetj2/Star-1-Progress,Current work on star 6224062.,
https://github.com/Zoha131/learning_pandas,This is a practice repository. I have learnt git. So I am practicing it. Also learning pandas.,https://github.com/Zoha131/learning_pandas/edit/master/README.mdhttps://jekyllrb.com/markdown\nSyntax highlighted code block\n\n# Header 1\n## Header 2\n### Header 3\n\n- Bulleted\n- List\n\n1. Numbered\n2. List\n\n**Bold** and _Italic_ and `Code` text\n\n[Link](url) and ![Image](src)\nhttps://guides.github.com/features/mastering-markdown/https://github.com/Zoha131/learning_pandas/settings_config.ymlhttps://help.github.com/categories/github-pages-basics/https://github.com/contact
https://github.com/Nathaniel-Rodriguez/relcat,Implements Randall Beer's relational categorization task,
https://github.com/lveronese/capstone,Udacity Machine Learning Nanodegree Capstone Project,
https://github.com/samjfalk/GA-DSI,Projects from General Assembly's Data Science Immersive Program,
https://github.com/Prandtl/Bach,i want to get my degree.,zsh\nmake runShowExample\nzsh\nmake runHogwild\nzsh\nmake runShowHogwild\n
https://github.com/manujeevanprakash/Webscraping1,Web scraping mini project -1 (countries),
https://github.com/datalabgit/datascience_cycle,The Data Science Cycle Workshop,
https://github.com/Zurga/bearded-dangerzone,Infovis git repo,
https://github.com/coreysery/reposcrape,Class scrape project,
https://github.com/alonsopg/automatic_summarization,Some tests of Automatic summarization libraries,
https://github.com/PatrickMockridge/SpringBoard-Data-Science-Intensive,SpringBoard Data Science Intensive Course Project Repo,https://www.springboard.comhttps://www.kaggle.com/kinguistics/2016-us-presidential-primary-debateshttps://www.kaggle.com/benhamner/clinton-trump-tweetshttps://www.kaggle.com/mrisdal/2016-us-presidential-debateshttps://www.kaggle.com/amalinow/reddit-comments-on-presidential-inaugurationhttps://www.patrickmockridge.com/2017/06/02/springboard-data-science-intensive-introduction/https://github.com/PatrickMockridge/SpringBoard-Data-Science-Intensive/blob/master/Capstone%20Project/Final%20Project/Capstone%20Slide%20Presentation.pdfhttps://github.com/PatrickMockridge/SpringBoard-Data-Science-Intensive/blob/master/Capstone%20Project/Final%20Project/data/trump-colored-masked-twitter-wordcloud.png?raw=true
https://github.com/DaveBackus/MFAP,"Macroeconomic Foundations for Asset Prices, an undergrad course at NYU",
https://github.com/Eehenhyu/DeepLearning,Deep Learning using Python,
https://github.com/niharikabalachandra/TimeSeries-MiniProject,Dealing with time series data using pandas,
https://github.com/anaulin/scratch,Scratch pad,
https://github.com/bgarcia7/ai_trainer,Your next personal trainer,
https://github.com/LoLab-MSM/pydyno,Tool that uses tropical algebra concepts to 'decompose' species trajectories in the protein-protein interactions that drive changes of concentration in time,"https://app.codacy.com/app/ortega2247/tropical?utm_source=github.com&utm_medium=referral&utm_content=LoLab-VU/tropical&utm_campaign=Badge_Grade_Dashboardhttps://travis-ci.org/LoLab-VU/pydynohttps://coveralls.io/github/LoLab-VU/tropical?branch=masterhttp://pysb.org/http://sbml.org/Main_Pagehttps://www.biorxiv.org/content/10.1101/2021.01.26.428266v1.fullhttps://github.com/LoLab-VU/pydyno/tree/master/pydyno/examples/paper1bash\n> pip install pydyno\nbash\n> pip install git+git:https://github.com/LoLab-VU/pydyno.git\nbash\n> python setup.py install\npython\nimport pydyno\nimport numpy as np\nfrom os.path import dirname, join\nfrom IPython.display import Image\nfrom pydyno.examples.double_enzymatic.mm_two_paths_model import model\nfrom pydyno.visualize_simulations import VisualizeSimulations\nfrom pydyno.discretization import PysbDomPath\nfrom pydyno.visualize_discretization import visualization_path\nfrom pysb.simulator import ScipyOdeSimulator\npython\n# import calibrated parameters\nmodule_path = dirname(pydyno.__file__)\npars_path = join(module_path, ""examples"", ""double_enzymatic"", ""calibrated_pars.npy"")\npars = np.load(pars_path)\npython\n# define time for the simulation and simulate model\ntspan = np.linspace(0, 100, 101)\nsim = ScipyOdeSimulator(model, tspan=tspan).run(param_values=pars[:100])\npython\nvt = VisualizeSimulations(model, sim, clusters=None)\nvt.plot_cluster_dynamics(components=[5])\n# This saves the figure in the local folder with the filename comp0_cluster0.png\npydyno/examples/double_enzymatic/double_enzymatic_reaction_files/double_enzymatic_reaction_6_1.pngpython\ndp = PysbDomPath(model, sim)\nsignatures, paths = dp.get_path_signatures(\'s5\', \'production\',                                         depth=2, dom_om=1)\nsignatures.sequences.head()\npython\nsignatures.dissimilarity_matrix()\nsignatures.silhouette_score_agglomerative_range(4)\npython\n# Select the number of cluster with highest silhouette score\nsignatures.agglomerative_clustering(2)\npython\n# Plot signatures\nsignatures.plot_sequences()\n# File is saved to the local directory with the filename modal.png\npydyno/examples/double_enzymatic/double_enzymatic_reaction_files/double_enzymatic_reaction_13_0.pngpython\npaths\nhttps://graphviz.org/download/python\nvisualization_path(model, \n                   path=paths[0], \n                   target_node=\'s5\', \n                   type_analysis=\'production\', \n                   filename=\'path_0.png\')\n# Visualization is saved to local directory with the filename path0.png\npydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_0.pngpython\nvisualization_path(model, \n                   path=paths[1], \n                   target_node=\'s5\', \n                   type_analysis=\'production\', \n                   filename=\'path_1.png\')\n# Visualization is saved to local directory with the filename path1.png\npydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_1.pngpython\nvisualization_path(model, \n                   path=paths[2], \n                   target_node=\'s5\', \n                   type_analysis=\'production\', \n                   filename=\'path_2.png\')\n# Visualization is saved to local directory with the filename path2.png\npydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_2.png"
https://github.com/adriansarno/autoencoder,A simple autoencoder in tensorflow.,
https://github.com/virgodi/plda,Python Package to run Latent Dirichlet Allocation in Parallel,https://www.cs.princeton.edu/~blei/papers/HoffmanBleiBach2010b.pdfhttp://jmlr.csail.mit.edu/proceedings/papers/v13/xiao10a/xiao10a.pdfhttps://www.cs.purdue.edu/homes/alanqi/papers/Parallel-Inf-LDA-GPU-NIPS.pdf
https://github.com/brookisme/gitnb,git tracking for python notebooks,"#quick#lazy#install#docs#configbash\ntest| $ tree\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A-Notebook.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Py2NB.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 another_python_file.py\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 some_python_file.py\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 I\\ have\\ spaces\\ in\\ my\\ name.ipynb\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Notebook1.ipynb\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget.py\n\n1 directory, 8 files\n\ntest| $ git init\nInitialized empty Git repository in /Users/brook/code/jupyter/gitnb/test/.git/\n\ntest| $ git add .\n\ntest| $ git commit -am ""Initial Commit: python files""\n[master (root-commit) b29b6c4] ...\nbash\n\n# initialize gitnb\ntest|master $ gitnb init\n\ngitnb: INSTALLED \n   - nbpy.py files will be created/updated/tracked\n   - install user config with: $ gitnb configure\n\n# lets list our (untracked) notebooks\ntest|master $ gitnb list\n\ngitnb[untracked]:\n  Py2NB.ipynb\n  A-Notebook.ipynb\n  widget/I have spaces in my name.ipynb\n  A_BUGGY_NOTEBOOK.ipynb\n  widget/Notebook1.ipynb\n\n# adding an individual file\ntest|master $ gitnb add A_BUGGY_NOTEBOOK.ipynb \ngitnb: add (A_BUGGY_NOTEBOOK.ipynb | nbpy/A_BUGGY_NOTEBOOK.nbpy.py)\n\n# adding all the files in a directory\ntest|master $ gitnb add widget\ngitnb: add (widget/I have spaces in my name.ipynb | nbpy/I have spaces in my name.nbpy.py)\ngitnb: add (widget/Notebook1.ipynb | nbpy/Notebook1.nbpy.py)\n\n# the default directory for the python versions of the notebooks is nbpy/\ntest|master $ tree\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A-Notebook.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Py2NB.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 another_python_file.py\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 nbpy\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 I\\ have\\ spaces\\ in\\ my\\ name.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 Notebook1.nbpy.py\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 some_python_file.py\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 I\\ have\\ spaces\\ in\\ my\\ name.ipynb\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Notebook1.ipynb\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget.py\n\n2 directories, 11 files\n\n# our list now conatins tracked and untracked notebooks\ntest|master $ gitnb list\n\ngitnb[tracked]:\n  widget/Notebook1.ipynb\n  widget/I have spaces in my name.ipynb\n  A_BUGGY_NOTEBOOK.ipynb\n\ngitnb[untracked]:\n  A-Notebook.ipynb\n  Py2NB.ipynb\n\n# note these files are now in our git repo\ntest|master $ git status\nOn branch master\nChanges to be committed:\n  (use ""git reset HEAD <file>..."" to unstage)\n\n  new file:   nbpy/A_BUGGY_NOTEBOOK.nbpy.py\n  new file:   nbpy/I have spaces in my name.nbpy.py\n  new file:   nbpy/Notebook1.nbpy.py\n\n# git commit the new nbpy.py versions\ntest|master $ git commit -am ""add nbpy.py versions of notebooks""\n[master 868b0a2] ...\nbash\ntest|master $ cat nbpy/A_BUGGY_NOTEBOOK.nbpy.py \n\n\n""""""[markdown]\n## This is a notebook with bugs\n""""""\n\n\n""""""[code]""""""\nimport numpy as np\n""""""""""""\n\n\n""""""[code]""""""\ndef feature(food=True):\n    if foo:\n        return ""I am not a bug""\n    else:\n        return ""I told you I am not a bug""\n""""""""""""\n\n\n""""""[code]""""""\nprint(""Are you a bug?"")\nprint(feature(True))\n""""""""""""\n\nbash\n# note the changes have not appeared in our nbpy.py file\ntest|master $ git diff\n\n# however, we can see the changes with \'gitnb diff\'\ntest|master $ gitnb diff A_BUGGY_NOTEBOOK.ipynb\n\ngitnb[diff]: A_BUGGY_NOTEBOOK.ipynb[->nbpy.py] - nbpy/A_BUGGY_NOTEBOOK.nbpy.py\n--- +++ @@ -1,7 +1,7 @@ \n \n """"""[markdown]\n-## This is a notebook with bugs\n+## This is a notebook without bugs\n """"""\n \n \n@@ -11,7 +11,7 @@ \n \n """"""[code]""""""\n-def feature(food=True):\n+def feature(foo=True):\n     if foo:\n         return ""I am not a bug""\n     else:\n\n\n# we now use \'gitnb update\' to update the tracked files\n# this creates a new nbpy.py version and adds the changes\n# to the git repo\ntest|master $ gitnb update\n\n# now we can see the bug fixes with \'git diff\'\ntest|master $ git diff\ndiff --git a/nbpy/A_BUGGY_NOTEBOOK.nbpy.py b/nbpy/A_BUGGY_NOTEBOOK.nbpy.py\nindex e80204b..955b359 100644\n--- a/nbpy/A_BUGGY_NOTEBOOK.nbpy.py\n+++ b/nbpy/A_BUGGY_NOTEBOOK.nbpy.py\n@@ -1,7 +1,7 @@\n \n \n """"""[markdown]\n-## This is a notebook with bugs\n+## This is a notebook without bugs\n """"""\n \n \n@@ -11,7 +11,7 @@ import numpy as np\n \n \n """"""[code]""""""\n-def feature(food=True):\n+def feature(foo=True):\n     if foo:\n         return ""I am not a bug""\n     else:\n\n# commit the changes\ntest|master $ git commit -am ""fixed bug: i fixed .ipynb, gitnb fixed .nbpy.py""\n[master 812a4f0] ...\nbash\ntest|master $ git checkout 868b0a2\nNote: checking out \'868b0a2\'.\n[... git detached head messaging ...]\nHEAD is now at 868b0a2... add nbpy.py versions of notebooks\n\n# create notebook from nbpy.py file\ntest|(HEAD detached at 868b0a2) $ gitnb tonb nbpy/A_BUGGY_NOTEBOOK.nbpy.py \n\n# the default directory for generated notebooks versions is nbpy/\ntest|(HEAD detached at 868b0a2) $ tree nbpy_nb\nnbpy_nb\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.nbpy.ipynb\n\n0 directories, 1 file\nhttps://github.com/brookisme/gitnb/blob/master/buggy.png#quickbash\n$ gitnb commit -am ""I just updated and commited every notebook in my project"" \n#commitgitnb commitgit commit#configurebash\n# ./gitnb.config.yaml\n...\nGIT_ADD_ON_GITNB_UPDATE: True\nAUTO_TRACK_ALL_NOTEBOOKS: True\n...\ngitnb commit#add#updategit commit --allow-empty#commit--allow-emptybash\ntest|master $ git init\nInitialized empty Git repository in /Users/brook/code/jupyter/gitnb/test/.git/\ntest| $ gitnb init\n\ngitnb: INSTALLED \n   - nbpy.py files will be created/updated/tracked\n   - install user config with: $ gitnb configure\n\ntest| $ gitnb configure\ngitnb: USER CONFIG FILE ADDED (./gitnb.config.yaml) \nbash\ntest| $ gitnb commit -am ""Initial Commit with everything""\ngitnb: add (A-Notebook.ipynb | nbpy/A-Notebook.nbpy.py)\ngitnb: add (A_BUGGY_NOTEBOOK.ipynb | nbpy/A_BUGGY_NOTEBOOK.nbpy.py)\ngitnb: add (Py2NB.ipynb | nbpy/Py2NB.nbpy.py)\ngitnb: add (widget/I have spaces in my name.ipynb | nbpy/I have spaces in my name.nbpy.py)\ngitnb: add (widget/Notebook1.ipynb | nbpy/Notebook1.nbpy.py)\n[master (root-commit) cb8c106] ...\n\ntest|master $ tree\n.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A-Notebook.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Py2NB.ipynb\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 another_python_file.py\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 gitnb.config.yaml\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 nbpy\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A-Notebook.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 A_BUGGY_NOTEBOOK.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 I\\ have\\ spaces\\ in\\ my\\ name.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Notebook1.nbpy.py\n\xe2\x94\x82\xc2\xa0\xc2\xa0 \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 Py2NB.nbpy.py\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 some_python_file.py\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 I\\ have\\ spaces\\ in\\ my\\ name.ipynb\n    \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 Notebook1.ipynb\n    \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 widget.py\n\n2 directories, 14 files\nbash\npip install gitnb\n\ngit clone https://github.com/brookisme/gitnb.git\ncd gitnb\nsudo pip install -e .\nbash\n$ gitnb --help\nusage: gitnb [-h] {init,configure,list,update,add,remove,topy,tonb} ...\n#init#configure#gitignore#list#add#remove#update#commitgit commit#diff#update#topy#add#tonbgit initgitnb initbash\n$ gitnb init\n#methodshttps://github.com/brookisme/gitnb/blob/master/gitnb/default.config.yamlbash\n$ gitnb configure\n#methodsbash\n$ gitnb gitignore\n#methodsbash\n$ gitnb list --help\nusage: gitnb list [-h] [type]\n\npositional arguments:\n  type        notebooks: ( all | tracked | untracked ), or nbpy\n#methodsgit add#configbash\n$ gitnb add --help\nusage: gitnb add [-h] path [destination_path]\n\npositional arguments:\n  path              path to ipynb file\n  destination_path  if falsey uses default destination path\n#methodsbash\n$ gitnb remove --help\nusage: gitnb remove [-h] path\n\npositional arguments:\n  path        path to ipynb file\n#methodsbash\n$ gitnb update\n#methodsgit commit --allow-empty--allow-emptybash\n#\n# this line of code is equivalent to\n# - $ gitnb update\n# - $ git add .\n# - $ git commit --allow-empty -am ""COMMIT MESSAGE""\n#\n$ gitnb commit [-a] [-m ""COMMIT MESSAGE""]\n#methodsbash\n$ gitnb diff <PATH-TO-NOTEBOOK(.ipynb)-FILE>\n#methods#addbash\n$ gitnb topy --help\nusage: gitnb topy [-h] path [destination_path]\n\npositional arguments:\n  path              path to ipynb file\n  destination_path  if falsey uses default destination path\n#methodsbash\n$ gitnb tonb --help\nusage: gitnb tonb [-h] path [destination_path]\n\npositional arguments:\n  path              path to ipynb file\n  destination_path  if falsey uses default destination path\n#methods#configuregitnb.config.yamlhttps://github.com/brookisme/gitnb/blob/master/gitnb/default.config.yamlgitnb.config.yaml#lazy#addgit addgit add#updategit commitgitnb add .#addgit commitgitnb update--allow-emptygit commitsomefile.nbpy.py"
https://github.com/sebastianrosales/Rosales_Mendez_hw6,Tarea 6 Presa-Depredador y Particula en el Campo Magnetico,
https://github.com/dncn123/WineNLPRecommender,NLP on descriptions of wines from online retailer.,
https://github.com/wangjiahong/Titanic-Kaggle,"A tutorial for Kaggle's Titanic: Machine Learning from Disaster competition. Demonstartes basic data munging, analysis, and visualization techniques. Shows examples of supervised machine learning techniques.",https://github.com/wangjiahong666/Titanic-Kaggle/blob/master/input/score_on_leaderboard.PNG
https://github.com/xujin1982/Two-Sigma-Connect-Rental-Listing-Inquiries,Kaggle Two-Sigma-Connect-Rental-Listing-Inquiries,
https://github.com/deepankverma/dlnd_1,First Project of Deep Learning,
https://github.com/leonardoaraujosantos/LearningTorch,Doing deep learning experiments with torch,
https://github.com/sketchychen/ga_datasci_cw,Coursework for GA Seattle's Data Science 2016 Mar 15 - May 19,
https://github.com/mlayeghi/activation-cost-functions,Activation vs. Cost functions,
https://github.com/stuti-madaan/Advanced-Predictive-Modeling,Codes for deeper insights in Predictive Modeling,
https://github.com/akshay-sr/CarND-FindingLaneLines-P1,FindingLaneLines,">  conda create --name=yourNewEnvironment python=3 anaconda>  source activate yourNewEnvironment>pythonPython 3.5.2 |Anaconda 4.1.1 (x86_64)| (default, Jul  2 2016, 17:52:12)[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwinType ""help"", ""copyright"", ""credits"" or ""license"" for more information.>>>> pip install pillow> conda install -c https://conda.anaconda.org/menpo opencv3> python>>> import cv2>>>>pip install moviepy>python>>>import moviepy>>>> jupyter notebook"
https://github.com/Davidjohnwilson/notes,Various notes from meetups and conferences.,
https://github.com/twhyntie/bokeh_time_series,Code and tools for plotting time series using Bokeh.,./pixel_rate_time_series_WEB.ipynb./pixel_rate_time_series.ipynb
https://github.com/RobertPRanney/Blog_Exploration,"Analysis to identify features that lead to highly liked and commented posts, as well as highly subscribed blogs",./presentation_slides.pdf./final_images/my_blog_photo.png./final_images/executive_overview.png./final_images/code_roadmap.png./final_images/nlp_pipe.png./final_images/reconstruction_error.png./final_images/words_5.png./final_images/german_wc.png./final_images/docs_by_topics.png./final_images/RFCConfMatr.png./final_images/post_feat_imp.png./final_images/all_partials.png./final_images/pred_num_tags.png./final_images/pred_act_scatter.png./final_images/blog_feature_importance1.png./final_images/pdp_selected_blogs.png./final_images/pred_ave_gap.png
https://github.com/mjbrodzik/ExploringCETB,Examples for reading and understanding Calibrated Enhanced-Resolution Brightness Temperature (CETB) files,
https://github.com/MohamedDabo/Pokemon-Data-Exploration,Exploring the world of Pokemons!,
https://github.com/shannonxfiles/scrape-fed-salaries,scrape publicly available federal employee salaries into a postgres database,
https://github.com/lmarti/jupyterday-philly-19.05.2017,"Slides for my talk ""Jupyter Notebooks in a Computational Intelligence/Machine Learning Class""",https://img.shields.io/badge/python-3.x-green.svghttp://nbviewer.jupyter.org/github/lmarti/jupyterday-philly-19.05.2017/tree/master/http://mybinder.org/https://doi.org/10.5281/zenodo.495739http://creativecommons.org/licenses/by-nc-sa/4.0/http://jupyterday.blogs.brynmawr.edu
https://github.com/sandiegopython/geekgirl,GeekGirl Conference 2014,nbviewerpart-1.ipynbpart-2.ipynbpart-3.ipynb
https://github.com/mehdi2407/CarND-LaneLines-P1,This repo consists of the first project from the udacit self driving car nanodegree,
https://github.com/abitofalchemy/DmChallenge,SCI Challenge Project,
https://github.com/feici02/cookbook,:notebook_with_decorative_cover: My code snippets.,
https://github.com/spiningup/udacity-ml-student_intervention,Build a student intervention system by predicting whether a student will pass or fail an exam,http://www.numpy.org/http://pandas.pydata.orghttp://scikit-learn.org/stable/http://ipython.org/notebook.htmlhttps://www.continuum.io/downloadsstudent_intervention/ipython notebook student_intervention.ipynbjupyter notebook student_intervention.ipynbstudent-data.csvschoolsexageaddressfamsizePstatusMeduFeduMjobFjobreasonguardiantraveltimestudytimefailuresschoolsupfamsuppaidactivitiesnurseryhigherinternetromanticfamrelfreetimegooutDalcWalchealthabsencespassed
https://github.com/deercoder/0-PhD,"Research notes, codes, deep learning",
https://github.com/sanjeevbadgeville/Spark2-H2O-R-Zeppelin,"A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution",
https://github.com/data-henrik/idug2016_interactive_db2_reports,How to have fun with DB2 / dashDB and Jupyter Notebooks - interactive presentation and reports,http://www.idug.org/p/cm/ld/fid=862https://github.com/data-henrik/idug2016_interactive_db2_reports/blob/master/20161115_IDUG_InteractiveReports.ipynbhttps://raw.githubusercontent.com/data-henrik/idug2016_interactive_db2_reports/master/201611idug_notebook.pnghttps://console.ng.bluemix.net/catalog/services/apache-spark/
https://github.com/Sapphirine/twitter_based_eod_stock_market_price_predictor,Twitter Based EOD Stock Market Price Predictor,
https://github.com/xpgeng/du4dama,a script of scratching comments,
https://github.com/jay-mahadeokar/deeplab-public-ver2,This repo was mirrored from here: https://bitbucket.org/aquariusjay/deeplab-public-ver2,http://caffe.berkeleyvision.orghttp://arxiv.org/abs/1606.00915https://bitbucket.org/deeplab/deeplab-public/http://host.robots.ox.ac.uk:8080/leaderboard/displaylb.php?challengeid=11&compid=6http://liangchiehchen.com/projects/DeepLab.htmlhttp://liangchiehchen.com/projects/DeepLab_Models.htmlhttps://ucla.box.com/s/4grlj8yoodv95936uybukjh5m0tdzvrfhttps://ucla.box.com/s/rd9z2xvwsfpksi7mi08i2xqrj7ab4kebhttp://sourceforge.net/projects/matio/files/matio/1.5.2/http://liangchiehchen.com/projects/DeepLab_FAQ.htmlhttps://github.com/TheLegendAli/CCVL
https://github.com/mparker2/seaborn_sinaplot,A python implementation of the sinaplot using matplotlib and seaborn,matplotlibseabornmatplotlibsns.violinplotsns.stripplothttps://cran.r-project.org/web/packages/sinaplot/vignettes/SinaPlot.html
https://github.com/gundamkeroro/DLND,This is all my project of Udacity Deep Learning Nanodegree starts in May 25,https://github.com/gundamkeroro/DLND/tree/master/first-neural-networkhttps://github.com/gundamkeroro/DLND/tree/master/image-classificationhttps://github.com/gundamkeroro/DLND/tree/master/tv-script-generationhttps://github.com/gundamkeroro/DLND/tree/master/language-translationhttps://github.com/gundamkeroro/DLND/tree/master/face_generation
https://github.com/ProfessorBrunner/rp-pds15,"Practical Data Science course notes offered at the University of Illinois, Research Park in Spring 2015",http://nbviewer.ipython.org/github/ProfessorBrunner/rp-pds15/blob/master/index.ipynbWeek0/Docker.mdLICENSE.md
https://github.com/rdemaria/pytimber,Python Wrapping of CALS API,
https://github.com/luizgh/intro_to_cnns,Introdução à redes neurais convolucionais usando Theano + Lasagne,http://jupyter.org/
https://github.com/chusiang/ansible-jupyter.dockerfile,Building the Docker image with Ansible and Jupyter.,"https://hub.docker.com/r/chusiang/ansible-jupyter/https://microbadger.com/images/chusiang/ansible-jupyterDockerfilealpine-3latestarchlinuxcentos-7debian-9gentooopensuse-42.3ubuntu-18.04\n    $ git clone https://github.com/chusiang/ansible-jupyter.dockerfile.git\n    \n    $ cd ansible-jupyter.dockerfile/<IMAGE_TAG>/\n    \n    $ docker build -t chusiang/ansible-jupyter .\n    \n    $ docker pull chusiang/ansible-jupyter\n    \n    $ docker run --name ansible-jupyter -P -d chusiang/ansible-jupyter\n    be8a15b9d4da5d24610c1fc738cb13086f01101e90f94640360d8d84892de772\n    \n    $ docker ps\n    CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                     NAMES\n    be8a15b9d4da        chusiang/ansible-jupyter   ""docker-entrypoint.sh""   12 seconds ago      Up 11 seconds       0.0.0.0:32808->8888/tcp   ansible-jupyter\n    \n    $ docker exec -it ansible-jupyter sh\n    / #\n    \n    # GNU/Linux\n    $ firefox http://localhost:32786\n\n    # macOS\n    $ open http://localhost:32786\n    ansible_on_jupyter.ipynb!https://chusiang.gitbooks.io/automate-with-ansible/07.how-to-practive-the-ansible-with-jupyter1.htmlalpine-3.8alpine-3.4alpine-3.6opensuse-42.2alpine-3.7ubuntu-18.04ubuntu-14.04centos-6debian-7alpine-3.4_ansible-2.1gentooopensuse-42.1alpine-3.4"
https://github.com/srhrshr/word2vec-presentation,"Slidedeck for the presentation at the Big Data Conclave, VIT Chennai",
https://github.com/Syps/boston_data_react,Boston data visualization redone in React,https://github.com/Syps/boston_data
https://github.com/ilanman/STA561,Probability Machine Learning final project,
https://github.com/linetools/linetools,"A package for the analysis of 1d astronomical spectra, especially quasar and galaxy spectra.",http://www.astropy.org/https://travis-ci.org/linetools/linetoolshttps://coveralls.io/github/linetools/linetools?branch=masterhttps://doi.org/10.5281/zenodo.168270
https://github.com/MollyZhang/Reinforcement_learning_NLP,Implementing Reinforcement Learning to find the best dialogue strategy for a conversation agent (chatbot) by searching for maximum award.,git clone https://github.com/MollyZhang/Reinforcement_learning_NLP.gitcd Reinforcement_learning_NLPcd RLpython run.py
https://github.com/andy1li/udacity-dlnd,My Projects for the Udacity Deep Learning Nanodegree Foundation Program,
https://github.com/sgandavarapu/FakeNews,W210 Capstone Project,
https://github.com/GiorgioBondi/SmartPillow,"Giorgio Bondì, Marta Brunetti, Giulia Crocioni and Francesca Cunsolo's repository for our project during XPH2016 Hackaton @NECSTLab Politecnico di Milano sponsored by Xilinx",
https://github.com/pynxton/course,Python course,nbviewer <http://nbviewer.ipython.org/github/pynxton/course/tree/master/>1.basics <http://nbviewer.ipython.org/github/pynxton/course/tree/master/>2.programming <http://nbviewer.ipython.org/github/pynxton/course/tree/master/>3.Matplotlib <http://nbviewer.ipython.org/github/pynxton/course/blob/master/3.%20Matplotlib.ipynb>5.numpy/scipy/pandas overview6.Packaging <https://github.com/cokelaer/python_notes/blob/master/source/packaging.rst>
https://github.com/kristijensen/OOP,I'm playing at defining classes,
https://github.com/bwallace/Deep-PICO,Deep-ish learning for PICO extraction from abstracts,"bash\n    $ pip install keras\nbash\n    $ pip install -U scikit-learn\nbash\n    $ pip install gensim\nbash\n    $ pip install theano\nbash\n    $ pip install nltk\nbash\n    got to http://www.nactem.ac.uk/GENIA/tagger/\n    unzip: tar xvzf geniatagger.tar.gz\n    navigate to geniatagger and make\n    \n    install the python wrapper\n    pip install geniatagger-python\nbash\n    $ pip install sklearn_crfsuite\nbash\n    $ pip install pycrfsuite\nbash\n    # Ubuntu/Linux 64-bit\n    $ sudo apt-get install python-pip python-dev\n    \n    # Mac OS X\n    $ sudo easy_install pip\n    # Ubuntu/Linux 64-bit, CPU only:\n    $ sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl\n    \n    # Ubuntu/Linux 64-bit, GPU enabled:\n    $ sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl\n    \n    # Mac OS X, CPU only:\n    $ sudo easy_install --upgrade six\n    $ sudo pip install --upgrade https://storage.googleapis.com/tensorflow/mac/tensorflow-0.7.1-cp27-none-any.whl\nbash\n    $ python crf.py \nbash\n    --w2v               # 1 or 0 whether to use word vectors or not as features\n    --iters             # number of iterations to train on    \n    --l1                # l1 regulerzation term\n    --l2                # l2 regulerzation term\n    --wiki              # 1 or 0 whether to use the word vectors trained on wikipedia and pubmed \n    --shallow_parse     # 1 or 0 whether to use standerd POS features\n    --words_before      # number of words to use as features that come before each token\n    --words_after       # number of words to use as features that come after each token\n    --grid_search       # 1 or 0 whether to search for optimal hyperparmeters with grid search\nbash\n    $ python GroupCNNExperiment.py  \nbash\n    --window_size       # the number of words to use as features \n    --wiki              # 1 or 0 Use the word vectors trained on pubmed and wikipedia \n    --n_feature_maps    # the numner of feature maps for the CNN only\n    --epochs            # number of epochs to train the model for\n    --undersample       # 1 or 0 whether to train the model with \n    --criterion         # the loss function\n    --optimizer         # optimization algorthim \n    --model             # nn or cnn | whether to use a Convotuonal or feed forward neural network \n    --genia             # 1 or 0\n    --tacc              # for personal use only or if you have access to TACC for some reason \n    --layers            # format <1,2,3,4> the numbers of hidden layers in the network\n"
https://github.com/SimonTong22/Baseball-Data-Explore,Data Exploration of Baseball Stats,
https://github.com/theideasmith/neuralmanifolds,My experimentation with neural networks as approximations of continuous high dimensional surfaces and the dynamics of particles therein. ,"{{site.url}}/2017/01/30/The-Electric-Field-Equation.htmlscipy.integrate.odeintg(y, t, q, m, n, d, k)odeintpython\nimport numpy as np\nimport numpy.ma as ma\nfrom scipy.integrate import odeint\nmag = lambda r: np.sqrt(np.sum(np.power(r, 2)))\n\ndef g(y, t, q, m, n,d, k):\n    """"""\n    n: the number of particles\n    d: the number of dimensions \n      (for fun\'s sake I want this \n      to work for k-dimensional systems)\n    y: an (n*2,d) dimensional matrix \n        where y[:n]_i is the position\n        of the ith particle and\n        y[n:]_i is the velocity of \n        the ith particle\n    qs: the particle charges\n    ms: the particle masses\n    k: the electric constant\n    t: the current timestamp\n    """"""\n#     r1, r2, dr1dt, dr2dt = np.copy(y.reshape((n*2,d)))\n#     F = -1./mag(r2-r1)**2\n\n#     dy = [\n#      dr1dt,\n#      dr2dt,\n#      (F)*(r1-r2),\n#      (F)*(r2-r1),\n#     ]\n    y = np.copy(y.reshape((n*2,d)))\n\n    # rj across, ri down\n    rs_from = np.tile(y[:n], (n,1,1))\n\n    # ri across, rj down\n    rs_to = np.transpose(rs_from, axes=(1,0,2))\n\n    # directional distance between each r_i and r_j\n    # dr_ij is the force from j onto i, i.e. r_i - r_j\n    dr = rs_to - rs_from\n\n    # Used as a mask\n    nd_identity = np.eye(n).reshape((n,n,1))\n\n    # Force magnitudes\n    drmag = ma.array(\n        np.sqrt(\n            np.sum(\n                np.power(dr, 2), 2)), \n        mask=nd_identity)\n\n    # Pairwise q_i*q_j for force equation\n    qsa = np.tile(q, (n,1))\n    qsb = np.tile(q, (n,1)).T\n    qs = qsa*qsb\n\n    \n    # Directional forces\n    Fs = (-qs/np.power(drmag,2)).reshape((n,n,1))\n\n    # Dividing by m to obtain acceleration vectors\n    a = np.sum(Fs*dr, 1)\n\n    # Sliding integrated acceleration\n    # (i.e. velocity from previous iteration)\n    # to the position derivative slot\n    y[:n] = np.copy(y[n:])\n\n    # Entering the acceleration into the velocity slot\n    y[n:] = np.copy(a)\n    # Flattening it out for scipy.odeint to work\n    return np.array(y).reshape(n*2*d)  \n\n\npython\nt_f = 10000\nt = np.linspace(0, 10, num=t_f)\npython\n# Number of dimensions\nd = 2\n# Number of point charges\nn = 3\n# charge magnitudes, currently all equal to 1\nq = np.array([-10,0.2,-5])\n# masses\nm = np.ones(n)\n\n# The electric constant \n#    k=1/(4*pi*epsilon_naught)\n#    Right now we will set it to 1\n#    because for our tests we are choosing all q_i =1. \n#    Therefore, k*q is too large a number and causes \n#    roundoff errors in the integrator. \n# In truth:\n#    k = 8.99*10**9\n# But for now:\nk=1.\npython\n\nr1i = np.array([-2., 0.0])\ndr1dti = np.array([3.,0.])\n\nr2i = np.array([20.,0.5])\ndr2dti = np.array([-3., 0.])\n\nr3i = np.array([11.,20])\ndr3dti = np.array([0, -3.])\npython\ny0 = np.array([r1i, r2i, r3i, dr1dti, dr2dti, dr3dti]).reshape(n*2*d)\npython\n# Doing the integration\nyf = odeint(g, y0, t, args=(q,m,n,d,k)).reshape(t_f,n*2,d)\n\npython\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n%matplotlib inline\n\nfig = plt.figure(figsize=(20,20))\n#ax = fig.add_subplot(111, projection=\'3d\')\nax = fig.add_subplot(111)\nys1 = yf[:,0,1]\nxs1 = yf[:,0,0]\n\n\nxs2 = yf[:,1,0]\nys2 = yf[:,1,1]\n\nxs3 = yf[:,2,0]\nys3 = yf[:,2,1]\n\nax.plot(xs1[1], ys1[1],\'bv\')     \nax.plot(xs1[-1], ys1[-1], \'rv\') \n\nax.plot(xs2[:1], ys2[:1], \'bv\')    \nax.plot(xs2[-1:], ys2[-1:], \'rv\') \n\nax.plot(xs3[:1], ys3[:1], \'bv\')    \nax.plot(xs3[-1:], ys3[-1:], \'rv\') \n# \n# minx = np.min(y[:,[0,2],0]) \n# maxx = np.max(y[:,[0,2],0]) \n\n# miny = np.min(y[:,[0,2],1]) \n# maxy = np.max(y[:,[0,2],1])\n                                         \nax.plot(xs1, ys1)                      \nax.plot(xs2, ys2)    \nax.plot(xs3, ys3)                      \n\n\n# plt.xlim(xmin=minx, xmax=maxx)\n# plt.ylim(ymin=miny, ymax=maxy)\n\nplt.title(""Paths of 3 Colliding Electric Particles"")\nplt.ion()\nplt.show()\n\nhttps://gist.github.com/5f52c2bc414a744953e1c69970590f9d"
https://github.com/olemke/arts,The Atmospheric Radiative Transfer Simulator,"https://github.com/atmtools/arts/commits/masterCONTRIBUTING.mdhttps://github.com/conda-forge/miniforge#mambaforgeenvironment-dev-{linux,mac}.ymlpyarts-dev\nmamba env create -f environment-dev-linux.yml\n\nmamba env create -f environment-dev-mac.yml\ncmake\nmamba activate pyarts-dev\ncd arts\ncmake --preset=default-gcc-mamba  # On macOS use default-clang-mamba\ncmake --build build -jX\n\npython3 -m pip install --user -e build/python\n\ncmake --build build -jX --target pyarts\n\nrm -rf build\n\ncmake --preset=default-gcc-mamba -DCMAKE_BUILD_TYPE=RelWithDebInfo\n\ncmake --preset=default-gcc-mamba -DCMAKE_BUILD_TYPE=Debug\n\ncmake --build build --target pyarts\npython3 -m pip install --user -e build/python\n$HOME/.local/lib/python3.X/site-packages/pyarts.egg-linkcmake --build build --target pyarts\ncmake --preset=default-gcc-mamba -DARTS_XML_DATA_PATH=/home/myname/arts-xml-data\ncmake --preset=....\n-DTEST_JOBS=X\nbuild\ncd build\n\nctest -j4\n\nctest -R ppath\n\nctest -V -R fast.doit\n\nexport CTEST_OUTPUT_ON_FAILURE=1\n\n-DCMAKE_BUILD_TYPE=Native\ncmake --preset=...\n-DENABLE_FORTRAN=0\n\n-DNO_DISORT=1\n\n-DENABLE_FORTRAN=1 -DNO_TMATRIX=1\n\ncmake --preset=default-gcc-mamba -DENABLE_NETCDF=1\n\ncmake --preset=default-clang-mamba -DENABLE_PCH=1 ..\nCCACHE_SLOPPINESS\nexport CCACHE_SLOPPINESS=pch_defines,time_macros\n-DNO_ASSERT=1-DNO_OPENMP=1-DNO_DOCSERVER=1-DENABLE_CCACHE=1\n\nFor details see https://ccache.samba.org/\n\n\nValgrind profiling\n------------------\n\nThe callgrind plugin included in valgrind is the recommended profiling method\nfor ARTS.\n\nDue to limitations of valgrind, you need to disable the tmatrix code\n(-DNO_TMATRIX=1) when compiling ARTS with Fortran support.\n\nCertain things should be taken into account when calling ARTS with valgrind.\nSince recursion (cycles) will lead to wrong profiling results it is\nimportant to use the following settings to obtain profile data for ARTS:\n\n\n\nFor detail on these options consult the valgrind manual:\n\nhttp://valgrind.org/docs/manual/cl-manual.html#cl-manual.cycles\n\n-n1 should be passed to ARTS because parallelisation can further scew the\nresults. Since executing a program in valgrind can lead to 50x slower\nexecution, it is recommended to create a dedicated, minimal controlfile for\nprofiling.\n\nAfter execution with valgrind, the resulting callgrind.out.* file can be\nopened in kcachegrind[1] for visualization. It is available as a package for\nmost Linux distributions.\n\nNote that you don't have to do a full ARTS run. You can cancel the program\nafter some time when you think you have gathered enough statistics.\n\n[1] https://kcachegrind.github.io/\n\n\nLinux perf profiling\n--------------------\n\nThe [Performance Counters for Linux](https://perf.wiki.kernel.org/) offer a\nconvenient way to profile any program with basically no runtime overhead.\nProfiling works for all configurations (Debug, RelWithDebInfo and Release). To\nensure that the calltree can be analyzed correctly, compile ARTS with frame\npointers. This has minimal impact on performance. Use the following preset to\nenable this setting:\n\n\n\nPrepend the perf command to your arts call to record callgraph information:\n\n\n\nThis can also be applied to any test case:\n\n\n\nAfter recording, use the report command to display an interactive view of the\nprofiling information:\n\n"
https://github.com/sumitbinnani/AIND-Planning,Deterministic logistics planning problems for an Air Cargo transport system using a planning search agent,"./heuristic_analysis.pdfimages/Progression.PNGmy_air_cargo_problems.pymy_air_cargo_problems.pymy_planning_graph.pyhttps://github.com/aimacodehttp://aima.cs.berkeley.edu/2nd-ed/newchap11.pdf\nAction(Load(c, p, a),\n\tPRECOND: At(c, a) \xe2\x88\xa7 At(p, a) \xe2\x88\xa7 Cargo(c) \xe2\x88\xa7 Plane(p) \xe2\x88\xa7 Airport(a)\n\tEFFECT: \xc2\xac At(c, a) \xe2\x88\xa7 In(c, p))\nAction(Unload(c, p, a),\n\tPRECOND: In(c, p) \xe2\x88\xa7 At(p, a) \xe2\x88\xa7 Cargo(c) \xe2\x88\xa7 Plane(p) \xe2\x88\xa7 Airport(a)\n\tEFFECT: At(c, a) \xe2\x88\xa7 \xc2\xac In(c, p))\nAction(Fly(p, from, to),\n\tPRECOND: At(p, from) \xe2\x88\xa7 Plane(p) \xe2\x88\xa7 Airport(from) \xe2\x88\xa7 Airport(to)\n\tEFFECT: \xc2\xac At(p, from) \xe2\x88\xa7 At(p, to))\n\nInit(At(C1, SFO) \xe2\x88\xa7 At(C2, JFK) \n\t\xe2\x88\xa7 At(P1, SFO) \xe2\x88\xa7 At(P2, JFK) \n\t\xe2\x88\xa7 Cargo(C1) \xe2\x88\xa7 Cargo(C2) \n\t\xe2\x88\xa7 Plane(P1) \xe2\x88\xa7 Plane(P2)\n\t\xe2\x88\xa7 Airport(JFK) \xe2\x88\xa7 Airport(SFO))\nGoal(At(C1, JFK) \xe2\x88\xa7 At(C2, SFO))\n\nInit(At(C1, SFO) \xe2\x88\xa7 At(C2, JFK) \xe2\x88\xa7 At(C3, ATL) \n\t\xe2\x88\xa7 At(P1, SFO) \xe2\x88\xa7 At(P2, JFK) \xe2\x88\xa7 At(P3, ATL) \n\t\xe2\x88\xa7 Cargo(C1) \xe2\x88\xa7 Cargo(C2) \xe2\x88\xa7 Cargo(C3)\n\t\xe2\x88\xa7 Plane(P1) \xe2\x88\xa7 Plane(P2) \xe2\x88\xa7 Plane(P3)\n\t\xe2\x88\xa7 Airport(JFK) \xe2\x88\xa7 Airport(SFO) \xe2\x88\xa7 Airport(ATL))\nGoal(At(C1, JFK) \xe2\x88\xa7 At(C2, SFO) \xe2\x88\xa7 At(C3, SFO))\n\nInit(At(C1, SFO) \xe2\x88\xa7 At(C2, JFK) \xe2\x88\xa7 At(C3, ATL) \xe2\x88\xa7 At(C4, ORD) \n\t\xe2\x88\xa7 At(P1, SFO) \xe2\x88\xa7 At(P2, JFK) \n\t\xe2\x88\xa7 Cargo(C1) \xe2\x88\xa7 Cargo(C2) \xe2\x88\xa7 Cargo(C3) \xe2\x88\xa7 Cargo(C4)\n\t\xe2\x88\xa7 Plane(P1) \xe2\x88\xa7 Plane(P2)\n\t\xe2\x88\xa7 Airport(JFK) \xe2\x88\xa7 Airport(SFO) \xe2\x88\xa7 Airport(ATL) \xe2\x88\xa7 Airport(ORD))\nGoal(At(C1, JFK) \xe2\x88\xa7 At(C3, JFK) \xe2\x88\xa7 At(C2, SFO) \xe2\x88\xa7 At(C4, SFO))\nmy_air_cargo_problems.pyAirCargoProblem.get_actionsload_actionsunload_actionsAirCargoProblem.actionsAirCargoProblem.resultair_cargo_p2air_cargo_p3air_cargo_p1air_cargo_p2air_cargo_p3breadth_first_searchdepth_first_graph_searchrun_searchpython run_search.py -himages/statespace.pngimages/twotofive.pngTrueAt(C1,JFK)AirCargoProblemNodeProblemhttp://aima.cs.berkeley.edu/2nd-ed/newchap11.pdfmy_air_cargo_problems.pyAirCargoProblem.h_ignore_preconditionsmy_planning_graph.pyPlanningGraph.add_action_levelPlanningGraph.add_literal_levelPlanningGraph.inconsistent_effects_mutexPlanningGraph.interference_mutexPlanningGraph.competing_needs_mutexPlanningGraph.negation_mutexPlanningGraph.inconsistent_support_mutexPlanningGraph.h_levelsumair_cargo_p1air_cargo_p2air_cargo_p3run_searchpython run_search.py -himages/eatcake-graphplan2.pngexample_have_caketestsunittestpython -m unittest tests.test_my_air_cargo_problemspython -m unittest tests.test_my_planning_graphrun_search"
https://github.com/codebasics/py,Repository to store sample python programs for python learning,https://github.com/codebasics/py/tree/master/Basicshttps://www.youtube.com/channel/UCh9nVJoWXmFb7sLApWGcLPQhttps://www.youtube.com/channel/UCh9nVJoWXmFb7sLApWGcLPQ
https://github.com/lisaleemcb/ouroboros,Associated code for active feedback resonator axion detector prototype,
https://github.com/saverkamp/measure-metadata-workshop,Workshop materials for Code4Lib 2016 pre-conference: http://2016.code4lib.org/workshops/Measuring-Your-Metadata,https://docs.google.com/spreadsheets/d/1ob4imuFCMi3fMkoIjlASBYWVdDd4qTVJj5xeG2eLEVM/edit#gid=634347005https://docs.google.com/spreadsheets/d/1ob4imuFCMi3fMkoIjlASBYWVdDd4qTVJj5xeG2eLEVM/edit#gid=634347005http://jupyter.org/http://lxml.de/https://www.continuum.io/why-anacondahttp://docs.continuum.io/anaconda/installhttp://pandas.pydata.org/http://jupyter.org/http://pandas.pydata.org/http://www.numpy.org/http://matplotlib.org/https://www.continuum.io/why-anacondahttp://docs.continuum.io/anaconda/installhttp://lxml.de/http://bit.ly/MeasureMetadataC4L16
https://github.com/weihuayi/fealpy,Finite Element Analysis Library in Python,"https://gitter.im/weihuayi/fealpy?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badgehttps://github.com/weihuayi/fealpy/workflows/Python%20package/badge.svghttps://github.com/weihuayi/fealpy/workflows/Upload%20Python%20Package/badge.svg./FEALPY.pnghttps://www.weihuayi.cn/fealpy/docs/zh/start/fealpy-installbash\npip install -U fealpy\nrootbash\npython -m pip install -U fealpy\nhttps://developer.aliyun.com/mirror/pypihttps://mirrors.tuna.tsinghua.edu.cn/help/pypi/https://lug.ustc.edu.cn/wiki/mirrors/help/pypibash\ngit clone https://github.com/weihuayi/fealpy.git\ncd fealpy\npip install .\npip install -e .pip3 install -e .bash\npip uninstall fealpy\nAFEALPypython\neps = 10**(-15)\nA.data[ np.abs(A.data) < eps ] = 0\nA.eliminate_zeros()\nfealpybibtex\n@misc{fealpy,\n\ttitle = {FEALPy: Finite Element Analysis Library in Python. https://github.com/weihuayi/fealpy},\n\turl = {https://github.com/weihuayi/fealpy},\n\tauthor = {Wei, Huayi and Huang, Yunqing},\n    institution = {Xiangtan University},\n\tyear = {Xiangtan University, 2017-2023},\n}\n"
https://github.com/docathon/sphinx-template,A template for a fully-functioning sphinx deployment,my_packagedocs/source/conf.py\ncd docs\nmake html\n
https://github.com/ubcs3/2016-Fall,UBC Scientific Software Seminar: Machine Learning in Python with scikit-learn,http://software-carpentry.org/http://scikit-learn.orghttps://www.python.org/http://scikit-learn.org/http://scipy.org/http://www.numpy.org/http://scipy.org/http://matplotlib.org/http://pandas.pydata.org/https://www.python.org/http://jupyter.org/https://github.com/http://scikit-learn.org/stable/tutorial/basic/tutorial.htmlhttp://scikit-learn.org/http://www.nltk.org/https://github.com/ubcs3/2016-Summer2016-10-07-notes.ipynb2016-10-14-notes.ipynb2016-10-21-notes.ipynb2016-10-28-notes.ipynb2016-11-04-notes.ipynbhttps://github.com/sempwnhttps://github.com/dbhaskar922016-11-25-notes.ipynb
https://github.com/rtlee9/SIC-list,List of SIC codes and descriptions from authoritative sources,https://travis-ci.org/rtlee9/SIC-listhttps://coveralls.io/github/rtlee9/SIC-list?branch=https://codeclimate.com/github/rtlee9/SIC-listLICENSEhttps://www.python.org/download/releases/2.7/https://www.sec.gov/info/edgar/siccodes.htmhttps://www.osha.gov/pls/imis/sic_manual.htmlhttps://raw.githubusercontent.com/rtlee9/SIC-list/master/data/sec_combined.csvhttps://raw.githubusercontent.com/rtlee9/SIC-list/master/data/osha_combined.csvhttps://www.census.gov/eos/www/naics/faqs/faqs.html#q8https://www.osha.gov/pls/imis/sic_manual.htmlhttps://www.sec.gov/info/edgar/siccodes.htmhttps://www.sec.gov/edgar/searchedgar/companysearch.html$ pip install -r requirements.txt$ python src/main.pyLICENSE
https://github.com/t-lanigan/CarND-LaneLines-P1,Finding lanes lines on the road in Video Streaming,">  conda create --name=yourNewEnvironment python=3 anaconda>  source activate yourNewEnvironment>pythonPython 3.5.2 |Anaconda 4.1.1 (x86_64)| (default, Jul  2 2016, 17:52:12)[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwinType ""help"", ""copyright"", ""credits"" or ""license"" for more information.>>>> pip install pillow> conda install -c https://conda.anaconda.org/menpo opencv3> python>>> import cv2>>>>pip install moviepy>python>>>import moviepy>>>> jupyter notebook"
https://github.com/jimod/deeplearning-meetup-dublin,Repository for any code for the deep learning meetups,
https://github.com/sofianhw/spark-sql,data ingestion with spark,
https://github.com/JonathanReeve/dataviz-workshop,"Materials for a workshop in text analysis and visualization, originally given at Columbia University in April 2016. ",
https://github.com/srikanth261/sentiment140,Twitter sentiment analysis,
https://github.com/xn8812/caffe,for testing,http://bvlc.eecs.berkeley.eduhttp://caffe.berkeleyvision.orghttps://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.phttp://caffe.berkeleyvision.org/tutorial/http://caffe.berkeleyvision.org/model_zoo.htmlhttps://github.com/BVLC/caffe/wiki/Model-Zoohttp://caffe.berkeleyvision.org/installation.htmlhttps://gitter.im/BVLC/caffe?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badgehttps://groups.google.com/forum/#!forum/caffe-usershttps://gitter.im/BVLC/caffehttps://github.com/BVLC/caffe/issueshttps://github.com/BVLC/caffe/blob/master/LICENSE
https://github.com/nkern/Astro_9,"Python Programming in Astronomy, Summer 2017",
https://github.com/andrew-reece/cs171-final-project,Evolution of human social networks (MIT Reality Mining data),
https://github.com/pottava/mxnet-char-lstm,A multilayer LSTM network with MXNet.,"https://docs.docker.com/docker-for-mac/install/#download-docker-for-machttps://docs.docker.com/docker-for-windows/install/\n$ docker-compose -v\n\ndocker-compose version 1.11.2, build dfed245\n\n$ docker-compose up\n\nCreating network ""mxnetcharlstm_default"" with the default driver\nCreating jupyter\nAttaching to jupyter\njupyter    | [I 20:36:10.489 NotebookApp] Writing notebook server cookie secret to /root/.local/share/jupyter/runtime/notebook_cookie_secret\njupyter    | [I 20:36:10.507 NotebookApp] Serving notebooks from local directory: /root/notebook\njupyter    | [I 20:36:10.507 NotebookApp] 0 active kernels\njupyter    | [I 20:36:10.509 NotebookApp] The Jupyter Notebook is running at: http://0.0.0.0:8888/?token=ac29066ff4b4e131ea28317aed8b63069ba9a5ae410e2d18\njupyter    | [I 20:36:10.509 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\njupyter    | [C 20:36:10.510 NotebookApp]\njupyter    |\njupyter    |     Copy/paste this URL into your browser when you connect for the first time,\njupyter    |     to login with a token:\njupyter    |         http://0.0.0.0:8888/?token=ac29076ff4b4e131ea28317aed8b63069ba9a5ae410e2d17\nhttp://localhost:8888tutorials.ipynbCtrl + C\n$ docker-compose down -v\n\nStopping jupyter ... done\nRemoving jupyter ... done\nRemoving network mxnetcharlstm_default\n"
https://github.com/SujathaSubramanian/Machine-Learning--UW,Coursework ML Specialization,
https://github.com/harshadss/my-presentations,"Contains codes, presentation files for all the workshops, presentations that I conduct",
https://github.com/reubano/lambdaconf-tutorial,"LambdaConf ""A Functional Programming Approach To Data Processing In Python"" tutorial materials ","http://beta.mybinder.org/v2/gh/reubano/lambdaconf-tutorial/master#local#remotehttp://beta.mybinder.org/v2/gh/reubano/lambdaconf-tutorial/masterbash\ngit clone https://github.com/reubano/lambdaconf-tutorial.git\ncd lambdaconf-tutorial\nhttp://docs.python-guide.org/en/latest/starting/installation/bash\n# follow directions for your platform from the above link above\n\npython3 --version\n# Python 3.6.1\n\npip3 install --upgrade pip\npip3 --version\n# pip 9.0.1 from ...\nhttp://docs.python-guide.org/en/latest/dev/virtualenvs/#virtualenvironments-refbash\npip3 install virtualenv\nvirtualenv lambdaconf-tutorial\nsource lambdaconf-tutorial/bin/activate\nhttps://ipython.readthedocs.io/en/stable/interactive/tutorial.html#the-four-most-helpful-commandsbash\n# if you are working in a virtualenv\npip install ipython\n\n# if you are *not* in a virtualenv\npip3 install --user ipython\nbash\n# if you are working in a virtualenv\npip install riko==0.51.0\n\n# if you are *not* in a virtualenv\npip3 install --user riko==0.51.0\nbash\n# if you installed iPython\nipython\n\n# if you did *not* install iPython\npython3\n\nPython 3.6.1 (default, May 24 2017, 01:02:17)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin\nType ""help"", ""copyright"", ""credits"" or ""license"" for more information.\n>>>\n\n>>> 1 + 3\n4\n>>> x = 1 + 3\n>>> x\n4\nhttps://github.com/reubano/lambdaconf-tutorial/blob/master/presentation.pyhttps://github.com/reubano/lambdaconf-tutorial/blob/master/exercises.pypython3 exercises.pyhttps://github.com/reubano/lambdaconf-tutorial/blob/master/solutions.pypython3 solutions.pyhttp://beta.mybinder.org/v2/gh/reubano/lambdaconf-tutorial/masterpresentation.ipynbexercises.ipynbsolution.ipynbhttps://docs.python.org/3.6/tutorial/index.htmlhttps://github.com/reubano/meza/blob/master/README.rst#hello-world"
https://github.com/jacobeisenstein/gt-nlp-class,"Course materials for Georgia Tech CS 4650 and 7650, ""Natural Language""",https://docs.google.com/spreadsheets/d/1BuvRjPhfHmy7XAfpc5KoygdfqI3Cue3bbmiO6yYuX_E/edit?usp=sharinghttps://docs.google.com/document/d/1loefqZhmOaF2mP8yQPEx91jZ7BHylWixVtYlFhpIlGM/edit?usp=sharing#readings#grading#help#policieshttps://github.com/jacobeisenstein/gt-nlp-class/blob/master/noteshttp://www.amazon.com/Speech-Language-Processing-2nd-Edition/dp/0131873210/https://web.stanford.edu/~jurafsky/slp3/http://www.amazon.com/Natural-Language-Processing-Python-Steven/dp/0596516495http://www.amazon.com/Schaums-Outline-Probability-Statistics-Edition/dp/007179557X/ref=pd_sim_b_1?ie=UTF8&refRID=1R57HWNCW6EEWD1ZRH4Chttps://registrar.gatech.edu/info/institute-approved-absence-form-for-students
https://github.com/psi4/psi4,Open-Source Quantum Chemistry – an electronic structure package in C++ driven by Python,https://dev.azure.com/psi4/psi4/_build?definitionId=1https://codecov.io/gh/psi4/psi4https://github.com/psi4/psi4/releaseshttps://github.com/psi4/psi4/releases/tag/v1.8https://psicode.org/psi4manual/master/introduction.html#supported-systemshttps://psicode.org/https://psicode.org/psi4manual/master/index.htmlhttp://forum.psicode.org/https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Qhttps://opensource.org/licenses/LGPL-3.0https://psicode.org/psi4manual/master/introduction.html#supported-systemshttps://psicode.org/psi4manual/master/introduction.html#supported-systemshttps://psicode.netlify.com/installs/latesthttps://anaconda.org/conda-forge/psi4https://anaconda.org/conda-forge/psi4https://mybinder.org/v2/gh/psi4/psi4/56fbc7787af67dabdf1897d0dfe4263d8d97e241?urlpath=lab%2Ftree%2Fdoc%2Fsphinxman%2Fsource%2Fpsiapi.ipynbhttps://github.com/psi4/psi4/releaseshttps://anaconda.org/psi4/psi4https://anaconda.org/psi4/psi4https://anaconda.org/psi4/psi4https://github.com/psi4/psi4/graphs/contributorshttps://github.com/psi4/psi4/pullsCMakeLists.txt#L27https://psicode.org/psi4manual/master/index.htmlpsi4 job.inpython job.pyhttps://dev.azure.com/psi4/psi4/_build?definitionId=1https://anaconda.org/psi4/psi4https://anaconda.org/conda-forge/psi4https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-sitehttps://codecov.io/gh/psi4/psi4https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflowhttp://makeapullrequest.comsampleshttps://opensource.org/licenses/LGPL-3.0https://www.gnu.org/licenses/lgpl.txthttps://doi.org/10.1063/5.0006002https://doi.org/10.1021/acs.jctc.7b00174https://doi.org/10.1021/acs.jctc.8b00286https://doi.org/10.1002/wcms.93https://doi.org/10.1002/jcc.20573
https://github.com/sanghaisubham/Tic-Tac-Toe-Game,A Common Tic Tac Toe Game Played Between the User and the System with the System Starting the game,
https://github.com/Cyberdog52/Project,UIE,
https://github.com/mingot/lung_cancer_ds_bowl,Data Science Bowl 2017 for lung cancer prediction with Keras,"https://github.com/mingot/lung_cancer_ds_bowl/tree/master/src/utilshttps://docs.google.com/spreadsheets/d/15wi07edzdVLqpnviPI4qhO5gOA_Ve6MQ7RCE92YGERE/edit#gid=0https://github.com/mingot/lung_cancer_ds_bowl/blob/master/src/jc_dl/README.mdhttps://drive.google.com/drive/folders/0BwtD1eiXdLQRVXo4aXFYVDVZNHMhttps://drive.google.com/drive/folders/0BwtD1eiXdLQRMlhvTzJsZjNkeWshttps://drive.google.com/drive/folders/0BwtD1eiXdLQRS1d3eVlwSVpCblUhttps://www.kaggle.com/gzuidhof/data-science-bowl-2017/full-preprocessing-tutorialhttps://www.kaggle.com/anokas/data-science-bowl-2017/exploratory-data-analysishttps://www.tensorflow.org/tutorials/deep_cnn/\n $ git clone https://github.com/mingot/lung_cancer_ds_bowl.git\n http://docs.python-guide.org/en/latest/dev/virtualenvs/virtualenvwrapper\n$ mkvirtualenv lung\n$(lung) pip install -r requirements.txt\nrequirements.txt!git commit~/lung_cancer_ds_bowl~/lung_cancer_ds_bowl/data!sudo pip install/mnt/hd2/preprocessed/np.load(file)[\'arr_0\'][type,slice,height,width]typeheightweight\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 README.md          <- The top-level README for developers using this project.\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 data\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 external       <- Data from third party sources.\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 interim        <- Intermediate data that has been transformed.\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 processed      <- The final, canonical data sets for modeling.\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 raw            <- The original, immutable data dump.\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 docs               <- A default Sphinx project; see sphinx-doc.org for details\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 models             <- Trained and serialized models, model predictions, or model summaries\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n\xe2\x94\x82                         the creator\'s initials, and a short `-` delimited description, e.g.\n\xe2\x94\x82                         `1.0-jqp-initial-data-exploration`.\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 references         <- Data dictionaries, manuals, and all other explanatory materials.\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 figures        <- Generated graphics and figures to be used in reporting\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n\xe2\x94\x82                         generated with `pip freeze > requirements.txt`\n\xe2\x94\x82\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 src                <- Source code for use in this project.\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 __init__.py    <- Makes src a Python module\n\xe2\x94\x82   \xe2\x94\x82\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 data           <- Scripts to download or generate data\n\xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 make_dataset.py\n\xe2\x94\x82   \xe2\x94\x82\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 features       <- Scripts to turn raw data into features for modeling\n\xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 build_features.py\n\xe2\x94\x82   \xe2\x94\x82\n\xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 models         <- Scripts to train models and then use trained models to make\n\xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x82                 predictions\n\xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 predict_model.py\n\xe2\x94\x82   \xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 train_model.py\n\xe2\x94\x82   \xe2\x94\x82\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 visualization  <- Scripts to create exploratory and results oriented visualizations\n\xe2\x94\x82       \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 visualize.py\n\xe2\x94\x82\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 tox.ini            <- tox file with settings for running tox; see tox.testrun.org\nhttps://itk.org/SimpleITKDoxygen/html/PyDownloadPage.htmleasy_install\n>>> import SimpleITK as sitk\n""Fatal Python error: PyThreadState_Get: no current thread""\n_SimpleITK.so\n$ otool -L ~/virtualenvs/lung/lib/python2.7/site-packages/SimpleITK/_SimpleITK.so \n/Users/mingot/virtualenvs/lung/lib/python2.7/site-packages/SimpleITK/_SimpleITK.so:\n\t/System/Library/Frameworks/Python.framework/Versions/2.7/Python (compatibility version 2.7.0, current version 2.7.1)\n\t/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 635.19.0)\n\t/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\n\t/usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 52.0.0)\n$ sudo install_name_tool -change /System/Library/Frameworks/Python.framework/Versions/2.7/Python ~/virtualenvs/lung/.Python ~/virtualenvs/lung/lib/python2.7/site-packages/SimpleITK/_SimpleITK.so\n"
https://github.com/NYC-OPCCR/2014-07-15,DREAM about solving AML,
https://github.com/rodgzilla/fractal_GAN,A deep learning project where the goal is to train a generator to produce plausible fractal images.,
https://github.com/akalathil/Eng100D_Project,This project is our Eng100D project for onestep,"\n  [\n    ""disease"", \n    ""injury"", \n    ""mental_health"", \n    ""nutrition""\n    ...\n  ]\n  \n  [\n    {\n      ""type"": ""disease"",\n      ""affliction"": ""ARI/Lower respiratory tract Infection"",\n      ""name"": ""ARI/Lower respiratory tract Infection"",\n      ""date"": 1497093051529,\n      ""views"": 0,\n      ""description"": ""ARI/Lower respiratory tract Infection"",\n      ""source"": ""OpenNepal"",\n      ""uploader"": ""Original""\n    },\n    {\n      ""type"": ""disease"",\n      ""affliction"": ""Asthama"",\n      ""name"": ""Asthama"",\n      ""date"": 1497093051529,\n      ""views"": 0,\n      ""description"": ""Asthama"",\n      ""source"": ""Original""\n    },...\n  ]\n\n  [\n    ""ARI/Lower respiratory tract Infection"",\n    ""Asthama"",\n    ""Bronchitis"",\n    ""Confirmed Meningitis"",\n    ""HIV/AIDS"",\n    ""Leprosy"",\n    ""Pneumonia"",\n    ...\n  ]\n  \nNOTE: Replace ""/"" with %2F\n\n{\n    ""Data"": {\n      ""cols"": [\n        ""Name"",\n        ""Year"",\n        ""Value"",\n        ""Latitude"",\n        ""Longtitude""\n      ],\n      ""rows"": ""[ {\\""0\\"":\\""Taplejung\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.6257485,\\""Longitude\\"":87.7763333},                \n                {\\""0\\"":\\""Panchthar\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.2036401,\\""Longitude\\"":87.8156715},\n               ...]""\n    },\n    ""info"": {\n    ""name"": ""HIV/AIDS"",\n    ""date"": 1497093051529,\n    ""views"": 0,\n    ""description"": ""HIV/AIDS"",\n    ""source"": ""OpenNepal"",\n    ""uploader"": ""Uploader""\n    }\n}\n\n{\n    ""name"": ""HIV/AIDS"",\n    ""date"": 1497503262232,\n    ""views"": 0,\n    ""description"": ""HIV/AIDS"",\n    ""source"": ""OpenNepal"",\n    ""uploader"": ""Original""\n}\n\n{\n  ""cols"": [\n    ""Name"",\n    ""Year"",\n    ""Value"",\n    ""Latitude"",\n    ""Longtitude""\n  ],\n  ""rows"": ""[\n            {\\""0\\"":\\""Taplejung\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.6257485,\\""Longitude\\"":87.7763333},\n            {\\""0\\"":\\""Panchthar\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.2036401,\\""Longitude\\"":87.8156715}\n            ...]""\n}\n\n  [\n    ""Name"",\n    ""Year"",\n    ""Value"",\n    ""Latitude"",\n    ""Longtitude""\n  ]\n  \n  ""[\n    {\\""0\\"":\\""Taplejung\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.6257485,\\""Longitude\\"":87.7763333},\n    {\\""0\\"":\\""Panchthar\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":0,\\""Latitude\\"":27.2036401,\\""Longitude\\"":87.8156715},\n    {\\""0\\"":\\""Ilam\\"",\\""1\\"":\\""2013\\\\/14\\"",\\""2\\"":6,\\""Latitude\\"":26.9111769,\\""Longitude\\"":87.9236747},\n    ...\n  ]""\n\n[\n  ""COLUMN_1_NAME"",\n  ""COLUMN_2_NAME"",\n  ""COLUMN_3_NAME"",\n  ...\n]\n\n{\t\t\t\n  ""0"": ""NAME""\n  ""1"": ""YEAR""\n  ""2"": ""VALUE""\n  ""index"": ""INDEX_IN_ROW_ARRAY""\n}\n\nNOTE date is calculated with \nvar d=new Date();\nvar n=d.getTime();\n\n{\n  ""name"":""NAME"",\n  ""date"":""DATE"",\n  ""views"":""NUMBER_OF_VIEWS"",\n  ""description"":""SOME_DESCRIPTION"",\n  ""source"": ""SOME_SOURCE"",\n  ""uploader"":""SOME_UPLOADER""\n}\n\n{\n  ""type"": ""NEW_TYPE""\n}\n\n{\n  ""0"":""NAME_OF_DISTRICT"",\n  ""1"":""YEAR_OF_DATASET"",\n  ""2"":""VALUE"",\n  ""Latitude"":""LATITUDE_OF_DISTRICT"",\n  ""Longitude"":""LONGITUDE_OF_DISTRICT""\n}\n\n{\n  info:{\n    ""name"":""X"",\n    ""date"":Y,\n    ""views"":Z,\n    ""description"":""new description"",\n    ""source"":""source"",\n    ""uploader"":""SOME_UPLOADER""\n  },\n  Data:{\n    cols:[col1,col2,col3...],\n    rows:[\n      {\n        ""0"":Name,\n        ""1"":Year,\n        ""2"":Value,\n        ""Latitude"":Lat,\n        ""Longitude"":Long\n      },\n      {\n        ""0"":Name,\n        ""1"":Year,\n        ""2"":Value,\n        ""Latitude"":Lat,\n        ""Longitude"":Long\n      },\n      ...\n    ]\n  }\n}\n\n{\n    ""name"":""NAME_OF_AFFLICTION"",\n    ""description"": ""DESCRIPTION_OF_AFFLICTION""\n}\n\n{}\n"
https://github.com/beckernick/wikipedia_pageviews,The Election's Effect on Candidate's Wikipedia Page Views,
https://github.com/darshan-b/Machine-Learning-Regression,"Concepts implemented from scratch include: Gradient Descent, Lasso Regression and Ridge Regression",
https://github.com/UCRclyman/P177_Homework04,Homework 04,
https://github.com/parantapag/IBD4Health2017,Lecture materials for IBD4Health 2017 summer school,
https://github.com/Clique-CS109/project,The main repository for Team Clique CS109 project,README.mdFinalProject_ProcessBook_General.ipynbData_Exploration.ipynbdataBase_Model.ipynbBookSim.ipynbuserkNN.ipynbknn_filehttp://clique-cs109.github.iohttps://youtu.be/Zjm2z99ru_E
https://github.com/mwaskom/nipype_concepts,Tutorial notebooks for Nipype,http://ipython.org/http://nipy.sourceforge.net/nipype/http://nbviewer.ipython.org/urls/raw.github.com/mwaskom/nipype_concepts/master/interfaces.ipynbhttp://nbviewer.ipython.org/urls/raw.github.com/mwaskom/nipype_concepts/master/workflows.ipynbhttp://nbviewer.ipython.org/urls/raw.github.com/mwaskom/nipype_concepts/master/iteration.ipynbhttp://ipython.org/http://nipy.sourceforge.net/nipype/http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/http://www.fil.ion.ucl.ac.uk/spm/
https://github.com/toshikurauchi/eyeswipe2-analysis,Results and analysis from eyeswipe2 experiment,
https://github.com/miroli/ML-training,Machine learning training with Jupyter,
https://github.com/antingithub/JupyterWorkFlow,Jupyter Work Flow Example,
https://github.com/AlexandreCaron/12_steps_to_NS,CFD Python: 12 steps to Navier-Stokes,
https://github.com/0xLiso/Introduccion_ML,Una pequeña introduccion al Machine Learning,
https://github.com/ashu2012/udacitycCarND,https://classroom.udacity.com/nanodegrees/nd013,
https://github.com/jenyquist/FLASH,An Ipython notebook implementation of A Computer Program for Flow-Log Analysis of Single Holes (FLASH),
https://github.com/PacktPublishing/Apache-Spark-2-for-Beginners,"Apache Spark 2 for Beginners, published by Packt","https://www.packtpub.com/big-data-and-business-intelligence/apache-spark-2-beginners?utm_source=github&utm_medium=repository&utm_campaign=9781785885006\r\nPython 3.5.0 (v3.5.0:374f501f4567, Sep 12 2015, 11:00:19)\r\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\r\nhttps://www.packtpub.com/application-development/scala-design-patterns?utm_source=github&utm_medium=repository&utm_campaign=9781785882500https://www.packtpub.com/big-data-and-business-intelligence/machine-learning-spark?utm_source=github&utm_medium=repository&utm_campaign=9781783288519https://www.packtpub.com/web-development/quickstart-apache-axis2?utm_source=github&utm_medium=repository&utm_campaign=9781847192868https://docs.google.com/forms/d/e/1FAIpQLSe5qwunkGf6PUvzPirPDtuy1Du5Rlzew23UBp2S-P3wB-GcwQ/viewform"
https://github.com/justinmklam/python-resources,Python resources so I don't forget everything after not using it for 6 months.,
https://github.com/akshat7/Kaggle-Digit-Recognizer,Kaggle submission of the Digit Recognizer challenge using multiple ML Algorithms and their result comparisons.,
https://github.com/BibMartin/crossfolium,A plugin to add crossfilters in folium,https://square.github.io/crossfilterhttps://github.com/python-visualization/foliumhttp://nbviewer.jupyter.org/github/bibmartin/crossfolium/tree/master/examples/
https://github.com/birlrobotics/bnpy,bnpy trains nonparameteric markov switching process in python through a simple and useful api.,"#abouthttps://bnpy.readthedocs.io/en/latest/#example-gallery#quick-start#installation#team#academic-references#nips-2015-hdp-hmm-paper#aistats-2015-hdp-topic-model-paper#nips-2013-dp-mixtures-paperFiniteMixtureModelDPMixtureModelFiniteTopicModelHDPTopicModelFiniteHMMHDPHMMMultGaussDiagGaussZeroMeanGaussAutoRegGaussEMVBmoVBsoVBhttps://bnpy.readthedocs.io/en/latest/examples/https://github.com/bnpy/bnpy/tree/master/examples\r\n$ python -m bnpy.Run /path/to/my_dataset.csv FiniteMixtureModel Gauss EM --K 8 --output_path /tmp/my_dataset/results/\r\n\r\nimport bnpy\r\nbnpy.run(\'/path/to/dataset.csv\',\r\n         \'FiniteMixtureModel\', \'Gauss\', \'EM\',\r\n         K=8, output_path=\'/tmp/my_dataset/results/\')\r\n\r\n\r\npython -m bnpy.Run /path/to/dataset.csv DPMixtureModel Gauss VB --K 8\r\n\r\npython -m bnpy.Run /path/to/dataset.csv DPMixtureModel Gauss memoVB --K 8 --nBatch 10 --moves birth,merge\r\n\r\n# print help message for required arguments\r\npython -m bnpy.Run --help \r\n\r\n# print help message for specific keyword options for Gaussian mixture models\r\npython -m bnpy.Run /path/to/dataset.csv FiniteMixtureModel Gauss EM --kwhelp\r\nhttps://bnpy.readthedocs.io/en/latest/installation.htmlhttp://www.michaelchughes.comhttp://cs.brown.edu/people/sudderth/http://michaelchughes.com/papers/HughesStephensonSudderth_NIPS_2015.pdfhttp://michaelchughes.com/papers/HughesStephensonSudderth_NIPS_2015_supplement.pdfhttp://bitbucket.org/michaelchughes/x-hdphmm-nips2015/http://michaelchughes.com/papers/HughesKimSudderth_AISTATS_2015.pdfhttp://michaelchughes.com/papers/HughesKimSudderth_AISTATS_2015_supplement.pdfhttp://cs.brown.edu/people/mhughes/papers/HughesKimSudderth-AISTATS2015-MemoizedHDP-bibtex.txthttp://michaelchughes.com/papers/HughesSudderth_NIPS_2013.pdfhttp://michaelchughes.com/papers/HughesSudderth_NIPS_2013_supplement.pdfhttp://cs.brown.edu/people/mhughes/papers/HughesSudderth-NIPS2013-MemoizedDP-bibtex.txthttp://michaelchughes.com/papers/HughesSudderth_NIPSProbabilisticProgrammingWorkshop_2014.pdf"
https://github.com/niudd/dps,dps = Deep Player Score (Not Damage Per Second!),
https://github.com/tgvaughan/bacter,Bacterial phylogenetics in BEAST 2.,https://github.com/tgvaughan/bacter/actions?query=workflow%3A%22Unit%2Fintegration+tests%22http://www.beast2.org/examples/lib/src/test/templatesversion.xmlbuild.xml.gitignore.travis.ymlDockerfileCOPYINGREADME.md/disthttp://www.allanwilsoncentre.ac.nzhttp://www.royalsociety.org.nz/programmes/funds/marsden/http://auckland.ac.nzhttp://www.massey.ac.nz
https://github.com/jpdeleon/ircs,Basic data reduction of near infrared images with polarimetry specific for IRCS--the infrared camera and spectrograph instrument in the Subaru telescope,ircs_polshell\nconda create -n ircs_pol python-2.7 matplotlib numpy\nsource activate ircs_polircsshell\ngit clone git@github.com:jpdeleon/ircs.gitcdshell\ncd /ircs\npython setup.py installshell\n$ ircs-imaging -hshell\n$ ircs-polarimetry -h
https://github.com/wstrinz/infopipes,"Use existing services to feed, tag, organize and read news (wip)",auto_tagger.rb.ipynb
https://github.com/mat-esp-2016/integracao-numerica-oceano_saq,integracao-numerica-oceano_saq created by GitHub Classroom,http://www.leouieda.com/matematica-especial/http://www.uerj.br/http://www.leouieda.com/alunos.txthttp://jupyter.org/http://127.0.0.1:8888$ jupyter notebooktarefa-integracao.ipynbgit addgit commitgit pushgit pull origin master
https://github.com/Obeyed/udacity,Exercises from Udacity courses,
https://github.com/LuisM78/python_machine_scripts,a place to store my python machine learning scripts,
https://github.com/pmorissette/klink,A Simple and Clean Sphinx Docs Theme,our docs <http://pmorissette.github.io/klink/>
https://github.com/batra-mlp-lab/VT-F15-ECE6504-HW0,ECE6504 Homework 0,https://filebox.ece.vt.edu/~f15ece6504/https://store.continuum.io/cshop/anaconda/http://docs.continuum.io/anaconda/pkg-docshttp://docs.continuum.io/anaconda/installhttp://docs.continuum.io/anaconda/faqhttp://www.numpy.org/http://cs231n.github.io/python-numpy-tutorial/http://sebastianraschka.com/Articles/2014_matlab_vs_numpy.htmlhttp://ipython.org/notebook.htmlsh\nipython notebook\n.ipynbhttp://www.cs.toronto.edu/~kriz/cifar.htmlsvm.ipynbsoftmax.ipynbhttp://cs231n.github.io/assignment1/https://github.com/batra-mlp-lab/VT-F15-ECE6504-HW0/archive/1.0.zipf15ece6504/datash\n./get_datasets.sh\nf15ece6504/data/cifar-10-batches-pyhttps://github.com/HIPS/Spearminthttps://github.com/HIPS/Spearmint/tree/master/examples/simpleSpearmint/examplescollectSubmission.shhttp://cs231n.github.io/linear-classify/http://cs231n.stanford.edu
https://github.com/camillescott/avida-modularity,Study on the evolution of genetic modularity in the absence of recombination,
https://github.com/mat-esp/minimos-quadrados,Método dos mínimos quadrados,"http://www.leouieda.com/matematica-especial/http://www.uerj.br/http://www.leouieda.com/alunos.txtespacamento = (maximo - minimo)/(N - 1)indices = range(0, N, 1)dado = dados[i + 1]espacamento=(maximo-minimo)/ (N-1)indices=range (0,N,1)dado= dados [i+ 1]for i in range(0, N):A[k][N - 1]for i in range(0, 39):A[k][47]temperaturamedia_por_horalinhasomatorioavarmehlistahttp://github.com/https://guides.github.com/features/issues/https://github.com/leouieda/matematica-especial/https://github.com/mat-esp-uerj/integracao-sociedade-42http://creativecommons.org/licenses/by/4.0/https://i.creativecommons.org/l/by/4.0/88x31.png"
https://github.com/vyachegrinko/Python_for_Data_Science,training module,"http://www.python.org/http://ipython.org/notebook.htmlhttp://ipython.org/install.htmlhttps://www.python.org/downloads/Python_for_Data_Science_clean.ipynbPython_for_Data_Science_all.ipynbPython_for_Data_Science_all.html1_Introduction.ipynb2_Data_Science_Basic_Concepts.ipynb3_Python_Basic_Concepts.ipynb4_Python_Simple_Decision_Tree.ipynb5_Next_Steps.ipynbsimple_ml.pysimple_decision_tree.pyhttps://archive.ics.uci.edu/ml/datasets/Mushroomagaricus-lepiota.dataagaricus-lepiota.attributesallcleanSimpleDecisionTree.pysimple_decision_tree.pydefaultdictCounterclassification_accuracy()str.format()http://seattle.pydata.org/schedule/presentation/8/http://seattle.pydata.org/https://twitter.com/ncoghlan_devfrom __future__ import print_function, divisionsimple_ml.pySimpleDecisionTree.pyprint_functiondivisionxrange()range()dict.iteritems()dict.items()https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_referencehttps://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharingisinstance()type()delimiter\'|\'"
https://github.com/dangall/Deep-Learning-course,Contains notebook exercises for a Deep Learning course from Udacity,
https://github.com/JuliaX/cajun-talks,Talk materials for the Cambridge Area Julia User Network,
https://github.com/akshaykumarpal/Stock-Market-Movement-Prediction-using-News-Feed-Python-and-R,This project is about Stock Market Movement Prediction using News-Feed in Python and R (Deep Learning and Sentiment Analysis),
https://github.com/jimpala/msci-hep,Code for HEP data science work at UCL.,
https://github.com/danielfrg/coursera-intro-ds,Coursera intro to Data science - Spring 2013,
https://github.com/CedricVallee/pythonKNearestNeighbors,"This repository contains code for the class IEOR265 ""Learning and Optimization"".",
https://github.com/PythonWorkshop/scalable-sklearn,Demonstrations of scalable sklearn with dask for out-of-core computation.,http://dask.pydata.org/en/latest/
https://github.com/abhishekanand/DS4UX,Data Science for User Experience Researchers,http://blogs.uw.edu/hcde/2016/02/12/new-ms-course-data-science-for-user-experience-researchers/
https://github.com/datakop/rabbitmq-notebook-examples,RabbitMQ example inside iPython Notebook.,https://www.rabbitmq.com/getstarted.htmlsh\nvirtualenv .mqEnv\n. ./.mqEnv/bin/activate\npip install -r requirements.txt --upgrade\nsh\ndocker pull rabbitmq:3-management\ndocker run -d  --hostname local_rabbitmq --name local_rabbitmq -p 15672:15672 -p 15674:15674 -p 5672:5672 rabbitmq:3-management\nsh\n. ./.mqEnv/bin/activate\n./.mqEnv/bin/ipython notebook notebooks # it will automatically open browser with notebooks.\n http://DOCKER_IP:15672/docker-machine ip defaulthttps://www.rabbitmq.com/tutorials/tutorial-six-python.htmlhttps://www.docker.com/whatisdockerhttps://www.rabbitmq.com/features.htmlhttp://ipython.org/notebook.html
https://github.com/anne4180/my_first_python_rep,my first python repository,
https://github.com/yanyanmountainview/student_intervention,"Based on students' performance data,  developed a model that predicted the likelihood that a given student will pass, quantifying whether an intervention is necessary.",http://www.numpy.org/http://pandas.pydata.orghttp://scikit-learn.org/stable/http://ipython.org/notebook.htmlhttps://www.continuum.io/downloadsstudent_intervention.ipynbstudent_intervention/ipython notebook student_intervention.ipynbjupyter notebook student_intervention.ipynbstudent-data.csvschoolsexageaddressfamsizePstatusMeduFeduMjobFjobreasonguardiantraveltimestudytimefailuresschoolsupfamsuppaidactivitiesnurseryhigherinternetromanticfamrelfreetimegooutDalcWalchealthabsencespassed
https://github.com/pszjmb1/fun_with_metropolis_algorithm,Developing intuition behind MCMC sampling,http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/
https://github.com/pbrusco/crystal-learn,Machine Learning in Crystal ,"crystal\nrequire ""csv""\nrequire ""../knn""\nrequire ""../trees""\nrequire ""../array""\nrequire ""../ml""\n\nputs ""Loading IRIS dataset""\n\nx, y = ML.load_floats_csv(""iris.csv"")\nputs ""Shapes: X: #{x.shape}, y: #{y.shape}""\n\ndef folds_accuracy(clf, x, y, *, n_folds k)\n  accuracies = [] of Float64\n  folds = ML.kfold_cross_validation(n_folds: k, dataset_size: y.size)\n\n  folds.each do |train_index, test_index|\n    x_train, y_train = x[train_index], y[train_index]\n    x_test, y_test = x[test_index], y[test_index]\n\n    clf.fit(x_train, y_train)\n    y_pred = clf.predict(x_test)\n\n    accuracies << ML.accuracy(y_test, y_pred)\n  end\n  accuracies.mean\nend\n\nputs ""------------------ KNN -------------------""\n\n(5..150).step(10).each do |n|\n  clf = ML::Classifiers::KNeighborsClassifier(typeof(x.first.first), typeof(y.first)).new(n_neighbors: n)\n  folds_acc = folds_accuracy(clf, x, y, n_folds: 10).round(2)\n  puts ""10-folds accuracy #{folds_acc} (KNN - #{n} neighbors)""\nend\n\nputs ""------------------ TREES -------------------""\n\n(2..15).each do |max_depth|\n  clf = ML::Classifiers::DecisionTreeClassifier(typeof(x.first.first), typeof(y.first)).new(max_depth: max_depth)\n  folds_acc = folds_accuracy(clf, x, y, n_folds: 10).round(2)\n  puts ""10-folds accuracy #{folds_acc} (DecisionTreeClassifier - max_depth: #{max_depth})""\nend\n  # uncomment to vizualize the tree:\n  # clf.show_tree(%w(sepal_length sepal_width petal_length petal_width species))\nputs\n\n\nLoading IRIS dataset\nShapes: X: {150, 4}, y: 150\n------------------ KNN -------------------\n10-folds accuracy 0.97 (KNN - 5 neighbors)\n10-folds accuracy 0.96 (KNN - 15 neighbors)\n10-folds accuracy 0.95 (KNN - 25 neighbors)\n10-folds accuracy 0.93 (KNN - 35 neighbors)\n10-folds accuracy 0.95 (KNN - 45 neighbors)\n10-folds accuracy 0.94 (KNN - 55 neighbors)\n10-folds accuracy 0.91 (KNN - 65 neighbors)\n10-folds accuracy 0.88 (KNN - 75 neighbors)\n10-folds accuracy 0.81 (KNN - 85 neighbors)\n10-folds accuracy 0.62 (KNN - 95 neighbors)\n10-folds accuracy 0.43 (KNN - 105 neighbors)\n10-folds accuracy 0.43 (KNN - 115 neighbors)\n10-folds accuracy 0.56 (KNN - 125 neighbors)\n10-folds accuracy 0.28 (KNN - 135 neighbors)\n10-folds accuracy 0.25 (KNN - 145 neighbors)\n------------------ TREES -------------------\n10-folds accuracy 0.89 (DecisionTreeClassifier - max_depth: 2)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 3)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 4)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 5)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 6)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 7)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 8)\n10-folds accuracy 0.95 (DecisionTreeClassifier - max_depth: 9)\n10-folds accuracy 0.94 (DecisionTreeClassifier - max_depth: 10)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 11)\n10-folds accuracy 0.93 (DecisionTreeClassifier - max_depth: 12)\n10-folds accuracy 0.95 (DecisionTreeClassifier - max_depth: 13)\n10-folds accuracy 0.91 (DecisionTreeClassifier - max_depth: 14)\n10-folds accuracy 0.95 (DecisionTreeClassifier - max_depth: 15)\n\n"
https://github.com/yanyu711141/6_12_2016_SoftwareCarpentry,code from the workshop,
https://github.com/jasonamyers/pycon2014,My Intro to SQLAlchemy Core Slides,http://www.jasonamyers.com/pycon2014/#/http://www.slideshare.net/jamdatadude/sql-alchemy-core-an-introductionnpm installgrunt servehttp://127.0.0.1:8000/mkvirtualenv sacorepip install -r requirements.txtipython notebook
https://github.com/cgerson/bike-share-analysis,Analysis of open bikeshare data,
https://github.com/toyota790/Twitter_PanamaPapers_Analysis,This project is using the Logstash to get data from Twitter. Then use the PySpark K-Means algorithm to clustering.,Architecture.pnghttps://dev.twitter.com/rest/publichttps://dev.twitter.com/rest/publichttps://github.com/toyota790/Twitter2JSON
https://github.com/phgcarva/atai-notebooks-machine-learning,A series of homeworks done for the course CK0146 - Advanced Topics in Artificial Inteligence (Machine Learning),
https://github.com/mbmilligan/msi-ipython-nb-ex,Example IPython notebooks for MSI,https://mybinder.org/v2/gh/mbmilligan/msi-ipython-nb-ex/masterhttps://notebooks.msi.umn.eduhttps://mybinder.org/
https://github.com/JonathanToro/Fish_Image_Classification,Kaggle competition code that uses CNNs for image classification. Ranked top 5% at the time of submission,
https://github.com/aprilnovak/coupling-moose,Local MOOSE repo holding common functionalities that in the future should be put in a MOOSE module,https://www.moosebuild.org/repo/idaholab/moose/http://www.inl.govhttp://www.mcs.anl.gov/petsc/http://mooseframework.org/wiki/Contributing/
https://github.com/andridns/tf-cifar10,Convolutional Neural Network to classify CIFAR-10 image dataset using TensorFlow,https://github.com/adsasmita/tf-cifar10/blob/master/tf-cifar10.ipynbhttps://github.com/jupyter/notebookhttps://www.cs.toronto.edu/~kriz/cifar.htmlimg/cifar10-1.pngimg/cnn1.pngimg/cnn2.pngimg/result.pnghttps://www.tensorflow.org/get_started/get_startedhttp://www.numpy.org/https://pypi.python.org/pypi/tqdmhttps://docs.python.org/3/library/pickle.htmlhttps://pypi.python.org/pypi/helper
https://github.com/fsfelix/audio-thumbnailing,Repository for my scientific initiation project on audio thumbnailing. ,
https://github.com/tmhughes81/student_intervention,udacity Project #2: Student Intervention,http://www.numpy.org/http://pandas.pydata.orghttp://scikit-learn.org/stable/http://ipython.org/notebook.htmlhttps://www.continuum.io/downloadsstudent_intervention.ipynbstudent_intervention/ipython notebook student_intervention.ipynbjupyter notebook student_intervention.ipynbstudent-data.csvschoolsexageaddressfamsizePstatusMeduFeduMjobFjobreasonguardiantraveltimestudytimefailuresschoolsupfamsuppaidactivitiesnurseryhigherinternetromanticfamrelfreetimegooutDalcWalchealthabsencespassed
https://github.com/srv902/MonoDepthCNN,A sample take on the CNN based approach to find the depth map of a monocular image.,
https://github.com/interactivetech/DeepStyleArtClassifier,CornellTech specialization project,
https://github.com/DessimozLab/treeCl,Phylogenetic clustering package,treeClhttps://travis-ci.org/kgori/treeCl.svg?branch=mastertreeClhttps://dx.doi.org/10.1093/molbev/msw038https://github.com/kgori/pllpytreeCl
https://github.com/regreg/regreg,A multi-algorithm Python framework for regularized regression,LICENSEregreg issue tracker\n<https://github.com/regreg/regreg/issues>
https://github.com/shiftshuffle/biomat,biomat,
https://github.com/devrandom/python-blockstack,Python API for blockstack.io,"https://travis-ci.org/devrandom/python-blockstackpython\n    from blockstack.client import BlockstackClient\n    token = ""YOUR_API_TOKEN""\n    client = BlockstackClient(base_uri=\'https://YOURNAMEHERE.blockstack.io/api\', token=token)\n    alice = client.wallets.get(\'Blue\')\n    bob = client.wallets.get(\'Green\')\n    print(alice.__dict__.keys())\n    print(alice.currentAddress)\n    print(alice.currentHeight)\n\n    dict_keys([\'name\', \'allBalances\', \'currentAddress\', \'auth\', \'base_uri\', \'id\', \'transactions\', \'currentHeight\', \'parent\', \'assetAddress\', \'balances\', \'timeout\', \'netBalances\'])\n    ms9tDLTTqjQa7daCQHj39jjHdTU8AK4of3\n    653\npython\n    alice_txs = alice.transactions\n    bob_txs = bob.transactions\n    print([t.id for t in alice_txs.list()])\n    partial = alice_txs.propose(atomic=True, asset=\'TRY\', address=bob.assetAddress, amount=200)\n    complete = bob_txs.create(atomic=True, asset=\'RUB\', address=alice.assetAddress, amount=100, transaction=partial[\'transaction\'])\n    signed1 = client.oracles.get(\'Green\').transactions.sign(complete.id, complete.transaction)\n    committed = client.oracles.get(\'Blue\').transactions.broadcast(complete.id, signed1.transaction) # sign and broadcast\n\n    [\'1f5381760c56f89b0a35dd6ae5c4ee6a6fb0941f72a27c6fed786cf0829c31bb\', \'9d2fe8946d0d1575972f0c3181fbfdf22e5e411e1f96ab0e44302245ca510bac\', \'26b3af7a30f552e2af83d3052ea33a51664ccc3d7dd589d27d58daffadfab6ae\', \'820364378b7f75f26f77e640167aa1e5ccba9e46b92b977027f547bc6a116443\', \'ab99b8b7531592bd3585f2c6c0293e8fe1f952f69558efe44b1ad569329b7272\']\npython\n    tx = alice_txs.get(committed.id)\n    print(tx.id)\n    print(tx.changes)\n\n    41a5b967732826d37768c588336b5e3ab5a0c4814885a0fb5b924f4dcd9324e2\n    {\'RUB\': 100, \'TRY\': -200, \'Tokens\': -20287}\n"
https://github.com/demunger/time_series,Techniques and Applications of Time Series Analysis,bbm.ipynbfft.ipynbpca.ipynb
https://github.com/umer-rasheed/Lane-Detection,Lane Detection for Self-Driving Cars,
https://github.com/a-kravtsov/coolfunc_example,Example of how to use cooling functions tabulated by Gnedin & Hollon (2012),
https://github.com/karenlmasters/ComputationalPhysicsUnit,Jupyter Notebooks and Other Materials Used in Teaching Computational Physics (at Portsmouth Uni in 2017),
https://github.com/dmuralik/datascience,All about data science!,
https://github.com/livenb/LungCancerPrediction,My personal solution of data science bowl 2017,https://www.kaggle.com/sentdex/data-science-bowl-2017/first-pass-through-data-w-3d-convnethttps://www.kaggle.com/gzuidhof/data-science-bowl-2017/full-preprocessing-tutorialimg/a1.pngimg/a2.png
https://github.com/ChaseRichmond2/Data-Visualization-Project-,My final project for a Data Visualization course working with NCAA basketball statistics,
https://github.com/yuriyi/hackathon2017,Hackathon 2017 project,gui.png
https://github.com/elisevmol/Machine-Learning,Course Machine Learning AUC,
https://github.com/slowmotionprojects/icestupa,Hosting code written by Slow Motion Projects in the context of its collaboration with the Ice Stupa Project (http://icestupa.org).,http://icestupa.org
https://github.com/katanachan/AInetworks,Asynchronous Irregular Networks in Cortical & Thalamic Regions,
https://github.com/ThomasRoca/Lecture-Columbia-Science-Po-2017,This folder contains and information and script for the dataviz workshop,https://twitter.com/Thomas_Rocahttps://github.com/ThomasRoca/http://nbviewer.jupyter.org/github/ThomasRoca/Lecture-Columbia-Science-Po-2017/blob/master/Big_Data_Public_Policy_columbia_univ_SIPA.ipynbhttp://nbviewer.jupyter.org/github/ThomasRoca/Lecture-Columbia-Science-Po-2017/blob/master/Dataviz_workshop_Columbia_Science_PO_SIPA.ipynbhttp://librairie.afd.fr/nt25-va-vunerability-flooding-senegal/https://www.hotosm.org/http://www.flowminder.org/case-studies/nepal-earthquake-2015https://data.humdata.org/https://github.com/ThomasRoca/Lecture-Columbia-Science-Po-2017/blob/master/Glossary.mdhttps://afdlab4dev.github.io/Wiki-DataExploration-in-AFD/http://datapopalliance.org/item/beyond-data-literacy-reinventing-community-engagement-and-empowerment-in-the-age-of-data/http://datapopalliance.org/item/leveraging-algorithms-for-positive-disruption-on-data-democracy-society-and-statistics/http://currents.plos.org/disasters/article/rapid-and-near-real-time-assessments-of-population-displacement-using-mobile-phone-data-following-disasters-the-2015-nepal-earthquake/http://www.digital-humanitarians.com/http://www.oreilly.com/data/free/files/being-a-data-skeptic.pdfhttps://www.devex.com/news/toward-data-driven-development-big-improvement-or-big-buzz-86192https://www.devex.com/news/open-algorithms-a-new-paradigm-for-using-private-data-for-social-good-88434http://www.ntnu.no/ojs/index.php/etikk_i_praksis/article/view/1973/1989http://librairie.afd.fr/nt25-va-vunerability-flooding-senegal/https://www.devex.com/news/opinion-data-driven-preparedness-for-disaster-88950http://www.undatarevolution.org/report/https://www.unocha.org/sites/unocha/files/HINA_0.pdfhttps://docs.unocha.org/sites/dms/documents/op9_understanding%20innovation_web.pdfhttp://www.worldbank.org/en/publication/wdr2016https://www.python.org/downloads/release/python-343http://brackets.io/https://notepad-plus-plus.org/fr/https://jsfiddle.net/https://carto.com/http://leafletjs.com/https://www.w3schools.com/html/default.asphttps://www.w3schools.com/css/default.asphttps://www.w3schools.com/js/default.asphttps://www.highcharts.com/https://d3js.org/https://en.wikipedia.org/wiki/Application_programming_interfacehttps://en.wikipedia.org/wiki/JSONhttp://nbviewer.jupyter.org/url/www.stats4dev.com/Ipython/Where_on_earth_is_Helen.ipynbhttps://datahelpdesk.worldbank.org/knowledgebase/articles/889392-api-documentationhttps://developer.jcdecaux.com/#/opendata/vls?page=getstartedhttps://developer.yahoo.com/yql/https://www.highcharts.com/blog/post/query-api-twitter-wacky-race-using-highcharts/http://stats4dev.com/doc/Stata%20web%20programming.pdf
https://github.com/GregVial/clue_hackathon_code,Time series analysis and prediction with RNNs,"http://cluehackathon.wattx.io/bash\n$ python train.py --help\nusage: train.py [-h] [-N_train N_TRAIN] [-N_test N_TEST] [-N_epochs N_EPOCHS]\n                [-batch_size BATCH_SIZE] [-input_size INPUT_SIZE]\n                [-output_size OUTPUT_SIZE] [-maxlen MAXLEN]\n                [-step_days STEP_DAYS] [-model {1,2}] [-weights WEIGHTS]\n                [-debug]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -N_train N_TRAIN      Number of sequences used for training. (default:\n                        100000)\n  -N_test N_TEST        Number of sequences used for testing. (default: 50000)\n  -N_epochs N_EPOCHS    Number of epochs (default: 15)\n  -batch_size BATCH_SIZE\n                        Batch size (default: 256)\n  -input_size INPUT_SIZE\n                        Input size (default: 16)\n  -output_size OUTPUT_SIZE\n                        Output size (default: 16)\n  -maxlen MAXLEN        Max length of the sequence (default: 90)\n  -step_days STEP_DAYS  STEP_DAYS (default: 3)\n  -model {1,2}          1 or 2 layers model (default: 1)\n  -weights WEIGHTS      Where to store the weights after training (default:\n                        None)\n  -debug                If True, use a reduced subset of the data. (default:\n                        False)\n\n\nbash\nusage: predict.py [-h] [-input_size INPUT_SIZE] [-output_size OUTPUT_SIZE]\n                  [-maxlen MAXLEN] [-model {1,2}] [-weights WEIGHTS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -input_size INPUT_SIZE\n                        Input size (default: 16)\n  -output_size OUTPUT_SIZE\n                        Output size (default: 16)\n  -maxlen MAXLEN        Max length of the sequence (default: 90)\n  -model {1,2}          1 or 2 layers model (default: 1)\n  -weights WEIGHTS      Where to load pretrained weights (default: None)\nhttps://github.com/felipeam86/clue_hackathon_code/blob/master/notebooks/1.0-Prepare-training-data.ipynbhttps://github.com/felipeam86/clue_hackathon_code/blob/master/notebooks/3.0-Train-LSTM-visualize-log-loss.ipynbhttps://arxiv.org/pdf/1409.2329.pdf"
https://github.com/dvu4/AIND-Recognizer, Build word recognizer for American Sign Language video sequences with Probabilistic Model,http://www.numpy.org/https://www.scipy.org/http://scikit-learn.org/0.17/install.htmlhttp://pandas.pydata.org/http://matplotlib.org/http://ipython.org/notebook.htmlhttp://hmmlearn.readthedocs.io/en/latest/http://continuum.io/downloadssh\npip install git+https://github.com/hmmlearn/hmmlearn.git\nasl_recognizer.ipynbAIND_recognizer/jupyter notebook asl_recognizer.ipynbasl_recognizer/data/http://www-i6.informatik.rwth-aachen.de/~dreuw/database-rwth-boston-104.phphand_condensed.csvboston104.handpositions.rybach-forster-dreuw-2009-09-25.full.xmlhttp://www-i6.informatik.rwth-aachen.de/~dreuw/download/021.avitrain_words.csvtest_words.csvspeaker.csv
https://github.com/bertrammueller/FBT-analyze,Scrape trades from Facebook channel and execute on IG Markets,
https://github.com/amueller/applied_ml_spring_2017,Website and material for the FIXME course on Practical Machine Learning,https://amueller.github.io/applied_ml_spring_2017/
https://github.com/kjayashankar/python-exercises,Sample Applications in Python,
https://github.com/dBeker/Faster-RCNN-TensorFlow-Python3,Tensorflow Faster R-CNN for Windows/Linux and Python 3 (3.5/3.6/3.7),https://github.com/smallcorgi/Faster-RCNN_TFhttps://github.com/rbgirshick/py-faster-rcnnhttps://www.tensorflow.org/install/install_windowspip install -r requirements.txtcondapython setup.py build_ext --inplacepython setup.py build_ext installpython setup.py build_ext --inplacehttps://github.com/rbgirshick/py-faster-rcnn#beyond-the-demo-installation-for-training-and-testing-modelsdata\\VOCDevkit2007\\VOC2007http://download.tensorflow.org/models/vgg_16_2016_08_28.tar.gzdata\\imagenet_weights\\vgg16.ckpthttps://github.com/tensorflow/models/tree/master/research/slim#pre-trained-models
https://github.com/pydata/parallel-tutorial,Parallel computing in Python tutorial materials,https://gitter.im/pydata/parallel-tutorial?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badgehttps://github.com/pydata/parallel-tutorial/archive/master.ziphttps://www.anaconda.com/downloadshttps://conda.io/miniconda.htmldata/notebooks/01-map.ipynbhttps://pydata-parallel.jovyan.org/http://pydata.github.io/parallel-tutorial/https://cloud.google.com/compute/
https://github.com/haustre/eurobot-hauptsteuerung,Eurobot 2015 Hauptsteuerung,PATH TO PROJECTPATH TO PROJECT
https://github.com/BuzzFeedNews/2017-04-fake-news-ad-trackers,"Data and analysis supporting portions of the BuzzFeed News article, ""Fake News, Real Ads,"" published April 4, 2017.",https://github.com/lilianabounegruhttp://fakenews.publicdatalab.org/https://www.buzzfeed.com/craigsilverman/fake-news-real-adsdata/observed-trackers.csvoutput/tracker-matrix.csvoutput/tracker-counts.csvoutput/tracker-matrix.csvoutput/tracker-statuses.csvoutput/tracker-matrix.csvoutput/tracker-statuses-pivot.csvoutput/tracker-statuses.csvnotebooks/analysis.ipynbhttps://github.com/BuzzFeedNews/everything
https://github.com/Automating-GIS-processes/Lesson-7-Automating-Raster-Data-Processing,Basics of raster data processing with Python and Gdal,Python-and-Gdal.ipynbhttps://classroom.github.com/assignment-invitations/e59dfd42577e7fe6d98d19d70ecccf53
https://github.com/4OH4/datascience-python-snippets,Example scripts and code fragments for data analysis and management in Python,
https://github.com/fmacrae/AI-Learning,Stuff I build while learning AI,
https://github.com/vinyasmusic/Projects,A collection of Projects undertaken while studying Data Science,
https://github.com/msk007/approximate-square-root,folder for square root HW,
https://github.com/cal859/odsc_hackathon,iPython Notebook for Challenge 1 of ODSC Hackathon,
https://github.com/whaley-group-berkeley/qspectra,Quantum simulations of nonlinear spectroscopy and dynamics for molecular aggregates,pip\ngit clone https://github.com/whaley-group-berkeley/qspectra.git\npip install -e qspectra\n-ejupyternosetests
https://github.com/dataewan/dlnd-your-first-network,First neural net from the deep learning nanodegree,
https://github.com/ub247/CrimesResearch,Crimes Reserach Masters Thesis,
https://github.com/smy5/Sandy---KimLab,Sandy's Jupyter Notebooks ,
https://github.com/smallnamespace/fireplace-profiling,Profile fireplace to look for speed gains,
